{
  "version": 3,
  "sources": ["../../@yoimu/common-lib/dist/index.esm.js"],
  "sourcesContent": ["const createEnum = obj => {\r\n\tconst translation = {};\r\n\tconst reverseEnum = {};\r\n\tconst $enum = {};\r\n\tconst keys = [];\r\n\tconst t = val => translation[val];\r\n\tconst key = val => reverseEnum[val];\r\n\tconst map = callback =>\r\n\t\tcallback ? keys.map((k, i) => callback($enum[k], k, i)) : keys;\r\n\tconst reduce = (callback, initialValue) => {\r\n\t\tlet previous = initialValue;\r\n\t\tkeys.map((k, i) => {\r\n\t\t\tprevious = callback(previous, $enum[k], k, i);\r\n\t\t});\r\n\t\treturn previous\r\n\t};\r\n\r\n\tfunction addEnum(key, val) {\r\n\t\tif (Array.isArray(val)) {\r\n\t\t\tconst [v, t] = val;\r\n\t\t\ttranslation[v] = t;\r\n\t\t\t$enum[key] = v;\r\n\t\t\treverseEnum[v] = key;\r\n\t\t} else {\r\n\t\t\t$enum[key] = val;\r\n\t\t\treverseEnum[val] = key;\r\n\t\t}\r\n\t\tkeys.push(key);\r\n\t}\r\n\r\n\tfor (const k in obj) {\r\n\t\taddEnum(k, obj[k]);\r\n\t}\r\n\r\n\treturn { ...$enum, t, key, keys, map, reduce }\r\n};\n\n/*\r\n  使用範例\r\n  申明：\r\n  值(v) or [值(v), 翻譯(t), 描述(d)]\r\n  declareEnum({ START: [0], END: [1] })\r\n  declareEnum({ START: [0, '開始'], END: [1, '結束'] })\r\n  declareEnum({ START: [0, '開始', 'START'], END: [1, '結束', 'END'] })\r\n */\r\nconst declareEnum = (obj, typeBindValue) => {\r\n\tconst keys = [];\r\n\tlet length = 0;\r\n\tconst map = callback => {\r\n\t\tif (!callback) return []\r\n\r\n\t\tconst list = [];\r\n\t\tfor (let i = 0; i < keys.length; i++) {\r\n\t\t\tconst k = keys[i];\r\n\t\t\tlist.push(callback(result[k], k, i));\r\n\t\t}\r\n\t\treturn list\r\n\t};\r\n\tconst result = { keys, length, map };\r\n\r\n\tif (typeof obj === 'object') {\r\n\t\tfor (const k in obj) {\r\n\t\t\tconst e = obj[k];\r\n\r\n\t\t\tkeys.push(k);\r\n\t\t\tlength += 1;\r\n\r\n\t\t\tif (Array.isArray(e)) {\r\n\t\t\t\tconst v = e[0];\r\n\t\t\t\tresult[k] = v;\r\n\r\n\t\t\t\tfor (let i = 1; i < e.length; i++)\r\n\t\t\t\t\tswitch (i) {\r\n\t\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t\tif (result.t == null) result.t = {};\r\n\t\t\t\t\t\t\tresult.t[v] = e[i];\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\tif (result.d == null) result.d = {};\r\n\t\t\t\t\t\t\tresult.d[v] = e[i];\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tresult[k] = e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn result\r\n};\n\nconst stepPrice = (() => {\n\tconst stepRegs = {};\n\tconst createStepReg = step => {\n\t\tconst sp = Array.from(new Array(step), (_, i) => i).reduce(\n\t\t\tp => p + '\\\\d',\n\t\t\t'',\n\t\t);\n\t\tstepRegs[step] = new RegExp(`(\\\\d)(?=(${sp})+(?!\\\\d))`, 'g');\n\t\treturn stepRegs[step]\n\t};\n\treturn (price, step = 3) => {\n\t\tlet _price = price;\n\n\t\tif (typeof price === 'number') _price = String(price);\n\n\t\tif (typeof _price === 'string') {\n\t\t\tconst priceReg = stepRegs[step] || createStepReg(step);\n\t\t\tlet sptPrices = [];\n\t\t\tif (_price.includes('.')) {\n\t\t\t\tsptPrices = _price.split('.');\n\t\t\t}\n\t\t\tif (sptPrices.length) {\n\t\t\t\t_price = sptPrices[0].replace(priceReg, '$1,') + '.' + sptPrices[1];\n\t\t\t} else {\n\t\t\t\t_price = _price.replace(priceReg, '$1,');\n\t\t\t}\n\t\t}\n\t\treturn _price\n\t}\n})();\n\n// [simple][traditional]...\nconst stObj = {\n\tt萬: '万',\n\ts万: '萬',\n\tt與: '与',\n\ts与: '與',\n\tt醜: '丑',\n\ts丑: '醜',\n\tt專: '专',\n\ts专: '專',\n\tt業: '业',\n\ts业: '業',\n\tt叢: '丛',\n\ts丛: '叢',\n\tt東: '东',\n\ts东: '東',\n\tt絲: '丝',\n\ts丝: '絲',\n\tt丟: '丢',\n\ts丢: '丟',\n\tt兩: '两',\n\ts两: '兩',\n\tt嚴: '严',\n\ts严: '嚴',\n\tt喪: '丧',\n\ts丧: '喪',\n\tt個: '个',\n\ts个: '個',\n\tt豐: '丰',\n\ts丰: '豐',\n\tt臨: '临',\n\ts临: '臨',\n\tt為: '为',\n\ts为: '為',\n\tt麗: '丽',\n\ts丽: '麗',\n\tt舉: '举',\n\ts举: '舉',\n\tt麼: '么',\n\ts么: '麼',\n\tt義: '义',\n\ts义: '義',\n\tt烏: '乌',\n\ts乌: '烏',\n\tt樂: '乐',\n\ts乐: '樂',\n\tt喬: '乔',\n\ts乔: '喬',\n\tt習: '习',\n\ts习: '習',\n\tt鄉: '乡',\n\ts乡: '鄉',\n\tt書: '书',\n\ts书: '書',\n\tt買: '买',\n\ts买: '買',\n\tt亂: '乱',\n\ts乱: '亂',\n\tt爭: '争',\n\ts争: '爭',\n\tt於: '于',\n\ts于: '於',\n\tt虧: '亏',\n\ts亏: '虧',\n\tt雲: '云',\n\ts云: '雲',\n\tt亙: '亘',\n\ts亘: '亙',\n\tt亞: '亚',\n\ts亚: '亞',\n\tt產: '产',\n\ts产: '產',\n\tt畝: '亩',\n\ts亩: '畝',\n\tt親: '亲',\n\ts亲: '親',\n\tt褻: '亵',\n\ts亵: '褻',\n\tt嚲: '亸',\n\ts亸: '嚲',\n\tt億: '亿',\n\ts亿: '億',\n\tt僅: '仅',\n\ts仅: '僅',\n\tt從: '从',\n\ts从: '從',\n\tt侖: '仑',\n\ts仑: '侖',\n\tt倉: '仓',\n\ts仓: '倉',\n\tt儀: '仪',\n\ts仪: '儀',\n\tt們: '们',\n\ts们: '們',\n\tt價: '价',\n\ts价: '價',\n\tt眾: '众',\n\ts众: '眾',\n\tt優: '优',\n\ts优: '優',\n\tt夥: '伙',\n\ts伙: '夥',\n\tt會: '会',\n\ts会: '會',\n\tt傴: '伛',\n\ts伛: '傴',\n\tt傘: '伞',\n\ts伞: '傘',\n\tt偉: '伟',\n\ts伟: '偉',\n\tt傳: '传',\n\ts传: '傳',\n\tt傷: '伤',\n\ts伤: '傷',\n\tt倀: '伥',\n\ts伥: '倀',\n\tt倫: '伦',\n\ts伦: '倫',\n\tt傖: '伧',\n\ts伧: '傖',\n\tt偽: '伪',\n\ts伪: '偽',\n\tt佇: '伫',\n\ts伫: '佇',\n\tt體: '体',\n\ts体: '體',\n\tt餘: '余',\n\ts余: '餘',\n\tt傭: '佣',\n\ts佣: '傭',\n\tt僉: '佥',\n\ts佥: '僉',\n\tt俠: '侠',\n\ts侠: '俠',\n\tt侶: '侣',\n\ts侣: '侶',\n\tt僥: '侥',\n\ts侥: '僥',\n\tt偵: '侦',\n\ts侦: '偵',\n\tt側: '侧',\n\ts侧: '側',\n\tt僑: '侨',\n\ts侨: '僑',\n\tt儈: '侩',\n\ts侩: '儈',\n\tt儕: '侪',\n\ts侪: '儕',\n\tt儂: '侬',\n\ts侬: '儂',\n\tt俁: '俣',\n\ts俣: '俁',\n\tt儔: '俦',\n\ts俦: '儔',\n\tt儼: '俨',\n\ts俨: '儼',\n\tt倆: '俩',\n\ts俩: '倆',\n\tt儷: '俪',\n\ts俪: '儷',\n\tt儉: '俭',\n\ts俭: '儉',\n\tt債: '债',\n\ts债: '債',\n\tt傾: '倾',\n\ts倾: '傾',\n\tt傯: '偬',\n\ts偬: '傯',\n\tt僂: '偻',\n\ts偻: '僂',\n\tt僨: '偾',\n\ts偾: '僨',\n\tt償: '偿',\n\ts偿: '償',\n\tt儻: '傥',\n\ts傥: '儻',\n\tt儐: '傧',\n\ts傧: '儐',\n\tt儲: '储',\n\ts储: '儲',\n\tt儺: '傩',\n\ts傩: '儺',\n\tt兒: '儿',\n\ts儿: '兒',\n\tt兌: '兑',\n\ts兑: '兌',\n\tt兗: '兖',\n\ts兖: '兗',\n\tt黨: '党',\n\ts党: '黨',\n\tt蘭: '兰',\n\ts兰: '蘭',\n\tt關: '关',\n\ts关: '關',\n\tt興: '兴',\n\ts兴: '興',\n\tt茲: '兹',\n\ts兹: '茲',\n\tt養: '养',\n\ts养: '養',\n\tt獸: '兽',\n\ts兽: '獸',\n\tt囅: '冁',\n\ts冁: '囅',\n\tt內: '内',\n\ts内: '內',\n\tt岡: '冈',\n\ts冈: '岡',\n\tt冊: '册',\n\ts册: '冊',\n\tt寫: '写',\n\ts写: '寫',\n\tt軍: '军',\n\ts军: '軍',\n\tt農: '农',\n\ts农: '農',\n\tt塚: '冢',\n\ts冢: '塚',\n\tt馮: '冯',\n\ts冯: '馮',\n\tt衝: '冲',\n\ts冲: '衝',\n\tt決: '决',\n\ts决: '決',\n\tt況: '况',\n\ts况: '況',\n\tt凍: '冻',\n\ts冻: '凍',\n\tt淨: '净',\n\ts净: '淨',\n\tt淒: '凄',\n\ts凄: '淒',\n\tt涼: '凉',\n\ts凉: '涼',\n\tt淩: '凌',\n\ts凌: '淩',\n\tt減: '减',\n\ts减: '減',\n\tt湊: '凑',\n\ts凑: '湊',\n\tt凜: '凛',\n\ts凛: '凜',\n\tt幾: '几',\n\ts几: '幾',\n\tt鳳: '凤',\n\ts凤: '鳳',\n\tt鳧: '凫',\n\ts凫: '鳧',\n\tt憑: '凭',\n\ts凭: '憑',\n\tt凱: '凯',\n\ts凯: '凱',\n\tt擊: '击',\n\ts击: '擊',\n\tt氹: '凼',\n\ts凼: '氹',\n\tt鑿: '凿',\n\ts凿: '鑿',\n\tt芻: '刍',\n\ts刍: '芻',\n\tt劃: '划',\n\ts划: '劃',\n\tt劉: '刘',\n\ts刘: '劉',\n\tt則: '则',\n\ts则: '則',\n\tt剛: '刚',\n\ts刚: '剛',\n\tt創: '创',\n\ts创: '創',\n\tt刪: '删',\n\ts删: '刪',\n\tt別: '别',\n\ts别: '彆',\n\tt剗: '刬',\n\ts刬: '剗',\n\tt剄: '刭',\n\ts刭: '剄',\n\tt劊: '刽',\n\ts刽: '劊',\n\tt劌: '刿',\n\ts刿: '劌',\n\tt剴: '剀',\n\ts剀: '剴',\n\tt劑: '剂',\n\ts剂: '劑',\n\tt剮: '剐',\n\ts剐: '剮',\n\tt劍: '剑',\n\ts剑: '劍',\n\tt剝: '剥',\n\ts剥: '剝',\n\tt劇: '剧',\n\ts剧: '劇',\n\tt勸: '劝',\n\ts劝: '勸',\n\tt辦: '办',\n\ts办: '辦',\n\tt務: '务',\n\ts务: '務',\n\tt勱: '劢',\n\ts劢: '勱',\n\tt動: '动',\n\ts动: '動',\n\tt勵: '励',\n\ts励: '勵',\n\tt勁: '劲',\n\ts劲: '勁',\n\tt勞: '劳',\n\ts劳: '勞',\n\tt勢: '势',\n\ts势: '勢',\n\tt勳: '勋',\n\ts勋: '勳',\n\tt勻: '匀',\n\ts匀: '勻',\n\tt匭: '匦',\n\ts匦: '匭',\n\tt匱: '匮',\n\ts匮: '匱',\n\tt區: '区',\n\ts区: '區',\n\tt醫: '医',\n\ts医: '醫',\n\tt華: '华',\n\ts华: '華',\n\tt協: '协',\n\ts协: '協',\n\tt單: '单',\n\ts单: '單',\n\tt賣: '卖',\n\ts卖: '賣',\n\tt盧: '卢',\n\ts卢: '盧',\n\tt鹵: '卤',\n\ts卤: '鹵',\n\tt臥: '卧',\n\ts卧: '臥',\n\tt衛: '卫',\n\ts卫: '衛',\n\tt卻: '却',\n\ts却: '郤',\n\tt廠: '厂',\n\ts厂: '廠',\n\tt廳: '厅',\n\ts厅: '廳',\n\tt曆: '历',\n\ts历: '曆',\n\tt厲: '厉',\n\ts厉: '厲',\n\tt壓: '压',\n\ts压: '壓',\n\tt厭: '厌',\n\ts厌: '厭',\n\tt厙: '厍',\n\ts厍: '厙',\n\tt廁: '厕',\n\ts厕: '廁',\n\tt廂: '厢',\n\ts厢: '廂',\n\tt厴: '厣',\n\ts厣: '厴',\n\tt廈: '厦',\n\ts厦: '廈',\n\tt廚: '厨',\n\ts厨: '廚',\n\tt廝: '厮',\n\ts厮: '廝',\n\tt縣: '县',\n\ts县: '縣',\n\tt參: '参',\n\ts参: '參',\n\tt靉: '叆',\n\ts叆: '靉',\n\tt靆: '叇',\n\ts叇: '靆',\n\tt雙: '双',\n\ts双: '雙',\n\tt發: '发',\n\ts发: '發',\n\tt變: '变',\n\ts变: '變',\n\tt敘: '叙',\n\ts叙: '敘',\n\tt疊: '叠',\n\ts叠: '疊',\n\tt葉: '叶',\n\ts叶: '葉',\n\tt號: '号',\n\ts号: '號',\n\tt歎: '叹',\n\ts叹: '歎',\n\tt嘰: '叽',\n\ts叽: '嘰',\n\tt籲: '吁',\n\ts吁: '籲',\n\tt後: '后',\n\ts后: '後',\n\tt嚇: '吓',\n\ts吓: '嚇',\n\tt呂: '吕',\n\ts吕: '呂',\n\tt嗎: '吗',\n\ts吗: '嗎',\n\tt噸: '吨',\n\ts吨: '噸',\n\tt聽: '听',\n\ts听: '聽',\n\tt啟: '启',\n\ts启: '啟',\n\tt吳: '吴',\n\ts吴: '吳',\n\tt嘸: '呒',\n\ts呒: '嘸',\n\tt囈: '呓',\n\ts呓: '囈',\n\tt嘔: '呕',\n\ts呕: '嘔',\n\tt嚦: '呖',\n\ts呖: '嚦',\n\tt唄: '呗',\n\ts呗: '唄',\n\tt員: '员',\n\ts员: '員',\n\tt嗆: '呛',\n\ts呛: '嗆',\n\tt嗚: '呜',\n\ts呜: '嗚',\n\tt詠: '咏',\n\ts咏: '詠',\n\tt嚨: '咙',\n\ts咙: '嚨',\n\tt嚀: '咛',\n\ts咛: '嚀',\n\tt噝: '咝',\n\ts咝: '噝',\n\tt鹹: '咸',\n\ts咸: '鹹',\n\tt響: '响',\n\ts响: '響',\n\tt啞: '哑',\n\ts哑: '啞',\n\tt噠: '哒',\n\ts哒: '噠',\n\tt嘵: '哓',\n\ts哓: '嘵',\n\tt嗶: '哔',\n\ts哔: '嗶',\n\tt噦: '哕',\n\ts哕: '噦',\n\tt嘩: '哗',\n\ts哗: '嘩',\n\tt噲: '哙',\n\ts哙: '噲',\n\tt嚌: '哜',\n\ts哜: '嚌',\n\tt噥: '哝',\n\ts哝: '噥',\n\tt喲: '哟',\n\ts哟: '喲',\n\tt嘜: '唛',\n\ts唛: '嘜',\n\tt嗊: '唝',\n\ts唝: '嗊',\n\tt嘮: '唠',\n\ts唠: '嘮',\n\tt嗩: '唢',\n\ts唢: '嗩',\n\tt喚: '唤',\n\ts唤: '喚',\n\tt嘖: '啧',\n\ts啧: '嘖',\n\tt嗇: '啬',\n\ts啬: '嗇',\n\tt囀: '啭',\n\ts啭: '囀',\n\tt齧: '啮',\n\ts啮: '齧',\n\tt囉: '啰',\n\ts啰: '囉',\n\tt嘽: '啴',\n\ts啴: '嘽',\n\tt嘯: '啸',\n\ts啸: '嘯',\n\tt噴: '喷',\n\ts喷: '噴',\n\tt嘍: '喽',\n\ts喽: '嘍',\n\tt嚳: '喾',\n\ts喾: '嚳',\n\tt囁: '嗫',\n\ts嗫: '囁',\n\tt噯: '嗳',\n\ts嗳: '噯',\n\tt噓: '嘘',\n\ts嘘: '噓',\n\tt嚶: '嘤',\n\ts嘤: '嚶',\n\tt囑: '嘱',\n\ts嘱: '囑',\n\tt嚕: '噜',\n\ts噜: '嚕',\n\tt囂: '嚣',\n\ts嚣: '囂',\n\tt謔: '谑',\n\ts谑: '謔',\n\tt團: '团',\n\ts团: '團',\n\tt園: '园',\n\ts园: '園',\n\tt囪: '囱',\n\ts囱: '囪',\n\tt圍: '围',\n\ts围: '圍',\n\tt圇: '囵',\n\ts囵: '圇',\n\tt國: '国',\n\ts国: '國',\n\tt圖: '图',\n\ts图: '圖',\n\tt圓: '圆',\n\ts圆: '圓',\n\tt聖: '圣',\n\ts圣: '聖',\n\tt壙: '圹',\n\ts圹: '壙',\n\tt場: '场',\n\ts场: '場',\n\tt壞: '坏',\n\ts坏: '壞',\n\tt塊: '块',\n\ts块: '塊',\n\tt堅: '坚',\n\ts坚: '堅',\n\tt壇: '坛',\n\ts坛: '壇',\n\tt壢: '坜',\n\ts坜: '壢',\n\tt壩: '坝',\n\ts坝: '壩',\n\tt塢: '坞',\n\ts坞: '塢',\n\tt墳: '坟',\n\ts坟: '墳',\n\tt墜: '坠',\n\ts坠: '墜',\n\tt壟: '垄',\n\ts垄: '壟',\n\tt壚: '垆',\n\ts垆: '壚',\n\tt壘: '垒',\n\ts垒: '壘',\n\tt墾: '垦',\n\ts垦: '墾',\n\tt堊: '垩',\n\ts垩: '堊',\n\tt墊: '垫',\n\ts垫: '墊',\n\tt埡: '垭',\n\ts垭: '埡',\n\tt塏: '垲',\n\ts垲: '塏',\n\tt塒: '埘',\n\ts埘: '塒',\n\tt塤: '埙',\n\ts埙: '塤',\n\tt堝: '埚',\n\ts埚: '堝',\n\tt塹: '堑',\n\ts堑: '塹',\n\tt墮: '堕',\n\ts堕: '墮',\n\tt牆: '墙',\n\ts墙: '牆',\n\tt壯: '壮',\n\ts壮: '壯',\n\tt聲: '声',\n\ts声: '聲',\n\tt殼: '壳',\n\ts壳: '殼',\n\tt壺: '壶',\n\ts壶: '壺',\n\tt壼: '壸',\n\ts壸: '壼',\n\tt處: '处',\n\ts处: '處',\n\tt備: '备',\n\ts备: '備',\n\tt複: '复',\n\ts复: '複',\n\tt夠: '够',\n\ts够: '夠',\n\tt頭: '头',\n\ts头: '頭',\n\tt誇: '夸',\n\ts夸: '誇',\n\tt夾: '夹',\n\ts夹: '夾',\n\tt奪: '夺',\n\ts夺: '奪',\n\tt奩: '奁',\n\ts奁: '奩',\n\tt奐: '奂',\n\ts奂: '奐',\n\tt奮: '奋',\n\ts奋: '奮',\n\tt獎: '奖',\n\ts奖: '獎',\n\tt奧: '奥',\n\ts奥: '奧',\n\tt妝: '妆',\n\ts妆: '妝',\n\tt婦: '妇',\n\ts妇: '婦',\n\tt媽: '妈',\n\ts妈: '媽',\n\tt嫵: '妩',\n\ts妩: '嫵',\n\tt嫗: '妪',\n\ts妪: '嫗',\n\tt媯: '妫',\n\ts妫: '媯',\n\tt姍: '姗',\n\ts姗: '姍',\n\tt薑: '姜',\n\ts姜: '薑',\n\tt婁: '娄',\n\ts娄: '婁',\n\tt婭: '娅',\n\ts娅: '婭',\n\tt嬈: '娆',\n\ts娆: '嬈',\n\tt嬌: '娇',\n\ts娇: '嬌',\n\tt孌: '娈',\n\ts娈: '孌',\n\tt娛: '娱',\n\ts娱: '娛',\n\tt媧: '娲',\n\ts娲: '媧',\n\tt嫻: '娴',\n\ts娴: '嫻',\n\tt嫿: '婳',\n\ts婳: '嫿',\n\tt嬰: '婴',\n\ts婴: '嬰',\n\tt嬋: '婵',\n\ts婵: '嬋',\n\tt嬸: '婶',\n\ts婶: '嬸',\n\tt媼: '媪',\n\ts媪: '媼',\n\tt嬡: '嫒',\n\ts嫒: '嬡',\n\tt嬪: '嫔',\n\ts嫔: '嬪',\n\tt嬙: '嫱',\n\ts嫱: '嬙',\n\tt嬤: '嬷',\n\ts嬷: '嬤',\n\tt孫: '孙',\n\ts孙: '孫',\n\tt學: '学',\n\ts学: '學',\n\tt孿: '孪',\n\ts孪: '孿',\n\tt寧: '宁',\n\ts宁: '寧',\n\tt寶: '宝',\n\ts宝: '寶',\n\tt實: '实',\n\ts实: '實',\n\tt寵: '宠',\n\ts宠: '寵',\n\tt審: '审',\n\ts审: '審',\n\tt憲: '宪',\n\ts宪: '憲',\n\tt宮: '宫',\n\ts宫: '宮',\n\tt寬: '宽',\n\ts宽: '寬',\n\tt賓: '宾',\n\ts宾: '賓',\n\tt寢: '寝',\n\ts寝: '寢',\n\tt對: '对',\n\ts对: '對',\n\tt尋: '寻',\n\ts寻: '尋',\n\tt導: '导',\n\ts导: '導',\n\tt壽: '寿',\n\ts寿: '壽',\n\tt將: '将',\n\ts将: '將',\n\tt爾: '尔',\n\ts尔: '爾',\n\tt塵: '尘',\n\ts尘: '塵',\n\tt堯: '尧',\n\ts尧: '堯',\n\tt尷: '尴',\n\ts尴: '尷',\n\tt屍: '尸',\n\ts尸: '屍',\n\tt盡: '尽',\n\ts尽: '儘',\n\tt層: '层',\n\ts层: '層',\n\tt屜: '屉',\n\ts屉: '屜',\n\tt屆: '届',\n\ts届: '屆',\n\tt屬: '属',\n\ts属: '屬',\n\tt屢: '屡',\n\ts屡: '屢',\n\tt屨: '屦',\n\ts屦: '屨',\n\tt嶼: '屿',\n\ts屿: '嶼',\n\tt歲: '岁',\n\ts岁: '歲',\n\tt豈: '岂',\n\ts岂: '豈',\n\tt嶇: '岖',\n\ts岖: '嶇',\n\tt崗: '岗',\n\ts岗: '崗',\n\tt峴: '岘',\n\ts岘: '峴',\n\tt嶴: '岙',\n\ts岙: '嶴',\n\tt嵐: '岚',\n\ts岚: '嵐',\n\tt島: '岛',\n\ts岛: '島',\n\tt嶺: '岭',\n\ts岭: '嶺',\n\tt嶽: '岳',\n\ts岳: '嶽',\n\tt巋: '岿',\n\ts岿: '巋',\n\tt嶧: '峄',\n\ts峄: '嶧',\n\tt峽: '峡',\n\ts峡: '峽',\n\tt嶢: '峣',\n\ts峣: '嶢',\n\tt嶠: '峤',\n\ts峤: '嶠',\n\tt崢: '峥',\n\ts峥: '崢',\n\tt巒: '峦',\n\ts峦: '巒',\n\tt嶗: '崂',\n\ts崂: '嶗',\n\tt崍: '崃',\n\ts崃: '崍',\n\tt嶮: '崄',\n\ts崄: '嶮',\n\tt嶄: '崭',\n\ts崭: '嶄',\n\tt嶸: '嵘',\n\ts嵘: '嶸',\n\tt嶔: '嵚',\n\ts嵚: '嶔',\n\tt嶁: '嵝',\n\ts嵝: '嶁',\n\tt巔: '巅',\n\ts巅: '巔',\n\tt鞏: '巩',\n\ts巩: '鞏',\n\tt巰: '巯',\n\ts巯: '巰',\n\tt幣: '币',\n\ts币: '幣',\n\tt帥: '帅',\n\ts帅: '帥',\n\tt師: '师',\n\ts师: '師',\n\tt幃: '帏',\n\ts帏: '幃',\n\tt帳: '帐',\n\ts帐: '帳',\n\tt簾: '帘',\n\ts帘: '簾',\n\tt幟: '帜',\n\ts帜: '幟',\n\tt帶: '带',\n\ts带: '帶',\n\tt幀: '帧',\n\ts帧: '幀',\n\tt幫: '帮',\n\ts帮: '幫',\n\tt幬: '帱',\n\ts帱: '幬',\n\tt幘: '帻',\n\ts帻: '幘',\n\tt幗: '帼',\n\ts帼: '幗',\n\tt冪: '幂',\n\ts幂: '冪',\n\tt幹: '干',\n\ts干: '乾',\n\tt並: '并',\n\ts并: '並',\n\tt廣: '广',\n\ts广: '廣',\n\tt莊: '庄',\n\ts庄: '莊',\n\tt慶: '庆',\n\ts庆: '慶',\n\tt廬: '庐',\n\ts庐: '廬',\n\tt廡: '庑',\n\ts庑: '廡',\n\tt庫: '库',\n\ts库: '庫',\n\tt應: '应',\n\ts应: '應',\n\tt廟: '庙',\n\ts庙: '廟',\n\tt龐: '庞',\n\ts庞: '龐',\n\tt廢: '废',\n\ts废: '廢',\n\tt廩: '廪',\n\ts廪: '廩',\n\tt開: '开',\n\ts开: '開',\n\tt異: '异',\n\ts异: '異',\n\tt棄: '弃',\n\ts弃: '棄',\n\tt張: '张',\n\ts张: '張',\n\tt彌: '弥',\n\ts弥: '彌',\n\tt弳: '弪',\n\ts弪: '弳',\n\tt彎: '弯',\n\ts弯: '彎',\n\tt彈: '弹',\n\ts弹: '彈',\n\tt強: '强',\n\ts强: '強',\n\tt歸: '归',\n\ts归: '歸',\n\tt當: '当',\n\ts当: '當',\n\tt錄: '录',\n\ts录: '錄',\n\tt彥: '彦',\n\ts彦: '彥',\n\tt徹: '彻',\n\ts彻: '徹',\n\tt徑: '径',\n\ts径: '逕',\n\tt徠: '徕',\n\ts徕: '徠',\n\tt禦: '御',\n\ts御: '禦',\n\tt憶: '忆',\n\ts忆: '憶',\n\tt懺: '忏',\n\ts忏: '懺',\n\tt憂: '忧',\n\ts忧: '憂',\n\tt愾: '忾',\n\ts忾: '愾',\n\tt懷: '怀',\n\ts怀: '懷',\n\tt態: '态',\n\ts态: '態',\n\tt慫: '怂',\n\ts怂: '慫',\n\tt憮: '怃',\n\ts怃: '憮',\n\tt慪: '怄',\n\ts怄: '慪',\n\tt悵: '怅',\n\ts怅: '悵',\n\tt愴: '怆',\n\ts怆: '愴',\n\tt憐: '怜',\n\ts怜: '憐',\n\tt總: '总',\n\ts总: '總',\n\tt懟: '怼',\n\ts怼: '懟',\n\tt懌: '怿',\n\ts怿: '懌',\n\tt戀: '恋',\n\ts恋: '戀',\n\tt懇: '恳',\n\ts恳: '懇',\n\tt惡: '恶',\n\ts恶: '惡',\n\tt慟: '恸',\n\ts恸: '慟',\n\tt懨: '恹',\n\ts恹: '懨',\n\tt愷: '恺',\n\ts恺: '愷',\n\tt惻: '恻',\n\ts恻: '惻',\n\tt惱: '恼',\n\ts恼: '惱',\n\tt惲: '恽',\n\ts恽: '惲',\n\tt悅: '悦',\n\ts悦: '悅',\n\tt愨: '悫',\n\ts悫: '愨',\n\tt懸: '悬',\n\ts悬: '懸',\n\tt慳: '悭',\n\ts悭: '慳',\n\tt憫: '悯',\n\ts悯: '憫',\n\tt驚: '惊',\n\ts惊: '驚',\n\tt懼: '惧',\n\ts惧: '懼',\n\tt慘: '惨',\n\ts惨: '慘',\n\tt懲: '惩',\n\ts惩: '懲',\n\tt憊: '惫',\n\ts惫: '憊',\n\tt愜: '惬',\n\ts惬: '愜',\n\tt慚: '惭',\n\ts惭: '慚',\n\tt憚: '惮',\n\ts惮: '憚',\n\tt慣: '惯',\n\ts惯: '慣',\n\tt慍: '愠',\n\ts愠: '慍',\n\tt憤: '愤',\n\ts愤: '憤',\n\tt憒: '愦',\n\ts愦: '憒',\n\tt願: '愿',\n\ts愿: '願',\n\tt懾: '慑',\n\ts慑: '懾',\n\tt憖: '慭',\n\ts慭: '憖',\n\tt懣: '懑',\n\ts懑: '懣',\n\tt懶: '懒',\n\ts懒: '懶',\n\tt懍: '懔',\n\ts懔: '懍',\n\tt戇: '戆',\n\ts戆: '戇',\n\tt戔: '戋',\n\ts戋: '戔',\n\tt戲: '戏',\n\ts戏: '戲',\n\tt戧: '戗',\n\ts戗: '戧',\n\tt戰: '战',\n\ts战: '戰',\n\tt戩: '戬',\n\ts戬: '戩',\n\tt戶: '户',\n\ts户: '戶',\n\tt紮: '扎',\n\ts扎: '紮',\n\tt撲: '扑',\n\ts扑: '撲',\n\tt執: '执',\n\ts执: '執',\n\tt擴: '扩',\n\ts扩: '擴',\n\tt捫: '扪',\n\ts扪: '捫',\n\tt掃: '扫',\n\ts扫: '掃',\n\tt揚: '扬',\n\ts扬: '颺',\n\tt擾: '扰',\n\ts扰: '擾',\n\tt撫: '抚',\n\ts抚: '撫',\n\tt拋: '抛',\n\ts抛: '拋',\n\tt摶: '抟',\n\ts抟: '摶',\n\tt摳: '抠',\n\ts抠: '摳',\n\tt掄: '抡',\n\ts抡: '掄',\n\tt搶: '抢',\n\ts抢: '搶',\n\tt護: '护',\n\ts护: '護',\n\tt報: '报',\n\ts报: '報',\n\tt擔: '担',\n\ts担: '擔',\n\tt擬: '拟',\n\ts拟: '擬',\n\tt攏: '拢',\n\ts拢: '攏',\n\tt揀: '拣',\n\ts拣: '揀',\n\tt擁: '拥',\n\ts拥: '擁',\n\tt攔: '拦',\n\ts拦: '攔',\n\tt擰: '拧',\n\ts拧: '擰',\n\tt撥: '拨',\n\ts拨: '撥',\n\tt擇: '择',\n\ts择: '擇',\n\tt掛: '挂',\n\ts挂: '掛',\n\tt摯: '挚',\n\ts挚: '摯',\n\tt攣: '挛',\n\ts挛: '攣',\n\tt撾: '挝',\n\ts挝: '撾',\n\tt撻: '挞',\n\ts挞: '撻',\n\tt挾: '挟',\n\ts挟: '挾',\n\tt撓: '挠',\n\ts挠: '撓',\n\tt擋: '挡',\n\ts挡: '擋',\n\tt撟: '挢',\n\ts挢: '撟',\n\tt掙: '挣',\n\ts挣: '掙',\n\tt擠: '挤',\n\ts挤: '擠',\n\tt揮: '挥',\n\ts挥: '揮',\n\tt撈: '捞',\n\ts捞: '撈',\n\tt損: '损',\n\ts损: '損',\n\tt撿: '捡',\n\ts捡: '撿',\n\tt換: '换',\n\ts换: '換',\n\tt搗: '捣',\n\ts捣: '搗',\n\tt據: '据',\n\ts据: '據',\n\tt撚: '捻',\n\ts捻: '撚',\n\tt擄: '掳',\n\ts掳: '擄',\n\tt摑: '掴',\n\ts掴: '摑',\n\tt擲: '掷',\n\ts掷: '擲',\n\tt撣: '掸',\n\ts掸: '撣',\n\tt摻: '掺',\n\ts掺: '摻',\n\tt摜: '掼',\n\ts掼: '摜',\n\tt攬: '揽',\n\ts揽: '攬',\n\tt撳: '揿',\n\ts揿: '撳',\n\tt攙: '搀',\n\ts搀: '攙',\n\tt擱: '搁',\n\ts搁: '擱',\n\tt摟: '搂',\n\ts搂: '摟',\n\tt攪: '搅',\n\ts搅: '攪',\n\tt攜: '携',\n\ts携: '攜',\n\tt攝: '摄',\n\ts摄: '攝',\n\tt攄: '摅',\n\ts摅: '攄',\n\tt擺: '摆',\n\ts摆: '擺',\n\tt搖: '摇',\n\ts摇: '搖',\n\tt擯: '摈',\n\ts摈: '擯',\n\tt攤: '摊',\n\ts摊: '攤',\n\tt攖: '撄',\n\ts撄: '攖',\n\tt撐: '撑',\n\ts撑: '撐',\n\tt攆: '撵',\n\ts撵: '攆',\n\tt擷: '撷',\n\ts撷: '擷',\n\tt擼: '撸',\n\ts撸: '擼',\n\tt攛: '撺',\n\ts撺: '攛',\n\tt擻: '擞',\n\ts擞: '擻',\n\tt攢: '攒',\n\ts攒: '攢',\n\tt敵: '敌',\n\ts敌: '敵',\n\tt斂: '敛',\n\ts敛: '斂',\n\tt數: '数',\n\ts数: '數',\n\tt齋: '斋',\n\ts斋: '齋',\n\tt斕: '斓',\n\ts斓: '斕',\n\tt鬥: '斗',\n\ts斗: '鬥',\n\tt斬: '斩',\n\ts斩: '斬',\n\tt斷: '断',\n\ts断: '斷',\n\tt無: '无',\n\ts无: '無',\n\tt舊: '旧',\n\ts旧: '舊',\n\tt時: '时',\n\ts时: '時',\n\tt曠: '旷',\n\ts旷: '曠',\n\tt暘: '旸',\n\ts旸: '暘',\n\tt曇: '昙',\n\ts昙: '曇',\n\tt晝: '昼',\n\ts昼: '晝',\n\tt曨: '昽',\n\ts昽: '曨',\n\tt顯: '显',\n\ts显: '顯',\n\tt晉: '晋',\n\ts晋: '晉',\n\tt曬: '晒',\n\ts晒: '曬',\n\tt曉: '晓',\n\ts晓: '曉',\n\tt曄: '晔',\n\ts晔: '曄',\n\tt暈: '晕',\n\ts晕: '暈',\n\tt暉: '晖',\n\ts晖: '暉',\n\tt暫: '暂',\n\ts暂: '暫',\n\tt曖: '暧',\n\ts暧: '曖',\n\tt劄: '札',\n\ts札: '劄',\n\tt術: '术',\n\ts术: '術',\n\tt樸: '朴',\n\ts朴: '樸',\n\tt機: '机',\n\ts机: '機',\n\tt殺: '杀',\n\ts杀: '殺',\n\tt雜: '杂',\n\ts杂: '雜',\n\tt權: '权',\n\ts权: '權',\n\tt條: '条',\n\ts条: '條',\n\tt來: '来',\n\ts来: '來',\n\tt楊: '杨',\n\ts杨: '楊',\n\tt榪: '杩',\n\ts杩: '榪',\n\tt傑: '杰',\n\ts杰: '傑',\n\tt極: '极',\n\ts极: '極',\n\tt構: '构',\n\ts构: '構',\n\tt樅: '枞',\n\ts枞: '樅',\n\tt樞: '枢',\n\ts枢: '樞',\n\tt棗: '枣',\n\ts枣: '棗',\n\tt櫪: '枥',\n\ts枥: '櫪',\n\tt梘: '枧',\n\ts枧: '梘',\n\tt棖: '枨',\n\ts枨: '棖',\n\tt槍: '枪',\n\ts枪: '槍',\n\tt楓: '枫',\n\ts枫: '楓',\n\tt梟: '枭',\n\ts枭: '梟',\n\tt櫃: '柜',\n\ts柜: '櫃',\n\tt檸: '柠',\n\ts柠: '檸',\n\tt檉: '柽',\n\ts柽: '檉',\n\tt梔: '栀',\n\ts栀: '梔',\n\tt柵: '栅',\n\ts栅: '柵',\n\tt標: '标',\n\ts标: '標',\n\tt棧: '栈',\n\ts栈: '棧',\n\tt櫛: '栉',\n\ts栉: '櫛',\n\tt櫳: '栊',\n\ts栊: '櫳',\n\tt棟: '栋',\n\ts栋: '棟',\n\tt櫨: '栌',\n\ts栌: '櫨',\n\tt櫟: '栎',\n\ts栎: '櫟',\n\tt欄: '栏',\n\ts栏: '欄',\n\tt樹: '树',\n\ts树: '樹',\n\tt棲: '栖',\n\ts栖: '棲',\n\tt樣: '样',\n\ts样: '樣',\n\tt欒: '栾',\n\ts栾: '欒',\n\tt椏: '桠',\n\ts桠: '椏',\n\tt橈: '桡',\n\ts桡: '橈',\n\tt楨: '桢',\n\ts桢: '楨',\n\tt檔: '档',\n\ts档: '檔',\n\tt榿: '桤',\n\ts桤: '榿',\n\tt橋: '桥',\n\ts桥: '橋',\n\tt樺: '桦',\n\ts桦: '樺',\n\tt檜: '桧',\n\ts桧: '檜',\n\tt槳: '桨',\n\ts桨: '槳',\n\tt樁: '桩',\n\ts桩: '樁',\n\tt夢: '梦',\n\ts梦: '夢',\n\tt檮: '梼',\n\ts梼: '檮',\n\tt檢: '检',\n\ts检: '檢',\n\tt欞: '棂',\n\ts棂: '欞',\n\tt槨: '椁',\n\ts椁: '槨',\n\tt櫝: '椟',\n\ts椟: '櫝',\n\tt槧: '椠',\n\ts椠: '槧',\n\tt欏: '椤',\n\ts椤: '欏',\n\tt橢: '椭',\n\ts椭: '橢',\n\tt樓: '楼',\n\ts楼: '樓',\n\tt欖: '榄',\n\ts榄: '欖',\n\tt櫬: '榇',\n\ts榇: '櫬',\n\tt櫚: '榈',\n\ts榈: '櫚',\n\tt櫸: '榉',\n\ts榉: '櫸',\n\tt檟: '槚',\n\ts槚: '檟',\n\tt檻: '槛',\n\ts槛: '檻',\n\tt檳: '槟',\n\ts槟: '檳',\n\tt櫧: '槠',\n\ts槠: '櫧',\n\tt橫: '横',\n\ts横: '橫',\n\tt檣: '樯',\n\ts樯: '檣',\n\tt櫻: '樱',\n\ts樱: '櫻',\n\tt櫫: '橥',\n\ts橥: '櫫',\n\tt櫥: '橱',\n\ts橱: '櫥',\n\tt櫓: '橹',\n\ts橹: '櫓',\n\tt櫞: '橼',\n\ts橼: '櫞',\n\tt簷: '檐',\n\ts檐: '簷',\n\tt檁: '檩',\n\ts檩: '檁',\n\tt歡: '欢',\n\ts欢: '歡',\n\tt歟: '欤',\n\ts欤: '歟',\n\tt歐: '欧',\n\ts欧: '歐',\n\tt殲: '歼',\n\ts歼: '殲',\n\tt歿: '殁',\n\ts殁: '歿',\n\tt殤: '殇',\n\ts殇: '殤',\n\tt殘: '残',\n\ts残: '殘',\n\tt殞: '殒',\n\ts殒: '殞',\n\tt殮: '殓',\n\ts殓: '殮',\n\tt殫: '殚',\n\ts殚: '殫',\n\tt殯: '殡',\n\ts殡: '殯',\n\tt毆: '殴',\n\ts殴: '毆',\n\tt毀: '毁',\n\ts毁: '毀',\n\tt轂: '毂',\n\ts毂: '轂',\n\tt畢: '毕',\n\ts毕: '畢',\n\tt斃: '毙',\n\ts毙: '斃',\n\tt氈: '毡',\n\ts毡: '氈',\n\tt毿: '毵',\n\ts毵: '毿',\n\tt氌: '氇',\n\ts氇: '氌',\n\tt氣: '气',\n\ts气: '氣',\n\tt氫: '氢',\n\ts氢: '氫',\n\tt氬: '氩',\n\ts氩: '氬',\n\tt氳: '氲',\n\ts氲: '氳',\n\tt彙: '汇',\n\ts汇: '彙',\n\tt漢: '汉',\n\ts汉: '漢',\n\tt汙: '污',\n\ts污: '汙',\n\tt湯: '汤',\n\ts汤: '湯',\n\tt洶: '汹',\n\ts汹: '洶',\n\tt溝: '沟',\n\ts沟: '溝',\n\tt沒: '没',\n\ts没: '沒',\n\tt灃: '沣',\n\ts沣: '灃',\n\tt漚: '沤',\n\ts沤: '漚',\n\tt瀝: '沥',\n\ts沥: '瀝',\n\tt淪: '沦',\n\ts沦: '淪',\n\tt滄: '沧',\n\ts沧: '滄',\n\tt渢: '沨',\n\ts沨: '渢',\n\tt溈: '沩',\n\ts沩: '溈',\n\tt滬: '沪',\n\ts沪: '滬',\n\tt濔: '沵',\n\ts沵: '濔',\n\tt濘: '泞',\n\ts泞: '濘',\n\tt淚: '泪',\n\ts泪: '淚',\n\tt澩: '泶',\n\ts泶: '澩',\n\tt瀧: '泷',\n\ts泷: '瀧',\n\tt瀘: '泸',\n\ts泸: '瀘',\n\tt濼: '泺',\n\ts泺: '濼',\n\tt瀉: '泻',\n\ts泻: '瀉',\n\tt潑: '泼',\n\ts泼: '潑',\n\tt澤: '泽',\n\ts泽: '澤',\n\tt涇: '泾',\n\ts泾: '涇',\n\tt潔: '洁',\n\ts洁: '潔',\n\tt灑: '洒',\n\ts洒: '灑',\n\tt窪: '洼',\n\ts洼: '窪',\n\tt浹: '浃',\n\ts浃: '浹',\n\tt淺: '浅',\n\ts浅: '淺',\n\tt漿: '浆',\n\ts浆: '漿',\n\tt澆: '浇',\n\ts浇: '澆',\n\tt湞: '浈',\n\ts浈: '湞',\n\tt濁: '浊',\n\ts浊: '濁',\n\tt測: '测',\n\ts测: '測',\n\tt澮: '浍',\n\ts浍: '澮',\n\tt濟: '济',\n\ts济: '濟',\n\tt瀏: '浏',\n\ts浏: '瀏',\n\tt滻: '浐',\n\ts浐: '滻',\n\tt渾: '浑',\n\ts浑: '渾',\n\tt滸: '浒',\n\ts浒: '滸',\n\tt濃: '浓',\n\ts浓: '濃',\n\tt潯: '浔',\n\ts浔: '潯',\n\tt塗: '涂',\n\ts涂: '塗',\n\tt湧: '涌',\n\ts涌: '湧',\n\tt濤: '涛',\n\ts涛: '濤',\n\tt澇: '涝',\n\ts涝: '澇',\n\tt淶: '涞',\n\ts涞: '淶',\n\tt漣: '涟',\n\ts涟: '漣',\n\tt潿: '涠',\n\ts涠: '潿',\n\tt渦: '涡',\n\ts涡: '渦',\n\tt溳: '涢',\n\ts涢: '溳',\n\tt渙: '涣',\n\ts涣: '渙',\n\tt滌: '涤',\n\ts涤: '滌',\n\tt潤: '润',\n\ts润: '潤',\n\tt澗: '涧',\n\ts涧: '澗',\n\tt漲: '涨',\n\ts涨: '漲',\n\tt澀: '涩',\n\ts涩: '澀',\n\tt澱: '淀',\n\ts淀: '澱',\n\tt淵: '渊',\n\ts渊: '淵',\n\tt淥: '渌',\n\ts渌: '淥',\n\tt漬: '渍',\n\ts渍: '漬',\n\tt瀆: '渎',\n\ts渎: '瀆',\n\tt漸: '渐',\n\ts渐: '漸',\n\tt澠: '渑',\n\ts渑: '澠',\n\tt漁: '渔',\n\ts渔: '漁',\n\tt瀋: '沈',\n\ts沈: '瀋',\n\tt滲: '渗',\n\ts渗: '滲',\n\tt溫: '温',\n\ts温: '溫',\n\tt遊: '游',\n\ts游: '遊',\n\tt灣: '湾',\n\ts湾: '灣',\n\tt濕: '湿',\n\ts湿: '濕',\n\tt潰: '溃',\n\ts溃: '潰',\n\tt濺: '溅',\n\ts溅: '濺',\n\tt漊: '溇',\n\ts溇: '漊',\n\tt滾: '滚',\n\ts滚: '滾',\n\tt滯: '滞',\n\ts滞: '滯',\n\tt灩: '滟',\n\ts滟: '灩',\n\tt灄: '滠',\n\ts滠: '灄',\n\tt滿: '满',\n\ts满: '滿',\n\tt瀅: '滢',\n\ts滢: '瀅',\n\tt濾: '滤',\n\ts滤: '濾',\n\tt濫: '滥',\n\ts滥: '濫',\n\tt灤: '滦',\n\ts滦: '灤',\n\tt濱: '滨',\n\ts滨: '濱',\n\tt灘: '滩',\n\ts滩: '灘',\n\tt澦: '滪',\n\ts滪: '澦',\n\tt瀠: '潆',\n\ts潆: '瀠',\n\tt瀟: '潇',\n\ts潇: '瀟',\n\tt瀲: '潋',\n\ts潋: '瀲',\n\tt濰: '潍',\n\ts潍: '濰',\n\tt潛: '潜',\n\ts潜: '潛',\n\tt瀦: '潴',\n\ts潴: '瀦',\n\tt瀾: '澜',\n\ts澜: '瀾',\n\tt瀨: '濑',\n\ts濑: '瀨',\n\tt瀕: '濒',\n\ts濒: '瀕',\n\tt灝: '灏',\n\ts灏: '灝',\n\tt滅: '灭',\n\ts灭: '滅',\n\tt燈: '灯',\n\ts灯: '燈',\n\tt靈: '灵',\n\ts灵: '靈',\n\tt災: '灾',\n\ts灾: '災',\n\tt燦: '灿',\n\ts灿: '燦',\n\tt煬: '炀',\n\ts炀: '煬',\n\tt爐: '炉',\n\ts炉: '爐',\n\tt燉: '炖',\n\ts炖: '燉',\n\tt煒: '炜',\n\ts炜: '煒',\n\tt熗: '炝',\n\ts炝: '熗',\n\tt點: '点',\n\ts点: '點',\n\tt煉: '炼',\n\ts炼: '煉',\n\tt熾: '炽',\n\ts炽: '熾',\n\tt爍: '烁',\n\ts烁: '爍',\n\tt爛: '烂',\n\ts烂: '爛',\n\tt烴: '烃',\n\ts烃: '烴',\n\tt燭: '烛',\n\ts烛: '燭',\n\tt煙: '烟',\n\ts烟: '煙',\n\tt煩: '烦',\n\ts烦: '煩',\n\tt燒: '烧',\n\ts烧: '燒',\n\tt燁: '烨',\n\ts烨: '燁',\n\tt燴: '烩',\n\ts烩: '燴',\n\tt燙: '烫',\n\ts烫: '燙',\n\tt燼: '烬',\n\ts烬: '燼',\n\tt熱: '热',\n\ts热: '熱',\n\tt煥: '焕',\n\ts焕: '煥',\n\tt燜: '焖',\n\ts焖: '燜',\n\tt燾: '焘',\n\ts焘: '燾',\n\tt愛: '爱',\n\ts爱: '愛',\n\tt爺: '爷',\n\ts爷: '爺',\n\tt牘: '牍',\n\ts牍: '牘',\n\tt犛: '牦',\n\ts牦: '犛',\n\tt牽: '牵',\n\ts牵: '牽',\n\tt犧: '牺',\n\ts牺: '犧',\n\tt犢: '犊',\n\ts犊: '犢',\n\tt狀: '状',\n\ts状: '狀',\n\tt獷: '犷',\n\ts犷: '獷',\n\tt獁: '犸',\n\ts犸: '獁',\n\tt猶: '犹',\n\ts犹: '猶',\n\tt狽: '狈',\n\ts狈: '狽',\n\tt獮: '狝',\n\ts狝: '獮',\n\tt獰: '狞',\n\ts狞: '獰',\n\tt獨: '独',\n\ts独: '獨',\n\tt狹: '狭',\n\ts狭: '狹',\n\tt獅: '狮',\n\ts狮: '獅',\n\tt獪: '狯',\n\ts狯: '獪',\n\tt猙: '狰',\n\ts狰: '猙',\n\tt獄: '狱',\n\ts狱: '獄',\n\tt猻: '狲',\n\ts狲: '猻',\n\tt獫: '猃',\n\ts猃: '獫',\n\tt獵: '猎',\n\ts猎: '獵',\n\tt獼: '猕',\n\ts猕: '獼',\n\tt玀: '猡',\n\ts猡: '玀',\n\tt豬: '猪',\n\ts猪: '豬',\n\tt貓: '猫',\n\ts猫: '貓',\n\tt蝟: '猬',\n\ts猬: '蝟',\n\tt獻: '献',\n\ts献: '獻',\n\tt獺: '獭',\n\ts獭: '獺',\n\tt璣: '玑',\n\ts玑: '璣',\n\tt璵: '玙',\n\ts玙: '璵',\n\tt瑪: '玛',\n\ts玛: '瑪',\n\tt瑋: '玮',\n\ts玮: '瑋',\n\tt環: '环',\n\ts环: '環',\n\tt現: '现',\n\ts现: '現',\n\tt瑲: '玱',\n\ts玱: '瑲',\n\tt璽: '玺',\n\ts玺: '璽',\n\tt琺: '珐',\n\ts珐: '琺',\n\tt瓏: '珑',\n\ts珑: '瓏',\n\tt璫: '珰',\n\ts珰: '璫',\n\tt琿: '珲',\n\ts珲: '琿',\n\tt璡: '琎',\n\ts琎: '璡',\n\tt璉: '琏',\n\ts琏: '璉',\n\tt瑣: '琐',\n\ts琐: '瑣',\n\tt瓊: '琼',\n\ts琼: '瓊',\n\tt瑤: '瑶',\n\ts瑶: '瑤',\n\tt璦: '瑷',\n\ts瑷: '璦',\n\tt瓔: '璎',\n\ts璎: '瓔',\n\tt瓚: '瓒',\n\ts瓒: '瓚',\n\tt甕: '瓮',\n\ts瓮: '甕',\n\tt甌: '瓯',\n\ts瓯: '甌',\n\tt電: '电',\n\ts电: '電',\n\tt畫: '画',\n\ts画: '畫',\n\tt暢: '畅',\n\ts畅: '暢',\n\tt疇: '畴',\n\ts畴: '疇',\n\tt癤: '疖',\n\ts疖: '癤',\n\tt療: '疗',\n\ts疗: '療',\n\tt瘧: '疟',\n\ts疟: '瘧',\n\tt癘: '疠',\n\ts疠: '癘',\n\tt瘍: '疡',\n\ts疡: '瘍',\n\tt瘡: '疮',\n\ts疮: '瘡',\n\tt瘋: '疯',\n\ts疯: '瘋',\n\tt皰: '疱',\n\ts疱: '皰',\n\tt癰: '痈',\n\ts痈: '癰',\n\tt痙: '痉',\n\ts痉: '痙',\n\tt癢: '痒',\n\ts痒: '癢',\n\tt瘂: '痖',\n\ts痖: '瘂',\n\tt癆: '痨',\n\ts痨: '癆',\n\tt瘓: '痪',\n\ts痪: '瘓',\n\tt癇: '痫',\n\ts痫: '癇',\n\tt癡: '痴',\n\ts痴: '癡',\n\tt癉: '瘅',\n\ts瘅: '癉',\n\tt瘞: '瘗',\n\ts瘗: '瘞',\n\tt瘺: '瘘',\n\ts瘘: '瘺',\n\tt癟: '瘪',\n\ts瘪: '癟',\n\tt癱: '瘫',\n\ts瘫: '癱',\n\tt癮: '瘾',\n\ts瘾: '癮',\n\tt癭: '瘿',\n\ts瘿: '癭',\n\tt癩: '癞',\n\ts癞: '癩',\n\tt癬: '癣',\n\ts癣: '癬',\n\tt癲: '癫',\n\ts癫: '癲',\n\tt皚: '皑',\n\ts皑: '皚',\n\tt皺: '皱',\n\ts皱: '皺',\n\tt皸: '皲',\n\ts皲: '皸',\n\tt盞: '盏',\n\ts盏: '盞',\n\tt鹽: '盐',\n\ts盐: '鹽',\n\tt監: '监',\n\ts监: '監',\n\tt蓋: '盖',\n\ts盖: '蓋',\n\tt盜: '盗',\n\ts盗: '盜',\n\tt盤: '盘',\n\ts盘: '盤',\n\tt眥: '眦',\n\ts眦: '眥',\n\tt矓: '胧',\n\ts胧: '朧',\n\tt著: '着',\n\ts着: '著',\n\tt睜: '睁',\n\ts睁: '睜',\n\tt睞: '睐',\n\ts睐: '睞',\n\tt瞼: '睑',\n\ts睑: '瞼',\n\tt瞞: '瞒',\n\ts瞒: '瞞',\n\tt矚: '瞩',\n\ts瞩: '矚',\n\tt矯: '矫',\n\ts矫: '矯',\n\tt磯: '矶',\n\ts矶: '磯',\n\tt礬: '矾',\n\ts矾: '礬',\n\tt礦: '矿',\n\ts矿: '礦',\n\tt碭: '砀',\n\ts砀: '碭',\n\tt碼: '码',\n\ts码: '碼',\n\tt磚: '砖',\n\ts砖: '磚',\n\tt硨: '砗',\n\ts砗: '硨',\n\tt硯: '砚',\n\ts砚: '硯',\n\tt礪: '砺',\n\ts砺: '礪',\n\tt礱: '砻',\n\ts砻: '礱',\n\tt礫: '砾',\n\ts砾: '礫',\n\tt礎: '础',\n\ts础: '礎',\n\tt硜: '硁',\n\ts硁: '硜',\n\tt碩: '硕',\n\ts硕: '碩',\n\tt硤: '硖',\n\ts硖: '硤',\n\tt磽: '硗',\n\ts硗: '磽',\n\tt磑: '硙',\n\ts硙: '磑',\n\tt礄: '硚',\n\ts硚: '礄',\n\tt確: '确',\n\ts确: '確',\n\tt鹼: '碱',\n\ts碱: '鹼',\n\tt礙: '碍',\n\ts碍: '礙',\n\tt磧: '碛',\n\ts碛: '磧',\n\tt磣: '碜',\n\ts碜: '磣',\n\tt禮: '礼',\n\ts礼: '禮',\n\tt禕: '祎',\n\ts祎: '禕',\n\tt禰: '祢',\n\ts祢: '禰',\n\tt禎: '祯',\n\ts祯: '禎',\n\tt禱: '祷',\n\ts祷: '禱',\n\tt禍: '祸',\n\ts祸: '禍',\n\tt稟: '禀',\n\ts禀: '稟',\n\tt祿: '禄',\n\ts禄: '祿',\n\tt禪: '禅',\n\ts禅: '禪',\n\tt離: '离',\n\ts离: '離',\n\tt禿: '秃',\n\ts秃: '禿',\n\tt稈: '秆',\n\ts秆: '稈',\n\tt種: '种',\n\ts种: '種',\n\tt積: '积',\n\ts积: '積',\n\tt稱: '称',\n\ts称: '稱',\n\tt穢: '秽',\n\ts秽: '穢',\n\tt穠: '秾',\n\ts秾: '穠',\n\tt稅: '税',\n\ts税: '稅',\n\tt穌: '稣',\n\ts稣: '穌',\n\tt穩: '稳',\n\ts稳: '穩',\n\tt穡: '穑',\n\ts穑: '穡',\n\tt窮: '穷',\n\ts穷: '窮',\n\tt竊: '窃',\n\ts窃: '竊',\n\tt竅: '窍',\n\ts窍: '竅',\n\tt窯: '窑',\n\ts窑: '窯',\n\tt竄: '窜',\n\ts窜: '竄',\n\tt窩: '窝',\n\ts窝: '窩',\n\tt窺: '窥',\n\ts窥: '窺',\n\tt竇: '窦',\n\ts窦: '竇',\n\tt窶: '窭',\n\ts窭: '窶',\n\tt豎: '竖',\n\ts竖: '豎',\n\tt競: '竞',\n\ts竞: '競',\n\tt篤: '笃',\n\ts笃: '篤',\n\tt筍: '笋',\n\ts笋: '筍',\n\tt筆: '笔',\n\ts笔: '筆',\n\tt筧: '笕',\n\ts笕: '筧',\n\tt箋: '笺',\n\ts笺: '箋',\n\tt籠: '笼',\n\ts笼: '籠',\n\tt籩: '笾',\n\ts笾: '籩',\n\tt築: '筑',\n\ts筑: '築',\n\tt篳: '筚',\n\ts筚: '篳',\n\tt篩: '筛',\n\ts筛: '篩',\n\tt簹: '筜',\n\ts筜: '簹',\n\tt箏: '筝',\n\ts筝: '箏',\n\tt籌: '筹',\n\ts筹: '籌',\n\tt簽: '签',\n\ts签: '簽',\n\tt簡: '简',\n\ts简: '簡',\n\tt籙: '箓',\n\ts箓: '籙',\n\tt簀: '箦',\n\ts箦: '簀',\n\tt篋: '箧',\n\ts箧: '篋',\n\tt籜: '箨',\n\ts箨: '籜',\n\tt籮: '箩',\n\ts箩: '籮',\n\tt簞: '箪',\n\ts箪: '簞',\n\tt簫: '箫',\n\ts箫: '簫',\n\tt簣: '篑',\n\ts篑: '簣',\n\tt簍: '篓',\n\ts篓: '簍',\n\tt籃: '篮',\n\ts篮: '籃',\n\tt籬: '篱',\n\ts篱: '籬',\n\tt籟: '籁',\n\ts籁: '籟',\n\tt糴: '籴',\n\ts籴: '糴',\n\tt類: '类',\n\ts类: '類',\n\tt秈: '籼',\n\ts籼: '秈',\n\tt糶: '粜',\n\ts粜: '糶',\n\tt糲: '粝',\n\ts粝: '糲',\n\tt粵: '粤',\n\ts粤: '粵',\n\tt糞: '粪',\n\ts粪: '糞',\n\tt糧: '粮',\n\ts粮: '糧',\n\tt糝: '糁',\n\ts糁: '糝',\n\tt餱: '糇',\n\ts糇: '餱',\n\tt緊: '紧',\n\ts紧: '緊',\n\tt縶: '絷',\n\ts絷: '縶',\n\tt糾: '纠',\n\ts纠: '糾',\n\tt紆: '纡',\n\ts纡: '紆',\n\tt紅: '红',\n\ts红: '紅',\n\tt紂: '纣',\n\ts纣: '紂',\n\tt纖: '纤',\n\ts纤: '纖',\n\tt紇: '纥',\n\ts纥: '紇',\n\tt約: '约',\n\ts约: '約',\n\tt級: '级',\n\ts级: '級',\n\tt紈: '纨',\n\ts纨: '紈',\n\tt纊: '纩',\n\ts纩: '纊',\n\tt紀: '纪',\n\ts纪: '紀',\n\tt紉: '纫',\n\ts纫: '紉',\n\tt緯: '纬',\n\ts纬: '緯',\n\tt紜: '纭',\n\ts纭: '紜',\n\tt紘: '纮',\n\ts纮: '紘',\n\tt純: '纯',\n\ts纯: '純',\n\tt紕: '纰',\n\ts纰: '紕',\n\tt紗: '纱',\n\ts纱: '紗',\n\tt綱: '纲',\n\ts纲: '綱',\n\tt納: '纳',\n\ts纳: '納',\n\tt紝: '纴',\n\ts纴: '紝',\n\tt縱: '纵',\n\ts纵: '縱',\n\tt綸: '纶',\n\ts纶: '綸',\n\tt紛: '纷',\n\ts纷: '紛',\n\tt紙: '纸',\n\ts纸: '紙',\n\tt紋: '纹',\n\ts纹: '紋',\n\tt紡: '纺',\n\ts纺: '紡',\n\tt紵: '纻',\n\ts纻: '紵',\n\tt紐: '纽',\n\ts纽: '紐',\n\tt紓: '纾',\n\ts纾: '紓',\n\tt線: '线',\n\ts线: '線',\n\tt紺: '绀',\n\ts绀: '紺',\n\tt絏: '绁',\n\ts绁: '絏',\n\tt紱: '绂',\n\ts绂: '紱',\n\tt練: '练',\n\ts练: '練',\n\tt組: '组',\n\ts组: '組',\n\tt紳: '绅',\n\ts绅: '紳',\n\tt細: '细',\n\ts细: '細',\n\tt織: '织',\n\ts织: '織',\n\tt終: '终',\n\ts终: '終',\n\tt縐: '绉',\n\ts绉: '縐',\n\tt絆: '绊',\n\ts绊: '絆',\n\tt紼: '绋',\n\ts绋: '紼',\n\tt絀: '绌',\n\ts绌: '絀',\n\tt紹: '绍',\n\ts绍: '紹',\n\tt繹: '绎',\n\ts绎: '繹',\n\tt經: '经',\n\ts经: '經',\n\tt紿: '绐',\n\ts绐: '紿',\n\tt綁: '绑',\n\ts绑: '綁',\n\tt絨: '绒',\n\ts绒: '絨',\n\tt結: '结',\n\ts结: '結',\n\tt絝: '绔',\n\ts绔: '絝',\n\tt繞: '绕',\n\ts绕: '繞',\n\tt絰: '绖',\n\ts绖: '絰',\n\tt絎: '绗',\n\ts绗: '絎',\n\tt繪: '绘',\n\ts绘: '繪',\n\tt給: '给',\n\ts给: '給',\n\tt絢: '绚',\n\ts绚: '絢',\n\tt絳: '绛',\n\ts绛: '絳',\n\tt絡: '络',\n\ts络: '絡',\n\tt絕: '绝',\n\ts绝: '絕',\n\tt絞: '绞',\n\ts绞: '絞',\n\tt統: '统',\n\ts统: '統',\n\tt綆: '绠',\n\ts绠: '綆',\n\tt綃: '绡',\n\ts绡: '綃',\n\tt絹: '绢',\n\ts绢: '絹',\n\tt繡: '绣',\n\ts绣: '繡',\n\tt綏: '绥',\n\ts绥: '綏',\n\tt絛: '绦',\n\ts绦: '絛',\n\tt繼: '继',\n\ts继: '繼',\n\tt綈: '绨',\n\ts绨: '綈',\n\tt績: '绩',\n\ts绩: '績',\n\tt緒: '绪',\n\ts绪: '緒',\n\tt綾: '绫',\n\ts绫: '綾',\n\tt續: '续',\n\ts续: '續',\n\tt綺: '绮',\n\ts绮: '綺',\n\tt緋: '绯',\n\ts绯: '緋',\n\tt綽: '绰',\n\ts绰: '綽',\n\tt緄: '绲',\n\ts绲: '緄',\n\tt繩: '绳',\n\ts绳: '繩',\n\tt維: '维',\n\ts维: '維',\n\tt綿: '绵',\n\ts绵: '綿',\n\tt綬: '绶',\n\ts绶: '綬',\n\tt繃: '绷',\n\ts绷: '繃',\n\tt綢: '绸',\n\ts绸: '綢',\n\tt綹: '绺',\n\ts绺: '綹',\n\tt綣: '绻',\n\ts绻: '綣',\n\tt綜: '综',\n\ts综: '綜',\n\tt綻: '绽',\n\ts绽: '綻',\n\tt綰: '绾',\n\ts绾: '綰',\n\tt綠: '绿',\n\ts绿: '綠',\n\tt綴: '缀',\n\ts缀: '綴',\n\tt緇: '缁',\n\ts缁: '緇',\n\tt緙: '缂',\n\ts缂: '緙',\n\tt緗: '缃',\n\ts缃: '緗',\n\tt緘: '缄',\n\ts缄: '緘',\n\tt緬: '缅',\n\ts缅: '緬',\n\tt纜: '缆',\n\ts缆: '纜',\n\tt緹: '缇',\n\ts缇: '緹',\n\tt緲: '缈',\n\ts缈: '緲',\n\tt緝: '缉',\n\ts缉: '緝',\n\tt繢: '缋',\n\ts缋: '繢',\n\tt緦: '缌',\n\ts缌: '緦',\n\tt綞: '缍',\n\ts缍: '綞',\n\tt緞: '缎',\n\ts缎: '緞',\n\tt緶: '缏',\n\ts缏: '緶',\n\tt緱: '缑',\n\ts缑: '緱',\n\tt縋: '缒',\n\ts缒: '縋',\n\tt緩: '缓',\n\ts缓: '緩',\n\tt締: '缔',\n\ts缔: '締',\n\tt縷: '缕',\n\ts缕: '縷',\n\tt編: '编',\n\ts编: '編',\n\tt緡: '缗',\n\ts缗: '緡',\n\tt緣: '缘',\n\ts缘: '緣',\n\tt縉: '缙',\n\ts缙: '縉',\n\tt縛: '缚',\n\ts缚: '縛',\n\tt縟: '缛',\n\ts缛: '縟',\n\tt縝: '缜',\n\ts缜: '縝',\n\tt縫: '缝',\n\ts缝: '縫',\n\tt縗: '缞',\n\ts缞: '縗',\n\tt縞: '缟',\n\ts缟: '縞',\n\tt纏: '缠',\n\ts缠: '纏',\n\tt縭: '缡',\n\ts缡: '縭',\n\tt縊: '缢',\n\ts缢: '縊',\n\tt縑: '缣',\n\ts缣: '縑',\n\tt繽: '缤',\n\ts缤: '繽',\n\tt縹: '缥',\n\ts缥: '縹',\n\tt縵: '缦',\n\ts缦: '縵',\n\tt縲: '缧',\n\ts缧: '縲',\n\tt纓: '缨',\n\ts缨: '纓',\n\tt縮: '缩',\n\ts缩: '縮',\n\tt繆: '缪',\n\ts缪: '繆',\n\tt繅: '缫',\n\ts缫: '繅',\n\tt纈: '缬',\n\ts缬: '纈',\n\tt繚: '缭',\n\ts缭: '繚',\n\tt繕: '缮',\n\ts缮: '繕',\n\tt繒: '缯',\n\ts缯: '繒',\n\tt韁: '缰',\n\ts缰: '韁',\n\tt繾: '缱',\n\ts缱: '繾',\n\tt繰: '缲',\n\ts缲: '繰',\n\tt繯: '缳',\n\ts缳: '繯',\n\tt繳: '缴',\n\ts缴: '繳',\n\tt纘: '缵',\n\ts缵: '纘',\n\tt罌: '罂',\n\ts罂: '罌',\n\tt網: '网',\n\ts网: '網',\n\tt羅: '罗',\n\ts罗: '羅',\n\tt罰: '罚',\n\ts罚: '罰',\n\tt罷: '罢',\n\ts罢: '罷',\n\tt羆: '罴',\n\ts罴: '羆',\n\tt羈: '羁',\n\ts羁: '羈',\n\tt羥: '羟',\n\ts羟: '羥',\n\tt羨: '羡',\n\ts羡: '羨',\n\tt翹: '翘',\n\ts翘: '翹',\n\tt翽: '翙',\n\ts翙: '翽',\n\tt翬: '翚',\n\ts翚: '翬',\n\tt耬: '耧',\n\ts耧: '耬',\n\tt聳: '耸',\n\ts耸: '聳',\n\tt恥: '耻',\n\ts耻: '恥',\n\tt聶: '聂',\n\ts聂: '聶',\n\tt聾: '聋',\n\ts聋: '聾',\n\tt職: '职',\n\ts职: '職',\n\tt聹: '聍',\n\ts聍: '聹',\n\tt聯: '联',\n\ts联: '聯',\n\tt聵: '聩',\n\ts聩: '聵',\n\tt聰: '聪',\n\ts聪: '聰',\n\tt肅: '肃',\n\ts肃: '肅',\n\tt腸: '肠',\n\ts肠: '腸',\n\tt膚: '肤',\n\ts肤: '膚',\n\tt腎: '肾',\n\ts肾: '腎',\n\tt腫: '肿',\n\ts肿: '腫',\n\tt脹: '胀',\n\ts胀: '脹',\n\tt脅: '胁',\n\ts胁: '脅',\n\tt膽: '胆',\n\ts胆: '膽',\n\tt勝: '胜',\n\ts胜: '勝',\n\tt朧: '胧',\n\tt臚: '胪',\n\ts胪: '臚',\n\tt脛: '胫',\n\ts胫: '脛',\n\tt膠: '胶',\n\ts胶: '膠',\n\tt脈: '脉',\n\ts脉: '脈',\n\tt膾: '脍',\n\ts脍: '膾',\n\tt髒: '脏',\n\ts脏: '臟',\n\tt臍: '脐',\n\ts脐: '臍',\n\tt腦: '脑',\n\ts脑: '腦',\n\tt膿: '脓',\n\ts脓: '膿',\n\tt臠: '脔',\n\ts脔: '臠',\n\tt腳: '脚',\n\ts脚: '腳',\n\tt脫: '脱',\n\ts脱: '脫',\n\tt腡: '脶',\n\ts脶: '腡',\n\tt臉: '脸',\n\ts脸: '臉',\n\tt臘: '腊',\n\ts腊: '臘',\n\tt醃: '腌',\n\ts腌: '醃',\n\tt膕: '腘',\n\ts腘: '膕',\n\tt齶: '腭',\n\ts腭: '齶',\n\tt膩: '腻',\n\ts腻: '膩',\n\tt靦: '腼',\n\ts腼: '靦',\n\tt膃: '腽',\n\ts腽: '膃',\n\tt騰: '腾',\n\ts腾: '騰',\n\tt臏: '膑',\n\ts膑: '臏',\n\tt臢: '臜',\n\ts臜: '臢',\n\tt輿: '舆',\n\ts舆: '輿',\n\tt艤: '舣',\n\ts舣: '艤',\n\tt艦: '舰',\n\ts舰: '艦',\n\tt艙: '舱',\n\ts舱: '艙',\n\tt艫: '舻',\n\ts舻: '艫',\n\tt艱: '艰',\n\ts艰: '艱',\n\tt豔: '艳',\n\ts艳: '豔',\n\tt藝: '艺',\n\ts艺: '藝',\n\tt節: '节',\n\ts节: '節',\n\tt羋: '芈',\n\ts芈: '羋',\n\tt薌: '芗',\n\ts芗: '薌',\n\tt蕪: '芜',\n\ts芜: '蕪',\n\tt蘆: '芦',\n\ts芦: '蘆',\n\tt蓯: '苁',\n\ts苁: '蓯',\n\tt葦: '苇',\n\ts苇: '葦',\n\tt藶: '苈',\n\ts苈: '藶',\n\tt莧: '苋',\n\ts苋: '莧',\n\tt萇: '苌',\n\ts苌: '萇',\n\tt蒼: '苍',\n\ts苍: '蒼',\n\tt苧: '苎',\n\ts苎: '苧',\n\tt蘇: '苏',\n\ts苏: '蘇',\n\tt檾: '苘',\n\ts苘: '檾',\n\tt蘋: '苹',\n\ts苹: '蘋',\n\tt莖: '茎',\n\ts茎: '莖',\n\tt蘢: '茏',\n\ts茏: '蘢',\n\tt蔦: '茑',\n\ts茑: '蔦',\n\tt塋: '茔',\n\ts茔: '塋',\n\tt煢: '茕',\n\ts茕: '煢',\n\tt繭: '茧',\n\ts茧: '繭',\n\tt荊: '荆',\n\ts荆: '荊',\n\tt薦: '荐',\n\ts荐: '薦',\n\tt莢: '荚',\n\ts荚: '莢',\n\tt蕘: '荛',\n\ts荛: '蕘',\n\tt蓽: '荜',\n\ts荜: '蓽',\n\tt蕎: '荞',\n\ts荞: '蕎',\n\tt薈: '荟',\n\ts荟: '薈',\n\tt薺: '荠',\n\ts荠: '薺',\n\tt蕩: '荡',\n\ts荡: '蕩',\n\tt榮: '荣',\n\ts荣: '榮',\n\tt葷: '荤',\n\ts荤: '葷',\n\tt滎: '荥',\n\ts荥: '滎',\n\tt犖: '荦',\n\ts荦: '犖',\n\tt熒: '荧',\n\ts荧: '熒',\n\tt蕁: '荨',\n\ts荨: '蕁',\n\tt藎: '荩',\n\ts荩: '藎',\n\tt蓀: '荪',\n\ts荪: '蓀',\n\tt蔭: '荫',\n\ts荫: '蔭',\n\tt蕒: '荬',\n\ts荬: '蕒',\n\tt葒: '荭',\n\ts荭: '葒',\n\tt藥: '药',\n\ts药: '藥',\n\tt蒞: '莅',\n\ts莅: '蒞',\n\tt萊: '莱',\n\ts莱: '萊',\n\tt蓮: '莲',\n\ts莲: '蓮',\n\tt蒔: '莳',\n\ts莳: '蒔',\n\tt萵: '莴',\n\ts莴: '萵',\n\tt薟: '莶',\n\ts莶: '薟',\n\tt獲: '获',\n\ts获: '獲',\n\tt蕕: '莸',\n\ts莸: '蕕',\n\tt瑩: '莹',\n\ts莹: '瑩',\n\tt鶯: '莺',\n\ts莺: '鶯',\n\tt蓴: '莼',\n\ts莼: '蓴',\n\tt蘀: '萚',\n\ts萚: '蘀',\n\tt蘿: '萝',\n\ts萝: '蘿',\n\tt螢: '萤',\n\ts萤: '螢',\n\tt營: '营',\n\ts营: '營',\n\tt縈: '萦',\n\ts萦: '縈',\n\tt蕭: '萧',\n\ts萧: '蕭',\n\tt薩: '萨',\n\ts萨: '薩',\n\tt蔥: '葱',\n\ts葱: '蔥',\n\tt蕆: '蒇',\n\ts蒇: '蕆',\n\tt蕢: '蒉',\n\ts蒉: '蕢',\n\tt蔣: '蒋',\n\ts蒋: '蔣',\n\tt蔞: '蒌',\n\ts蒌: '蔞',\n\tt藍: '蓝',\n\ts蓝: '藍',\n\tt薊: '蓟',\n\ts蓟: '薊',\n\tt蘺: '蓠',\n\ts蓠: '蘺',\n\tt蕷: '蓣',\n\ts蓣: '蕷',\n\tt鎣: '蓥',\n\ts蓥: '鎣',\n\tt驀: '蓦',\n\ts蓦: '驀',\n\tt薔: '蔷',\n\ts蔷: '薔',\n\tt蘞: '蔹',\n\ts蔹: '蘞',\n\tt藺: '蔺',\n\ts蔺: '藺',\n\tt藹: '蔼',\n\ts蔼: '藹',\n\tt蘄: '蕲',\n\ts蕲: '蘄',\n\tt蘊: '蕴',\n\ts蕴: '蘊',\n\tt藪: '薮',\n\ts薮: '藪',\n\tt蘚: '藓',\n\ts藓: '蘚',\n\tt虜: '虏',\n\ts虏: '虜',\n\tt慮: '虑',\n\ts虑: '慮',\n\tt虛: '虚',\n\ts虚: '虛',\n\tt蟲: '虫',\n\ts虫: '蟲',\n\tt虯: '虬',\n\ts虬: '虯',\n\tt蟣: '虮',\n\ts虮: '蟣',\n\tt雖: '虽',\n\ts虽: '雖',\n\tt蝦: '虾',\n\ts虾: '蝦',\n\tt蠆: '虿',\n\ts虿: '蠆',\n\tt蝕: '蚀',\n\ts蚀: '蝕',\n\tt蟻: '蚁',\n\ts蚁: '蟻',\n\tt螞: '蚂',\n\ts蚂: '螞',\n\tt蠶: '蚕',\n\ts蚕: '蠶',\n\tt蠔: '蚝',\n\ts蚝: '蠔',\n\tt蜆: '蚬',\n\ts蚬: '蜆',\n\tt蠱: '蛊',\n\ts蛊: '蠱',\n\tt蠣: '蛎',\n\ts蛎: '蠣',\n\tt蟶: '蛏',\n\ts蛏: '蟶',\n\tt蠻: '蛮',\n\ts蛮: '蠻',\n\tt蟄: '蛰',\n\ts蛰: '蟄',\n\tt蛺: '蛱',\n\ts蛱: '蛺',\n\tt蟯: '蛲',\n\ts蛲: '蟯',\n\tt螄: '蛳',\n\ts蛳: '螄',\n\tt蠐: '蛴',\n\ts蛴: '蠐',\n\tt蛻: '蜕',\n\ts蜕: '蛻',\n\tt蝸: '蜗',\n\ts蜗: '蝸',\n\tt蠟: '蜡',\n\ts蜡: '蠟',\n\tt蠅: '蝇',\n\ts蝇: '蠅',\n\tt蟈: '蝈',\n\ts蝈: '蟈',\n\tt蟬: '蝉',\n\ts蝉: '蟬',\n\tt蠍: '蝎',\n\ts蝎: '蠍',\n\tt螻: '蝼',\n\ts蝼: '螻',\n\tt蠑: '蝾',\n\ts蝾: '蠑',\n\tt螿: '螀',\n\ts螀: '螿',\n\tt蟎: '螨',\n\ts螨: '蟎',\n\tt蠨: '蟏',\n\ts蟏: '蠨',\n\tt釁: '衅',\n\ts衅: '釁',\n\tt銜: '衔',\n\ts衔: '銜',\n\tt補: '补',\n\ts补: '補',\n\tt襯: '衬',\n\ts衬: '襯',\n\tt袞: '衮',\n\ts衮: '袞',\n\tt襖: '袄',\n\ts袄: '襖',\n\tt嫋: '袅',\n\ts袅: '嫋',\n\tt褘: '袆',\n\ts袆: '褘',\n\tt襪: '袜',\n\ts袜: '襪',\n\tt襲: '袭',\n\ts袭: '襲',\n\tt裝: '装',\n\ts装: '裝',\n\tt襠: '裆',\n\ts裆: '襠',\n\tt褳: '裢',\n\ts裢: '褳',\n\tt襝: '裣',\n\ts裣: '襝',\n\tt褲: '裤',\n\ts裤: '褲',\n\tt襇: '裥',\n\ts裥: '襇',\n\tt褸: '褛',\n\ts褛: '褸',\n\tt襤: '褴',\n\ts褴: '襤',\n\tt繈: '襁',\n\ts襁: '繈',\n\tt襴: '襕',\n\ts襕: '襴',\n\tt見: '见',\n\ts见: '見',\n\tt觀: '观',\n\ts观: '觀',\n\tt規: '规',\n\ts规: '規',\n\tt覓: '觅',\n\ts觅: '覓',\n\tt視: '视',\n\ts视: '視',\n\tt覘: '觇',\n\ts觇: '覘',\n\tt覽: '览',\n\ts览: '覽',\n\tt覺: '觉',\n\ts觉: '覺',\n\tt覬: '觊',\n\ts觊: '覬',\n\tt覡: '觋',\n\ts觋: '覡',\n\tt覿: '觌',\n\ts觌: '覿',\n\tt覦: '觎',\n\ts觎: '覦',\n\tt覯: '觏',\n\ts觏: '覯',\n\tt覲: '觐',\n\ts觐: '覲',\n\tt覷: '觑',\n\ts觑: '覷',\n\tt觴: '觞',\n\ts觞: '觴',\n\tt觸: '触',\n\ts触: '觸',\n\tt觶: '觯',\n\ts觯: '觶',\n\tt讋: '詟',\n\ts詟: '讋',\n\tt譽: '誉',\n\ts誉: '譽',\n\tt謄: '誊',\n\ts誊: '謄',\n\tt計: '计',\n\ts计: '計',\n\tt訂: '订',\n\ts订: '訂',\n\tt訃: '讣',\n\ts讣: '訃',\n\tt認: '认',\n\ts认: '認',\n\tt譏: '讥',\n\ts讥: '譏',\n\tt訐: '讦',\n\ts讦: '訐',\n\tt訌: '讧',\n\ts讧: '訌',\n\tt討: '讨',\n\ts讨: '討',\n\tt讓: '让',\n\ts让: '讓',\n\tt訕: '讪',\n\ts讪: '訕',\n\tt訖: '讫',\n\ts讫: '訖',\n\tt訓: '训',\n\ts训: '訓',\n\tt議: '议',\n\ts议: '議',\n\tt訊: '讯',\n\ts讯: '訊',\n\tt記: '记',\n\ts记: '記',\n\tt講: '讲',\n\ts讲: '講',\n\tt諱: '讳',\n\ts讳: '諱',\n\tt謳: '讴',\n\ts讴: '謳',\n\tt詎: '讵',\n\ts讵: '詎',\n\tt訝: '讶',\n\ts讶: '訝',\n\tt訥: '讷',\n\ts讷: '訥',\n\tt許: '许',\n\ts许: '許',\n\tt訛: '讹',\n\ts讹: '訛',\n\tt論: '论',\n\ts论: '論',\n\tt訟: '讼',\n\ts讼: '訟',\n\tt諷: '讽',\n\ts讽: '諷',\n\tt設: '设',\n\ts设: '設',\n\tt訪: '访',\n\ts访: '訪',\n\tt訣: '诀',\n\ts诀: '訣',\n\tt證: '证',\n\ts证: '證',\n\tt詁: '诂',\n\ts诂: '詁',\n\tt訶: '诃',\n\ts诃: '訶',\n\tt評: '评',\n\ts评: '評',\n\tt詛: '诅',\n\ts诅: '詛',\n\tt識: '识',\n\ts识: '識',\n\tt詐: '诈',\n\ts诈: '詐',\n\tt訴: '诉',\n\ts诉: '訴',\n\tt診: '诊',\n\ts诊: '診',\n\tt詆: '诋',\n\ts诋: '詆',\n\tt謅: '诌',\n\ts诌: '謅',\n\tt詞: '词',\n\ts词: '詞',\n\tt詘: '诎',\n\ts诎: '詘',\n\tt詔: '诏',\n\ts诏: '詔',\n\tt譯: '译',\n\ts译: '譯',\n\tt詒: '诒',\n\ts诒: '詒',\n\tt誆: '诓',\n\ts诓: '誆',\n\tt誄: '诔',\n\ts诔: '誄',\n\tt試: '试',\n\ts试: '試',\n\tt詿: '诖',\n\ts诖: '詿',\n\tt詩: '诗',\n\ts诗: '詩',\n\tt詰: '诘',\n\ts诘: '詰',\n\tt詼: '诙',\n\ts诙: '詼',\n\tt誠: '诚',\n\ts诚: '誠',\n\tt誅: '诛',\n\ts诛: '誅',\n\tt詵: '诜',\n\ts诜: '詵',\n\tt話: '话',\n\ts话: '話',\n\tt誕: '诞',\n\ts诞: '誕',\n\tt詬: '诟',\n\ts诟: '詬',\n\tt詮: '诠',\n\ts诠: '詮',\n\tt詭: '诡',\n\ts诡: '詭',\n\tt詢: '询',\n\ts询: '詢',\n\tt詣: '诣',\n\ts诣: '詣',\n\tt諍: '诤',\n\ts诤: '諍',\n\tt該: '该',\n\ts该: '該',\n\tt詳: '详',\n\ts详: '詳',\n\tt詫: '诧',\n\ts诧: '詫',\n\tt諢: '诨',\n\ts诨: '諢',\n\tt詡: '诩',\n\ts诩: '詡',\n\tt譸: '诪',\n\ts诪: '譸',\n\tt誡: '诫',\n\ts诫: '誡',\n\tt誣: '诬',\n\ts诬: '誣',\n\tt語: '语',\n\ts语: '語',\n\tt誚: '诮',\n\ts诮: '誚',\n\tt誤: '误',\n\ts误: '誤',\n\tt誥: '诰',\n\ts诰: '誥',\n\tt誘: '诱',\n\ts诱: '誘',\n\tt誨: '诲',\n\ts诲: '誨',\n\tt誑: '诳',\n\ts诳: '誑',\n\tt說: '说',\n\ts说: '說',\n\tt誦: '诵',\n\ts诵: '誦',\n\tt誒: '诶',\n\ts诶: '誒',\n\tt請: '请',\n\ts请: '請',\n\tt諸: '诸',\n\ts诸: '諸',\n\tt諏: '诹',\n\ts诹: '諏',\n\tt諾: '诺',\n\ts诺: '諾',\n\tt讀: '读',\n\ts读: '讀',\n\tt諑: '诼',\n\ts诼: '諑',\n\tt誹: '诽',\n\ts诽: '誹',\n\tt課: '课',\n\ts课: '課',\n\tt諉: '诿',\n\ts诿: '諉',\n\tt諛: '谀',\n\ts谀: '諛',\n\tt誰: '谁',\n\ts谁: '誰',\n\tt諗: '谂',\n\ts谂: '諗',\n\tt調: '调',\n\ts调: '調',\n\tt諂: '谄',\n\ts谄: '諂',\n\tt諒: '谅',\n\ts谅: '諒',\n\tt諄: '谆',\n\ts谆: '諄',\n\tt誶: '谇',\n\ts谇: '誶',\n\tt談: '谈',\n\ts谈: '談',\n\tt誼: '谊',\n\ts谊: '誼',\n\tt謀: '谋',\n\ts谋: '謀',\n\tt諶: '谌',\n\ts谌: '諶',\n\tt諜: '谍',\n\ts谍: '諜',\n\tt謊: '谎',\n\ts谎: '謊',\n\tt諫: '谏',\n\ts谏: '諫',\n\tt諧: '谐',\n\ts谐: '諧',\n\tt謁: '谒',\n\ts谒: '謁',\n\tt謂: '谓',\n\ts谓: '謂',\n\tt諤: '谔',\n\ts谔: '諤',\n\tt諭: '谕',\n\ts谕: '諭',\n\tt諼: '谖',\n\ts谖: '諼',\n\tt讒: '谗',\n\ts谗: '讒',\n\tt諮: '咨',\n\ts咨: '諮',\n\tt諳: '谙',\n\ts谙: '諳',\n\tt諺: '谚',\n\ts谚: '諺',\n\tt諦: '谛',\n\ts谛: '諦',\n\tt謎: '谜',\n\ts谜: '謎',\n\tt諞: '谝',\n\ts谝: '諞',\n\tt諝: '谞',\n\ts谞: '諝',\n\tt謨: '谟',\n\ts谟: '謨',\n\tt讜: '谠',\n\ts谠: '讜',\n\tt謖: '谡',\n\ts谡: '謖',\n\tt謝: '谢',\n\ts谢: '謝',\n\tt謠: '谣',\n\ts谣: '謠',\n\tt謗: '谤',\n\ts谤: '謗',\n\tt諡: '谥',\n\ts谥: '諡',\n\tt謙: '谦',\n\ts谦: '謙',\n\tt謐: '谧',\n\ts谧: '謐',\n\tt謹: '谨',\n\ts谨: '謹',\n\tt謾: '谩',\n\ts谩: '謾',\n\tt謫: '谪',\n\ts谪: '謫',\n\tt譾: '谫',\n\ts谫: '譾',\n\tt謬: '谬',\n\ts谬: '謬',\n\tt譚: '谭',\n\ts谭: '譚',\n\tt譖: '谮',\n\ts谮: '譖',\n\tt譙: '谯',\n\ts谯: '譙',\n\tt讕: '谰',\n\ts谰: '讕',\n\tt譜: '谱',\n\ts谱: '譜',\n\tt譎: '谲',\n\ts谲: '譎',\n\tt讞: '谳',\n\ts谳: '讞',\n\tt譴: '谴',\n\ts谴: '譴',\n\tt譫: '谵',\n\ts谵: '譫',\n\tt讖: '谶',\n\ts谶: '讖',\n\tt穀: '谷',\n\ts谷: '穀',\n\tt豶: '豮',\n\ts豮: '豶',\n\tt貝: '贝',\n\ts贝: '貝',\n\tt貞: '贞',\n\ts贞: '貞',\n\tt負: '负',\n\ts负: '負',\n\tt貢: '贡',\n\ts贡: '貢',\n\tt財: '财',\n\ts财: '財',\n\tt責: '责',\n\ts责: '責',\n\tt賢: '贤',\n\ts贤: '賢',\n\tt敗: '败',\n\ts败: '敗',\n\tt賬: '账',\n\ts账: '賬',\n\tt貨: '货',\n\ts货: '貨',\n\tt質: '质',\n\ts质: '質',\n\tt販: '贩',\n\ts贩: '販',\n\tt貪: '贪',\n\ts贪: '貪',\n\tt貧: '贫',\n\ts贫: '貧',\n\tt貶: '贬',\n\ts贬: '貶',\n\tt購: '购',\n\ts购: '購',\n\tt貯: '贮',\n\ts贮: '貯',\n\tt貫: '贯',\n\ts贯: '貫',\n\tt貳: '贰',\n\ts贰: '貳',\n\tt賤: '贱',\n\ts贱: '賤',\n\tt賁: '贲',\n\ts贲: '賁',\n\tt貰: '贳',\n\ts贳: '貰',\n\tt貼: '贴',\n\ts贴: '貼',\n\tt貴: '贵',\n\ts贵: '貴',\n\tt貺: '贶',\n\ts贶: '貺',\n\tt貸: '贷',\n\ts贷: '貸',\n\tt貿: '贸',\n\ts贸: '貿',\n\tt費: '费',\n\ts费: '費',\n\tt賀: '贺',\n\ts贺: '賀',\n\tt貽: '贻',\n\ts贻: '貽',\n\tt賊: '贼',\n\ts贼: '賊',\n\tt贄: '贽',\n\ts贽: '贄',\n\tt賈: '贾',\n\ts贾: '賈',\n\tt賄: '贿',\n\ts贿: '賄',\n\tt貲: '赀',\n\ts赀: '貲',\n\tt賃: '赁',\n\ts赁: '賃',\n\tt賂: '赂',\n\ts赂: '賂',\n\tt贓: '赃',\n\ts赃: '贓',\n\tt資: '资',\n\ts资: '資',\n\tt賅: '赅',\n\ts赅: '賅',\n\tt贐: '赆',\n\ts赆: '贐',\n\tt賕: '赇',\n\ts赇: '賕',\n\tt賑: '赈',\n\ts赈: '賑',\n\tt賚: '赉',\n\ts赉: '賚',\n\tt賒: '赊',\n\ts赊: '賒',\n\tt賦: '赋',\n\ts赋: '賦',\n\tt賭: '赌',\n\ts赌: '賭',\n\tt齎: '赍',\n\ts赍: '齎',\n\tt贖: '赎',\n\ts赎: '贖',\n\tt賞: '赏',\n\ts赏: '賞',\n\tt賜: '赐',\n\ts赐: '賜',\n\tt贔: '赑',\n\ts赑: '贔',\n\tt賙: '赒',\n\ts赒: '賙',\n\tt賡: '赓',\n\ts赓: '賡',\n\tt賠: '赔',\n\ts赔: '賠',\n\tt賴: '赖',\n\ts赖: '賴',\n\tt賵: '赗',\n\ts赗: '賵',\n\tt贅: '赘',\n\ts赘: '贅',\n\tt賻: '赙',\n\ts赙: '賻',\n\tt賺: '赚',\n\ts赚: '賺',\n\tt賽: '赛',\n\ts赛: '賽',\n\tt賾: '赜',\n\ts赜: '賾',\n\tt贗: '赝',\n\ts赝: '贗',\n\tt讚: '赞',\n\ts赞: '讚',\n\tt贇: '赟',\n\ts赟: '贇',\n\tt贈: '赠',\n\ts赠: '贈',\n\tt贍: '赡',\n\ts赡: '贍',\n\tt贏: '赢',\n\ts赢: '贏',\n\tt贛: '赣',\n\ts赣: '贛',\n\tt赬: '赪',\n\ts赪: '赬',\n\tt趙: '赵',\n\ts赵: '趙',\n\tt趕: '赶',\n\ts赶: '趕',\n\tt趨: '趋',\n\ts趋: '趨',\n\tt趲: '趱',\n\ts趱: '趲',\n\tt躉: '趸',\n\ts趸: '躉',\n\tt躍: '跃',\n\ts跃: '躍',\n\tt蹌: '跄',\n\ts跄: '蹌',\n\tt蹠: '跖',\n\ts跖: '蹠',\n\tt躒: '跞',\n\ts跞: '躒',\n\tt踐: '践',\n\ts践: '踐',\n\tt躂: '跶',\n\ts跶: '躂',\n\tt蹺: '跷',\n\ts跷: '蹺',\n\tt蹕: '跸',\n\ts跸: '蹕',\n\tt躚: '跹',\n\ts跹: '躚',\n\tt躋: '跻',\n\ts跻: '躋',\n\tt踴: '踊',\n\ts踊: '踴',\n\tt躊: '踌',\n\ts踌: '躊',\n\tt蹤: '踪',\n\ts踪: '蹤',\n\tt躓: '踬',\n\ts踬: '躓',\n\tt躑: '踯',\n\ts踯: '躑',\n\tt躡: '蹑',\n\ts蹑: '躡',\n\tt蹣: '蹒',\n\ts蹒: '蹣',\n\tt躕: '蹰',\n\ts蹰: '躕',\n\tt躥: '蹿',\n\ts蹿: '躥',\n\tt躪: '躏',\n\ts躏: '躪',\n\tt躦: '躜',\n\ts躜: '躦',\n\tt軀: '躯',\n\ts躯: '軀',\n\tt車: '车',\n\ts车: '車',\n\tt軋: '轧',\n\ts轧: '軋',\n\tt軌: '轨',\n\ts轨: '軌',\n\tt軒: '轩',\n\ts轩: '軒',\n\tt軔: '轫',\n\ts轫: '軔',\n\tt轉: '转',\n\ts转: '轉',\n\tt軛: '轭',\n\ts轭: '軛',\n\tt輪: '轮',\n\ts轮: '輪',\n\tt軟: '软',\n\ts软: '軟',\n\tt轟: '轰',\n\ts轰: '轟',\n\tt軲: '轱',\n\ts轱: '軲',\n\tt軻: '轲',\n\ts轲: '軻',\n\tt轤: '轳',\n\ts轳: '轤',\n\tt軸: '轴',\n\ts轴: '軸',\n\tt軹: '轵',\n\ts轵: '軹',\n\tt軼: '轶',\n\ts轶: '軼',\n\tt軫: '轸',\n\ts轸: '軫',\n\tt轢: '轹',\n\ts轹: '轢',\n\tt軺: '轺',\n\ts轺: '軺',\n\tt輕: '轻',\n\ts轻: '輕',\n\tt軾: '轼',\n\ts轼: '軾',\n\tt載: '载',\n\ts载: '載',\n\tt輊: '轾',\n\ts轾: '輊',\n\tt轎: '轿',\n\ts轿: '轎',\n\tt輈: '辀',\n\ts辀: '輈',\n\tt輇: '辁',\n\ts辁: '輇',\n\tt輅: '辂',\n\ts辂: '輅',\n\tt較: '较',\n\ts较: '較',\n\tt輒: '辄',\n\ts辄: '輒',\n\tt輔: '辅',\n\ts辅: '輔',\n\tt輛: '辆',\n\ts辆: '輛',\n\tt輦: '辇',\n\ts辇: '輦',\n\tt輩: '辈',\n\ts辈: '輩',\n\tt輝: '辉',\n\ts辉: '輝',\n\tt輥: '辊',\n\ts辊: '輥',\n\tt輞: '辋',\n\ts辋: '輞',\n\tt輟: '辍',\n\ts辍: '輟',\n\tt輜: '辎',\n\ts辎: '輜',\n\tt輳: '辏',\n\ts辏: '輳',\n\tt輻: '辐',\n\ts辐: '輻',\n\tt輯: '辑',\n\ts辑: '輯',\n\tt轀: '辒',\n\ts辒: '轀',\n\tt輸: '输',\n\ts输: '輸',\n\tt轡: '辔',\n\ts辔: '轡',\n\tt轅: '辕',\n\ts辕: '轅',\n\tt轄: '辖',\n\ts辖: '轄',\n\tt輾: '辗',\n\ts辗: '輾',\n\tt轆: '辘',\n\ts辘: '轆',\n\tt轍: '辙',\n\ts辙: '轍',\n\tt轔: '辚',\n\ts辚: '轔',\n\tt辭: '辞',\n\ts辞: '辭',\n\tt辯: '辩',\n\ts辩: '辯',\n\tt辮: '辫',\n\ts辫: '辮',\n\tt邊: '边',\n\ts边: '邊',\n\tt遼: '辽',\n\ts辽: '遼',\n\tt達: '达',\n\ts达: '達',\n\tt遷: '迁',\n\ts迁: '遷',\n\tt過: '过',\n\ts过: '過',\n\tt邁: '迈',\n\ts迈: '邁',\n\tt運: '运',\n\ts运: '運',\n\tt還: '还',\n\ts还: '還',\n\tt這: '这',\n\ts这: '這',\n\tt進: '进',\n\ts进: '進',\n\tt遠: '远',\n\ts远: '遠',\n\tt違: '违',\n\ts违: '違',\n\tt連: '连',\n\ts连: '連',\n\tt遲: '迟',\n\ts迟: '遲',\n\tt邇: '迩',\n\ts迩: '邇',\n\tt逕: '径',\n\tt跡: '迹',\n\ts迹: '跡',\n\tt適: '适',\n\ts适: '適',\n\tt選: '选',\n\ts选: '選',\n\tt遜: '逊',\n\ts逊: '遜',\n\tt遞: '递',\n\ts递: '遞',\n\tt邐: '逦',\n\ts逦: '邐',\n\tt邏: '逻',\n\ts逻: '邏',\n\tt遺: '遗',\n\ts遗: '遺',\n\tt遙: '遥',\n\ts遥: '遙',\n\tt鄧: '邓',\n\ts邓: '鄧',\n\tt鄺: '邝',\n\ts邝: '鄺',\n\tt鄔: '邬',\n\ts邬: '鄔',\n\tt郵: '邮',\n\ts邮: '郵',\n\tt鄒: '邹',\n\ts邹: '鄒',\n\tt鄴: '邺',\n\ts邺: '鄴',\n\tt鄰: '邻',\n\ts邻: '鄰',\n\tt鬱: '郁',\n\ts郁: '鬱',\n\tt郤: '却',\n\tt郟: '郏',\n\ts郏: '郟',\n\tt鄶: '郐',\n\ts郐: '鄶',\n\tt鄭: '郑',\n\ts郑: '鄭',\n\tt鄆: '郓',\n\ts郓: '鄆',\n\tt酈: '郦',\n\ts郦: '酈',\n\tt鄖: '郧',\n\ts郧: '鄖',\n\tt鄲: '郸',\n\ts郸: '鄲',\n\tt醞: '酝',\n\ts酝: '醞',\n\tt醱: '酦',\n\ts酦: '醱',\n\tt醬: '酱',\n\ts酱: '醬',\n\tt釅: '酽',\n\ts酽: '釅',\n\tt釃: '酾',\n\ts酾: '釃',\n\tt釀: '酿',\n\ts酿: '釀',\n\tt釋: '释',\n\ts释: '釋',\n\tt裏: '里',\n\ts里: '裡',\n\tt鑒: '鉴',\n\ts鉴: '鑒',\n\tt鑾: '銮',\n\ts銮: '鑾',\n\tt鏨: '錾',\n\ts錾: '鏨',\n\tt釔: '钇',\n\ts钇: '釔',\n\tt針: '针',\n\ts针: '針',\n\tt釘: '钉',\n\ts钉: '釘',\n\tt釗: '钊',\n\ts钊: '釗',\n\tt釙: '钋',\n\ts钋: '釙',\n\tt釕: '钌',\n\ts钌: '釕',\n\tt釷: '钍',\n\ts钍: '釷',\n\tt釧: '钏',\n\ts钏: '釧',\n\tt釤: '钐',\n\ts钐: '釤',\n\tt釩: '钒',\n\ts钒: '釩',\n\tt釣: '钓',\n\ts钓: '釣',\n\tt鍆: '钔',\n\ts钔: '鍆',\n\tt釹: '钕',\n\ts钕: '釹',\n\tt鍚: '钖',\n\ts钖: '鍚',\n\tt釵: '钗',\n\ts钗: '釵',\n\tt鈃: '钘',\n\ts钘: '鈃',\n\tt鈣: '钙',\n\ts钙: '鈣',\n\tt鈦: '钛',\n\ts钛: '鈦',\n\tt鈍: '钝',\n\ts钝: '鈍',\n\tt鈔: '钞',\n\ts钞: '鈔',\n\tt鍾: '钟',\n\ts钟: '鐘',\n\tt鈉: '钠',\n\ts钠: '鈉',\n\tt鋇: '钡',\n\ts钡: '鋇',\n\tt鋼: '钢',\n\ts钢: '鋼',\n\tt鈑: '钣',\n\ts钣: '鈑',\n\tt鈐: '钤',\n\ts钤: '鈐',\n\tt鑰: '钥',\n\ts钥: '鑰',\n\tt欽: '钦',\n\ts钦: '欽',\n\tt鈞: '钧',\n\ts钧: '鈞',\n\tt鎢: '钨',\n\ts钨: '鎢',\n\tt鉤: '钩',\n\ts钩: '鉤',\n\tt鈧: '钪',\n\ts钪: '鈧',\n\tt鈁: '钫',\n\ts钫: '鈁',\n\tt鈄: '钭',\n\ts钭: '鈄',\n\tt鈕: '钮',\n\ts钮: '鈕',\n\tt鈀: '钯',\n\ts钯: '鈀',\n\tt鈺: '钰',\n\ts钰: '鈺',\n\tt錢: '钱',\n\ts钱: '錢',\n\tt鉦: '钲',\n\ts钲: '鉦',\n\tt鉗: '钳',\n\ts钳: '鉗',\n\tt鈷: '钴',\n\ts钴: '鈷',\n\tt缽: '钵',\n\ts钵: '缽',\n\tt鈳: '钶',\n\ts钶: '鈳',\n\tt鈽: '钸',\n\ts钸: '鈽',\n\tt鈸: '钹',\n\ts钹: '鈸',\n\tt鉞: '钺',\n\ts钺: '鉞',\n\tt鑽: '钻',\n\ts钻: '鑽',\n\tt鉬: '钼',\n\ts钼: '鉬',\n\tt鉭: '钽',\n\ts钽: '鉭',\n\tt鉀: '钾',\n\ts钾: '鉀',\n\tt鈿: '钿',\n\ts钿: '鈿',\n\tt鈾: '铀',\n\ts铀: '鈾',\n\tt鐵: '铁',\n\ts铁: '鐵',\n\tt鉑: '铂',\n\ts铂: '鉑',\n\tt鈴: '铃',\n\ts铃: '鈴',\n\tt鑠: '铄',\n\ts铄: '鑠',\n\tt鉛: '铅',\n\ts铅: '鉛',\n\tt鉚: '铆',\n\ts铆: '鉚',\n\tt鈰: '铈',\n\ts铈: '鈰',\n\tt鉉: '铉',\n\ts铉: '鉉',\n\tt鉈: '铊',\n\ts铊: '鉈',\n\tt鉍: '铋',\n\ts铋: '鉍',\n\tt鈹: '铍',\n\ts铍: '鈹',\n\tt鐸: '铎',\n\ts铎: '鐸',\n\tt鉶: '铏',\n\ts铏: '鉶',\n\tt銬: '铐',\n\ts铐: '銬',\n\tt銠: '铑',\n\ts铑: '銠',\n\tt鉺: '铒',\n\ts铒: '鉺',\n\tt銪: '铕',\n\ts铕: '銪',\n\tt鋏: '铗',\n\ts铗: '鋏',\n\tt鐃: '铙',\n\ts铙: '鐃',\n\tt銍: '铚',\n\ts铚: '銍',\n\tt鐺: '铛',\n\ts铛: '鐺',\n\tt銅: '铜',\n\ts铜: '銅',\n\tt鋁: '铝',\n\ts铝: '鋁',\n\tt銦: '铟',\n\ts铟: '銦',\n\tt鎧: '铠',\n\ts铠: '鎧',\n\tt鍘: '铡',\n\ts铡: '鍘',\n\tt銖: '铢',\n\ts铢: '銖',\n\tt銑: '铣',\n\ts铣: '銑',\n\tt鋌: '铤',\n\ts铤: '鋌',\n\tt銛: '铦',\n\ts铦: '銛',\n\tt鏵: '铧',\n\ts铧: '鏵',\n\tt銓: '铨',\n\ts铨: '銓',\n\tt鉿: '铪',\n\ts铪: '鉿',\n\tt銚: '铫',\n\ts铫: '銚',\n\tt鉻: '铬',\n\ts铬: '鉻',\n\tt銘: '铭',\n\ts铭: '銘',\n\tt錚: '铮',\n\ts铮: '錚',\n\tt銫: '铯',\n\ts铯: '銫',\n\tt鉸: '铰',\n\ts铰: '鉸',\n\tt銥: '铱',\n\ts铱: '銥',\n\tt鏟: '铲',\n\ts铲: '鏟',\n\tt銃: '铳',\n\ts铳: '銃',\n\tt銨: '铵',\n\ts铵: '銨',\n\tt銀: '银',\n\ts银: '銀',\n\tt銣: '铷',\n\ts铷: '銣',\n\tt鑄: '铸',\n\ts铸: '鑄',\n\tt鋪: '铺',\n\ts铺: '鋪',\n\tt鋙: '铻',\n\ts铻: '鋙',\n\tt錸: '铼',\n\ts铼: '錸',\n\tt鏈: '链',\n\ts链: '鏈',\n\tt鏗: '铿',\n\ts铿: '鏗',\n\tt銷: '销',\n\ts销: '銷',\n\tt鎖: '锁',\n\ts锁: '鎖',\n\tt鋰: '锂',\n\ts锂: '鋰',\n\tt鋤: '锄',\n\ts锄: '鋤',\n\tt鍋: '锅',\n\ts锅: '鍋',\n\tt鋯: '锆',\n\ts锆: '鋯',\n\tt鋨: '锇',\n\ts锇: '鋨',\n\tt鏽: '锈',\n\ts锈: '鏽',\n\tt銼: '锉',\n\ts锉: '銼',\n\tt鋝: '锊',\n\ts锊: '鋝',\n\tt鋒: '锋',\n\ts锋: '鋒',\n\tt鋅: '锌',\n\ts锌: '鋅',\n\tt鐧: '锏',\n\ts锏: '鐧',\n\tt銳: '锐',\n\ts锐: '銳',\n\tt銻: '锑',\n\ts锑: '銻',\n\tt鋃: '锒',\n\ts锒: '鋃',\n\tt鋟: '锓',\n\ts锓: '鋟',\n\tt錒: '锕',\n\ts锕: '錒',\n\tt錆: '锖',\n\ts锖: '錆',\n\tt鍺: '锗',\n\ts锗: '鍺',\n\tt錯: '错',\n\ts错: '錯',\n\tt錨: '锚',\n\ts锚: '錨',\n\tt錡: '锜',\n\ts锜: '錡',\n\tt錁: '锞',\n\ts锞: '錁',\n\tt錕: '锟',\n\ts锟: '錕',\n\tt錩: '锠',\n\ts锠: '錩',\n\tt錫: '锡',\n\ts锡: '錫',\n\tt錮: '锢',\n\ts锢: '錮',\n\tt鑼: '锣',\n\ts锣: '鑼',\n\tt錘: '锤',\n\ts锤: '錘',\n\tt錐: '锥',\n\ts锥: '錐',\n\tt錦: '锦',\n\ts锦: '錦',\n\tt錈: '锩',\n\ts锩: '錈',\n\tt錟: '锬',\n\ts锬: '錟',\n\tt錠: '锭',\n\ts锭: '錠',\n\tt鍵: '键',\n\ts键: '鍵',\n\tt鋸: '锯',\n\ts锯: '鋸',\n\tt錳: '锰',\n\ts锰: '錳',\n\tt錙: '锱',\n\ts锱: '錙',\n\tt鍥: '锲',\n\ts锲: '鍥',\n\tt鍇: '锴',\n\ts锴: '鍇',\n\tt鏘: '锵',\n\ts锵: '鏘',\n\tt鍶: '锶',\n\ts锶: '鍶',\n\tt鍔: '锷',\n\ts锷: '鍔',\n\tt鍤: '锸',\n\ts锸: '鍤',\n\tt鍬: '锹',\n\ts锹: '鍬',\n\tt鍛: '锻',\n\ts锻: '鍛',\n\tt鎪: '锼',\n\ts锼: '鎪',\n\tt鍠: '锽',\n\ts锽: '鍠',\n\tt鍰: '锾',\n\ts锾: '鍰',\n\tt鍍: '镀',\n\ts镀: '鍍',\n\tt鎂: '镁',\n\ts镁: '鎂',\n\tt鏤: '镂',\n\ts镂: '鏤',\n\tt鎡: '镃',\n\ts镃: '鎡',\n\tt鏌: '镆',\n\ts镆: '鏌',\n\tt鎮: '镇',\n\ts镇: '鎮',\n\tt鎛: '镈',\n\ts镈: '鎛',\n\tt鎘: '镉',\n\ts镉: '鎘',\n\tt鑷: '镊',\n\ts镊: '鑷',\n\tt鐫: '镌',\n\ts镌: '鐫',\n\tt鎳: '镍',\n\ts镍: '鎳',\n\tt鎦: '镏',\n\ts镏: '鎦',\n\tt鎬: '镐',\n\ts镐: '鎬',\n\tt鎊: '镑',\n\ts镑: '鎊',\n\tt鎰: '镒',\n\ts镒: '鎰',\n\tt鎔: '镕',\n\ts镕: '鎔',\n\tt鏢: '镖',\n\ts镖: '鏢',\n\tt鏜: '镗',\n\ts镗: '鏜',\n\tt鏍: '镙',\n\ts镙: '鏍',\n\tt鏞: '镛',\n\ts镛: '鏞',\n\tt鏡: '镜',\n\ts镜: '鏡',\n\tt鏑: '镝',\n\ts镝: '鏑',\n\tt鏃: '镞',\n\ts镞: '鏃',\n\tt鏇: '旋',\n\ts旋: '鏇',\n\tt鏐: '镠',\n\ts镠: '鏐',\n\tt鐔: '镡',\n\ts镡: '鐔',\n\tt鐐: '镣',\n\ts镣: '鐐',\n\tt鐓: '镦',\n\ts镦: '鐓',\n\tt鑭: '镧',\n\ts镧: '鑭',\n\tt鏹: '镪',\n\ts镪: '鏹',\n\tt鐙: '镫',\n\ts镫: '鐙',\n\tt鑊: '镬',\n\ts镬: '鑊',\n\tt鐳: '镭',\n\ts镭: '鐳',\n\tt鐶: '镮',\n\ts镮: '鐶',\n\tt鐲: '镯',\n\ts镯: '鐲',\n\tt鐮: '镰',\n\ts镰: '鐮',\n\tt鐿: '镱',\n\ts镱: '鐿',\n\tt鑣: '镳',\n\ts镳: '鑣',\n\tt鑞: '镴',\n\ts镴: '鑞',\n\tt鑲: '镶',\n\ts镶: '鑲',\n\tt長: '长',\n\ts长: '長',\n\tt門: '门',\n\ts门: '門',\n\tt閂: '闩',\n\ts闩: '閂',\n\tt閃: '闪',\n\ts闪: '閃',\n\tt閆: '阎',\n\ts阎: '閻',\n\tt閈: '闬',\n\ts闬: '閈',\n\tt閉: '闭',\n\ts闭: '閉',\n\tt問: '问',\n\ts问: '問',\n\tt闖: '闯',\n\ts闯: '闖',\n\tt閏: '闰',\n\ts闰: '閏',\n\tt闈: '闱',\n\ts闱: '闈',\n\tt閑: '闲',\n\ts闲: '閒',\n\tt閎: '闳',\n\ts闳: '閎',\n\tt間: '间',\n\ts间: '間',\n\tt閔: '闵',\n\ts闵: '閔',\n\tt閌: '闶',\n\ts闶: '閌',\n\tt悶: '闷',\n\ts闷: '悶',\n\tt閘: '闸',\n\ts闸: '閘',\n\tt鬧: '闹',\n\ts闹: '鬧',\n\tt閨: '闺',\n\ts闺: '閨',\n\tt聞: '闻',\n\ts闻: '聞',\n\tt闥: '闼',\n\ts闼: '闥',\n\tt閩: '闽',\n\ts闽: '閩',\n\tt閭: '闾',\n\ts闾: '閭',\n\tt闓: '闿',\n\ts闿: '闓',\n\tt閥: '阀',\n\ts阀: '閥',\n\tt閣: '阁',\n\ts阁: '閣',\n\tt閡: '阂',\n\ts阂: '閡',\n\tt閫: '阃',\n\ts阃: '閫',\n\tt鬮: '阄',\n\ts阄: '鬮',\n\tt閱: '阅',\n\ts阅: '閱',\n\tt閬: '阆',\n\ts阆: '閬',\n\tt閾: '阈',\n\ts阈: '閾',\n\tt閹: '阉',\n\ts阉: '閹',\n\tt閶: '阊',\n\ts阊: '閶',\n\tt鬩: '阋',\n\ts阋: '鬩',\n\tt閿: '阌',\n\ts阌: '閿',\n\tt閽: '阍',\n\ts阍: '閽',\n\tt閻: '阎',\n\tt閼: '阏',\n\ts阏: '閼',\n\tt闡: '阐',\n\ts阐: '闡',\n\tt闌: '阑',\n\ts阑: '闌',\n\tt闃: '阒',\n\ts阒: '闃',\n\tt闠: '阓',\n\ts阓: '闠',\n\tt闊: '阔',\n\ts阔: '闊',\n\tt闋: '阕',\n\ts阕: '闋',\n\tt闔: '阖',\n\ts阖: '闔',\n\tt闐: '阗',\n\ts阗: '闐',\n\tt闒: '阘',\n\ts阘: '闒',\n\tt闕: '阙',\n\ts阙: '闕',\n\tt闞: '阚',\n\ts阚: '闞',\n\tt闤: '阛',\n\ts阛: '闤',\n\tt隊: '队',\n\ts队: '隊',\n\tt陽: '阳',\n\ts阳: '陽',\n\tt陰: '阴',\n\ts阴: '陰',\n\tt陣: '阵',\n\ts阵: '陣',\n\tt階: '阶',\n\ts阶: '階',\n\tt際: '际',\n\ts际: '際',\n\tt陸: '陆',\n\ts陆: '陸',\n\tt隴: '陇',\n\ts陇: '隴',\n\tt陳: '陈',\n\ts陈: '陳',\n\tt陘: '陉',\n\ts陉: '陘',\n\tt陝: '陕',\n\ts陕: '陝',\n\tt隉: '陧',\n\ts陧: '隉',\n\tt隕: '陨',\n\ts陨: '隕',\n\tt險: '险',\n\ts险: '險',\n\tt隨: '随',\n\ts随: '隨',\n\tt隱: '隐',\n\ts隐: '隱',\n\tt隸: '隶',\n\ts隶: '隸',\n\tt雋: '隽',\n\ts隽: '雋',\n\tt難: '难',\n\ts难: '難',\n\tt雛: '雏',\n\ts雏: '雛',\n\tt讎: '雠',\n\ts雠: '讎',\n\tt靂: '雳',\n\ts雳: '靂',\n\tt霧: '雾',\n\ts雾: '霧',\n\tt霽: '霁',\n\ts霁: '霽',\n\tt黴: '霉',\n\ts霉: '黴',\n\tt靄: '霭',\n\ts霭: '靄',\n\tt靚: '靓',\n\ts靓: '靚',\n\tt靜: '静',\n\ts静: '靜',\n\tt靨: '靥',\n\ts靥: '靨',\n\tt韃: '鞑',\n\ts鞑: '韃',\n\tt韉: '鞯',\n\ts鞯: '韉',\n\tt韋: '韦',\n\ts韦: '韋',\n\tt韌: '韧',\n\ts韧: '韌',\n\tt韓: '韩',\n\ts韩: '韓',\n\tt韙: '韪',\n\ts韪: '韙',\n\tt韞: '韫',\n\ts韫: '韞',\n\tt韜: '韬',\n\ts韬: '韜',\n\tt韻: '韵',\n\ts韵: '韻',\n\tt頁: '页',\n\ts页: '頁',\n\tt頂: '顶',\n\ts顶: '頂',\n\tt頃: '顷',\n\ts顷: '頃',\n\tt頇: '顸',\n\ts顸: '頇',\n\tt項: '项',\n\ts项: '項',\n\tt順: '顺',\n\ts顺: '順',\n\tt須: '须',\n\ts须: '須',\n\tt頊: '顼',\n\ts顼: '頊',\n\tt頑: '顽',\n\ts顽: '頑',\n\tt顧: '顾',\n\ts顾: '顧',\n\tt頓: '顿',\n\ts顿: '頓',\n\tt頎: '颀',\n\ts颀: '頎',\n\tt頒: '颁',\n\ts颁: '頒',\n\tt頌: '颂',\n\ts颂: '頌',\n\tt頏: '颃',\n\ts颃: '頏',\n\tt預: '预',\n\ts预: '預',\n\tt顱: '颅',\n\ts颅: '顱',\n\tt領: '领',\n\ts领: '領',\n\tt頗: '颇',\n\ts颇: '頗',\n\tt頸: '颈',\n\ts颈: '頸',\n\tt頡: '颉',\n\ts颉: '頡',\n\tt頰: '颊',\n\ts颊: '頰',\n\tt頲: '颋',\n\ts颋: '頲',\n\tt頜: '颌',\n\ts颌: '頜',\n\tt潁: '颍',\n\ts颍: '潁',\n\tt頦: '颏',\n\ts颏: '頦',\n\tt頤: '颐',\n\ts颐: '頤',\n\tt頻: '频',\n\ts频: '頻',\n\tt頹: '颓',\n\ts颓: '頹',\n\tt頷: '颔',\n\ts颔: '頷',\n\tt穎: '颖',\n\ts颖: '穎',\n\tt顆: '颗',\n\ts颗: '顆',\n\tt題: '题',\n\ts题: '題',\n\tt顒: '颙',\n\ts颙: '顒',\n\tt顎: '颚',\n\ts颚: '顎',\n\tt顓: '颛',\n\ts颛: '顓',\n\tt顏: '颜',\n\ts颜: '顏',\n\tt額: '额',\n\ts额: '額',\n\tt顳: '颞',\n\ts颞: '顳',\n\tt顢: '颟',\n\ts颟: '顢',\n\tt顛: '颠',\n\ts颠: '顛',\n\tt顙: '颡',\n\ts颡: '顙',\n\tt顥: '颢',\n\ts颢: '顥',\n\tt纇: '颣',\n\ts颣: '纇',\n\tt顫: '颤',\n\ts颤: '顫',\n\tt顰: '颦',\n\ts颦: '顰',\n\tt顴: '颧',\n\ts颧: '顴',\n\tt風: '风',\n\ts风: '風',\n\tt颺: '扬',\n\tt颭: '飐',\n\ts飐: '颭',\n\tt颮: '飑',\n\ts飑: '颮',\n\tt颯: '飒',\n\ts飒: '颯',\n\tt颶: '飓',\n\ts飓: '颶',\n\tt颸: '飔',\n\ts飔: '颸',\n\tt颼: '飕',\n\ts飕: '颼',\n\tt颻: '飖',\n\ts飖: '颻',\n\tt飀: '飗',\n\ts飗: '飀',\n\tt飄: '飘',\n\ts飘: '飄',\n\tt飆: '飙',\n\ts飙: '飆',\n\tt飛: '飞',\n\ts飞: '飛',\n\tt饗: '飨',\n\ts飨: '饗',\n\tt饜: '餍',\n\ts餍: '饜',\n\tt飣: '饤',\n\ts饤: '飣',\n\tt饑: '饥',\n\ts饥: '饑',\n\tt飥: '饦',\n\ts饦: '飥',\n\tt餳: '糖',\n\ts糖: '餳',\n\tt飩: '饨',\n\ts饨: '飩',\n\tt餼: '饩',\n\ts饩: '餼',\n\tt飪: '饪',\n\ts饪: '飪',\n\tt飫: '饫',\n\ts饫: '飫',\n\tt飭: '饬',\n\ts饬: '飭',\n\tt飯: '饭',\n\ts饭: '飯',\n\tt飲: '饮',\n\ts饮: '飲',\n\tt餞: '饯',\n\ts饯: '餞',\n\tt飾: '饰',\n\ts饰: '飾',\n\tt飽: '饱',\n\ts饱: '飽',\n\tt飼: '饲',\n\ts饲: '飼',\n\tt飿: '饳',\n\ts饳: '飿',\n\tt飴: '饴',\n\ts饴: '飴',\n\tt餌: '饵',\n\ts饵: '餌',\n\tt饒: '饶',\n\ts饶: '饒',\n\tt餉: '饷',\n\ts饷: '餉',\n\tt餄: '饸',\n\ts饸: '餄',\n\tt餎: '饹',\n\ts饹: '餎',\n\tt餃: '饺',\n\ts饺: '餃',\n\tt餅: '饼',\n\ts饼: '餅',\n\tt餑: '饽',\n\ts饽: '餑',\n\tt餖: '饾',\n\ts饾: '餖',\n\tt餓: '饿',\n\ts饿: '餓',\n\tt餒: '馁',\n\ts馁: '餒',\n\tt餛: '馄',\n\ts馄: '餛',\n\tt餡: '馅',\n\ts馅: '餡',\n\tt館: '馆',\n\ts馆: '館',\n\tt饋: '馈',\n\ts馈: '饋',\n\tt餶: '馉',\n\ts馉: '餶',\n\tt餿: '馊',\n\ts馊: '餿',\n\tt饞: '馋',\n\ts馋: '饞',\n\tt饁: '馌',\n\ts馌: '饁',\n\tt饃: '馍',\n\ts馍: '饃',\n\tt餺: '馎',\n\ts馎: '餺',\n\tt餾: '馏',\n\ts馏: '餾',\n\tt饈: '馐',\n\ts馐: '饈',\n\tt饉: '馑',\n\ts馑: '饉',\n\tt饅: '馒',\n\ts馒: '饅',\n\tt饌: '馔',\n\ts馔: '饌',\n\tt馬: '马',\n\ts马: '馬',\n\tt馭: '驭',\n\ts驭: '馭',\n\tt馱: '驮',\n\ts驮: '馱',\n\tt馴: '驯',\n\ts驯: '馴',\n\tt馳: '驰',\n\ts驰: '馳',\n\tt驅: '驱',\n\ts驱: '驅',\n\tt駁: '驳',\n\ts驳: '駁',\n\tt驢: '驴',\n\ts驴: '驢',\n\tt駔: '驵',\n\ts驵: '駔',\n\tt駛: '驶',\n\ts驶: '駛',\n\tt駟: '驷',\n\ts驷: '駟',\n\tt駙: '驸',\n\ts驸: '駙',\n\tt駒: '驹',\n\ts驹: '駒',\n\tt騶: '驺',\n\ts驺: '騶',\n\tt駐: '驻',\n\ts驻: '駐',\n\tt駝: '驼',\n\ts驼: '駝',\n\tt駑: '驽',\n\ts驽: '駑',\n\tt駕: '驾',\n\ts驾: '駕',\n\tt驛: '驿',\n\ts驿: '驛',\n\tt駘: '骀',\n\ts骀: '駘',\n\tt驍: '骁',\n\ts骁: '驍',\n\tt罵: '骂',\n\ts骂: '罵',\n\tt駰: '骃',\n\ts骃: '駰',\n\tt驕: '骄',\n\ts骄: '驕',\n\tt驊: '骅',\n\ts骅: '驊',\n\tt駱: '骆',\n\ts骆: '駱',\n\tt駭: '骇',\n\ts骇: '駭',\n\tt駢: '骈',\n\ts骈: '駢',\n\tt驫: '骉',\n\ts骉: '驫',\n\tt驪: '骊',\n\ts骊: '驪',\n\tt騁: '骋',\n\ts骋: '騁',\n\tt驗: '验',\n\ts验: '驗',\n\tt騂: '骍',\n\ts骍: '騂',\n\tt駸: '骎',\n\ts骎: '駸',\n\tt駿: '骏',\n\ts骏: '駿',\n\tt騏: '骐',\n\ts骐: '騏',\n\tt騎: '骑',\n\ts骑: '騎',\n\tt騍: '骒',\n\ts骒: '騍',\n\tt騅: '骓',\n\ts骓: '騅',\n\tt驌: '骕',\n\ts骕: '驌',\n\tt驂: '骖',\n\ts骖: '驂',\n\tt騙: '骗',\n\ts骗: '騙',\n\tt騭: '骘',\n\ts骘: '騭',\n\tt騷: '骚',\n\ts骚: '騷',\n\tt騖: '骛',\n\ts骛: '騖',\n\tt驁: '骜',\n\ts骜: '驁',\n\tt騮: '骝',\n\ts骝: '騮',\n\tt騫: '骞',\n\ts骞: '騫',\n\tt騸: '骟',\n\ts骟: '騸',\n\tt驃: '骠',\n\ts骠: '驃',\n\tt騾: '骡',\n\ts骡: '騾',\n\tt驄: '骢',\n\ts骢: '驄',\n\tt驟: '骤',\n\ts骤: '驟',\n\tt驥: '骥',\n\ts骥: '驥',\n\tt驦: '骦',\n\ts骦: '驦',\n\tt驤: '骧',\n\ts骧: '驤',\n\tt髏: '髅',\n\ts髅: '髏',\n\tt髖: '髋',\n\ts髋: '髖',\n\tt髕: '髌',\n\ts髌: '髕',\n\tt鬢: '鬓',\n\ts鬓: '鬢',\n\tt魘: '魇',\n\ts魇: '魘',\n\tt魎: '魉',\n\ts魉: '魎',\n\tt魚: '鱼',\n\ts鱼: '魚',\n\tt魷: '鱿',\n\ts鱿: '魷',\n\tt魨: '鲀',\n\ts鲀: '魨',\n\tt魯: '鲁',\n\ts鲁: '魯',\n\tt魴: '鲂',\n\ts鲂: '魴',\n\tt鮁: '鲅',\n\ts鲅: '鮁',\n\tt鮃: '鲆',\n\ts鲆: '鮃',\n\tt鯰: '鲶',\n\ts鲶: '鯰',\n\tt鱸: '鲈',\n\ts鲈: '鱸',\n\tt鮓: '鲊',\n\ts鲊: '鮓',\n\tt鮒: '鲋',\n\ts鲋: '鮒',\n\tt鮑: '鲍',\n\ts鲍: '鮑',\n\tt鱟: '鲎',\n\ts鲎: '鱟',\n\tt鮍: '鲏',\n\ts鲏: '鮍',\n\tt鮐: '鲐',\n\ts鲐: '鮐',\n\tt鮭: '鲑',\n\ts鲑: '鮭',\n\tt鮚: '鲒',\n\ts鲒: '鮚',\n\tt鮪: '鲔',\n\ts鲔: '鮪',\n\tt鮞: '鲕',\n\ts鲕: '鮞',\n\tt鮦: '鲖',\n\ts鲖: '鮦',\n\tt鰂: '鲗',\n\ts鲗: '鰂',\n\tt鱠: '鲙',\n\ts鲙: '鱠',\n\tt鱭: '鲚',\n\ts鲚: '鱭',\n\tt鮫: '鲛',\n\ts鲛: '鮫',\n\tt鮮: '鲜',\n\ts鲜: '鮮',\n\tt鯗: '鲞',\n\ts鲞: '鯗',\n\tt鱘: '鲟',\n\ts鲟: '鱘',\n\tt鯁: '鲠',\n\ts鲠: '鯁',\n\tt鱺: '鲡',\n\ts鲡: '鱺',\n\tt鰱: '鲢',\n\ts鲢: '鰱',\n\tt鰹: '鲣',\n\ts鲣: '鰹',\n\tt鯉: '鲤',\n\ts鲤: '鯉',\n\tt鰣: '鲥',\n\ts鲥: '鰣',\n\tt鰷: '鲦',\n\ts鲦: '鰷',\n\tt鯀: '鲧',\n\ts鲧: '鯀',\n\tt鯊: '鲨',\n\ts鲨: '鯊',\n\tt鯇: '鲩',\n\ts鲩: '鯇',\n\tt鯽: '鲫',\n\ts鲫: '鯽',\n\tt鯖: '鲭',\n\ts鲭: '鯖',\n\tt鯪: '鲮',\n\ts鲮: '鯪',\n\tt鯕: '鲯',\n\ts鲯: '鯕',\n\tt鯫: '鲰',\n\ts鲰: '鯫',\n\tt鯡: '鲱',\n\ts鲱: '鯡',\n\tt鯤: '鲲',\n\ts鲲: '鯤',\n\tt鯧: '鲳',\n\ts鲳: '鯧',\n\tt鯝: '鲴',\n\ts鲴: '鯝',\n\tt鯢: '鲵',\n\ts鲵: '鯢',\n\tt鯛: '鲷',\n\ts鲷: '鯛',\n\tt鯨: '鲸',\n\ts鲸: '鯨',\n\tt鯔: '鲻',\n\ts鲻: '鯔',\n\tt鱝: '鲼',\n\ts鲼: '鱝',\n\tt鰈: '鲽',\n\ts鲽: '鰈',\n\tt鰮: '鳁',\n\ts鳁: '鰮',\n\tt鰓: '鳃',\n\ts鳃: '鰓',\n\tt鱷: '鳄',\n\ts鳄: '鱷',\n\tt鰍: '鳅',\n\ts鳅: '鰍',\n\tt鰒: '鳆',\n\ts鳆: '鰒',\n\tt鰉: '鳇',\n\ts鳇: '鰉',\n\tt鱂: '鳉',\n\ts鳉: '鱂',\n\tt鯿: '鳊',\n\ts鳊: '鯿',\n\tt鼇: '鳌',\n\ts鳌: '鼇',\n\tt鰭: '鳍',\n\ts鳍: '鰭',\n\tt鰨: '鳎',\n\ts鳎: '鰨',\n\tt鰥: '鳏',\n\ts鳏: '鰥',\n\tt鰩: '鳐',\n\ts鳐: '鰩',\n\tt鰟: '鳑',\n\ts鳑: '鰟',\n\tt鰜: '鳒',\n\ts鳒: '鰜',\n\tt鰾: '鳔',\n\ts鳔: '鰾',\n\tt鱈: '鳕',\n\ts鳕: '鱈',\n\tt鱉: '鳖',\n\ts鳖: '鱉',\n\tt鰻: '鳗',\n\ts鳗: '鰻',\n\tt鱖: '鳜',\n\ts鳜: '鱖',\n\tt鱔: '鳝',\n\ts鳝: '鱔',\n\tt鱗: '鳞',\n\ts鳞: '鱗',\n\tt鱒: '鳟',\n\ts鳟: '鱒',\n\tt鱧: '鳢',\n\ts鳢: '鱧',\n\tt鱣: '鳣',\n\ts鳣: '鱣',\n\tt鳥: '鸟',\n\ts鸟: '鳥',\n\tt鳩: '鸠',\n\ts鸠: '鳩',\n\tt雞: '鸡',\n\ts鸡: '雞',\n\tt鳶: '鸢',\n\ts鸢: '鳶',\n\tt鳴: '鸣',\n\ts鸣: '鳴',\n\tt鳲: '鸤',\n\ts鸤: '鳲',\n\tt鷗: '鸥',\n\ts鸥: '鷗',\n\tt鴉: '鸦',\n\ts鸦: '鴉',\n\tt鴇: '鸨',\n\ts鸨: '鴇',\n\tt鴆: '鸩',\n\ts鸩: '鴆',\n\tt鴣: '鸪',\n\ts鸪: '鴣',\n\tt鶇: '鸫',\n\ts鸫: '鶇',\n\tt鸕: '鸬',\n\ts鸬: '鸕',\n\tt鴨: '鸭',\n\ts鸭: '鴨',\n\tt鴞: '鸮',\n\ts鸮: '鴞',\n\tt鴦: '鸯',\n\ts鸯: '鴦',\n\tt鴒: '鸰',\n\ts鸰: '鴒',\n\tt鴟: '鸱',\n\ts鸱: '鴟',\n\tt鴝: '鸲',\n\ts鸲: '鴝',\n\tt鴛: '鸳',\n\ts鸳: '鴛',\n\tt鴕: '鸵',\n\ts鸵: '鴕',\n\tt鷥: '鸶',\n\ts鸶: '鷥',\n\tt鷙: '鸷',\n\ts鸷: '鷙',\n\tt鴯: '鸸',\n\ts鸸: '鴯',\n\tt鴰: '鸹',\n\ts鸹: '鴰',\n\tt鵂: '鸺',\n\ts鸺: '鵂',\n\tt鴴: '鸻',\n\ts鸻: '鴴',\n\tt鴿: '鸽',\n\ts鸽: '鴿',\n\tt鸞: '鸾',\n\ts鸾: '鸞',\n\tt鴻: '鸿',\n\ts鸿: '鴻',\n\tt鵓: '鹁',\n\ts鹁: '鵓',\n\tt鸝: '鹂',\n\ts鹂: '鸝',\n\tt鵑: '鹃',\n\ts鹃: '鵑',\n\tt鵠: '鹄',\n\ts鹄: '鵠',\n\tt鵝: '鹅',\n\ts鹅: '鵝',\n\tt鵒: '鹆',\n\ts鹆: '鵒',\n\tt鷳: '鹇',\n\ts鹇: '鷳',\n\tt鵜: '鹈',\n\ts鹈: '鵜',\n\tt鵡: '鹉',\n\ts鹉: '鵡',\n\tt鵲: '鹊',\n\ts鹊: '鵲',\n\tt鶓: '鹋',\n\ts鹋: '鶓',\n\tt鵪: '鹌',\n\ts鹌: '鵪',\n\tt鶤: '鹍',\n\ts鹍: '鶤',\n\tt鵯: '鹎',\n\ts鹎: '鵯',\n\tt鵬: '鹏',\n\ts鹏: '鵬',\n\tt鶉: '鹑',\n\ts鹑: '鶉',\n\tt鵷: '鹓',\n\ts鹓: '鵷',\n\tt鷫: '鹔',\n\ts鹔: '鷫',\n\tt鶘: '鹕',\n\ts鹕: '鶘',\n\tt鶡: '鹖',\n\ts鹖: '鶡',\n\tt鶚: '鹗',\n\ts鹗: '鶚',\n\tt鶻: '鹘',\n\ts鹘: '鶻',\n\tt鶿: '鹚',\n\ts鹚: '鶿',\n\tt鶥: '鹛',\n\ts鹛: '鶥',\n\tt鶩: '鹜',\n\ts鹜: '鶩',\n\tt鷂: '鹞',\n\ts鹞: '鷂',\n\tt鶲: '鹟',\n\ts鹟: '鶲',\n\tt鶹: '鹠',\n\ts鹠: '鶹',\n\tt鶺: '鹡',\n\ts鹡: '鶺',\n\tt鷁: '鹢',\n\ts鹢: '鷁',\n\tt鶼: '鹣',\n\ts鹣: '鶼',\n\tt鶴: '鹤',\n\ts鹤: '鶴',\n\tt鷖: '鹥',\n\ts鹥: '鷖',\n\tt鸚: '鹦',\n\ts鹦: '鸚',\n\tt鷓: '鹧',\n\ts鹧: '鷓',\n\tt鷚: '鹨',\n\ts鹨: '鷚',\n\tt鷯: '鹩',\n\ts鹩: '鷯',\n\tt鷦: '鹪',\n\ts鹪: '鷦',\n\tt鷲: '鹫',\n\ts鹫: '鷲',\n\tt鷸: '鹬',\n\ts鹬: '鷸',\n\tt鷺: '鹭',\n\ts鹭: '鷺',\n\tt鸇: '鹯',\n\ts鹯: '鸇',\n\tt鷹: '鹰',\n\ts鹰: '鷹',\n\tt鸛: '鹳',\n\ts鹳: '鸛',\n\tt鹺: '鹾',\n\ts鹾: '鹺',\n\tt麥: '麦',\n\ts麦: '麥',\n\tt麩: '麸',\n\ts麸: '麩',\n\tt黃: '黄',\n\ts黄: '黃',\n\tt黌: '黉',\n\ts黉: '黌',\n\tt黶: '黡',\n\ts黡: '黶',\n\tt黷: '黩',\n\ts黩: '黷',\n\tt黽: '黾',\n\ts黾: '黽',\n\tt黿: '鼋',\n\ts鼋: '黿',\n\tt鼉: '鼍',\n\ts鼍: '鼉',\n\tt鞀: '鼗',\n\ts鼗: '鞀',\n\tt鼴: '鼹',\n\ts鼹: '鼴',\n\tt齊: '齐',\n\ts齐: '齊',\n\tt齏: '齑',\n\ts齑: '齏',\n\tt齒: '齿',\n\ts齿: '齒',\n\tt齔: '龀',\n\ts龀: '齔',\n\tt齕: '龁',\n\ts龁: '齕',\n\tt齟: '龃',\n\ts龃: '齟',\n\tt齡: '龄',\n\ts龄: '齡',\n\tt齙: '龅',\n\ts龅: '齙',\n\tt齠: '龆',\n\ts龆: '齠',\n\tt齜: '龇',\n\ts龇: '齜',\n\tt齦: '龈',\n\ts龈: '齦',\n\tt齬: '龉',\n\ts龉: '齬',\n\tt齪: '龊',\n\ts龊: '齪',\n\tt齲: '龋',\n\ts龋: '齲',\n\tt齷: '龌',\n\ts龌: '齷',\n\tt龍: '龙',\n\ts龙: '龍',\n\tt龔: '龚',\n\ts龚: '龔',\n\tt龕: '龛',\n\ts龛: '龕',\n\tt龜: '龟',\n\ts龟: '龜',\n\tt誌: '志',\n\ts志: '誌',\n\tt製: '制',\n\ts制: '製',\n\tt隻: '只',\n\ts只: '隻',\n\tt裡: '里',\n\tt係: '系',\n\ts系: '係',\n\tt範: '范',\n\ts范: '範',\n\tt鬆: '松',\n\ts松: '鬆',\n\tt嚐: '尝',\n\ts尝: '嘗',\n\tt嘗: '尝',\n\tt鬨: '哄',\n\ts哄: '鬨',\n\tt麵: '面',\n\ts面: '麵',\n\tt準: '准',\n\ts准: '準',\n\tt鐘: '钟',\n\tt彆: '别',\n\tt閒: '闲',\n\tt乾: '干',\n\tt儘: '尽',\n\tt臟: '脏',\n\tt拚: '拼',\n\ts拼: '拚',\n};\n\n/**\n * 翻譯\n * @param {string} text\n * @param {string} prefix\n * @returns {string}\n */\nconst t = (text, prefix) => {\n\tlet result = '';\n\tfor (let i = 0; i < text.length; i++) {\n\t\tconst t = text[i];\n\t\tconst st = stObj[`${prefix}${t}`] || t;\n\t\tresult += st;\n\t}\n\treturn result\n};\n\n// 繁轉簡\nconst toSimple = text => {\n\treturn t(text, 't')\n};\n\n// 簡轉繁\nconst toTraditional = text => {\n\treturn t(text, 's')\n};\n\n// 檢測中文字是否相等\nconst checkSameChinese = (text1, text2) => {\n\tif (text1.length !== text2.length) {\n\t\treturn false\n\t}\n\tlet same = true;\n\tfor (let i = 0; i < text1.length; i++) {\n\t\tconst t1 = text1[i];\n\t\tconst t2 = text2[i];\n\t\tconst stt = stObj[`t${t1}`];\n\t\tif (stt != null) {\n\t\t\tif (!(stt === t2 || t1 === t2)) {\n\t\t\t\tsame = false;\n\t\t\t\tbreak\n\t\t\t}\n\t\t} else {\n\t\t\tif (t1 !== t2) {\n\t\t\t\tsame = false;\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\treturn same\n};\n\n// 檢測文字(參數1)是否包含關鍵字(參數2)\nconst checkIncludeText = (text, keyword) => {\n\treturn toSimple(text).includes(toSimple(keyword))\n};\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction commonjsRequire(path) {\n\tthrow new Error('Could not dynamically require \"' + path + '\". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');\n}\n\nvar moment$1 = {exports: {}};\n\n(function (module, exports) {\n(function (global, factory) {\n\t    module.exports = factory() ;\n\t}(commonjsGlobal, (function () {\n\t    var hookCallback;\n\n\t    function hooks() {\n\t        return hookCallback.apply(null, arguments);\n\t    }\n\n\t    // This is done to register the method called with moment()\n\t    // without creating circular dependencies.\n\t    function setHookCallback(callback) {\n\t        hookCallback = callback;\n\t    }\n\n\t    function isArray(input) {\n\t        return (\n\t            input instanceof Array ||\n\t            Object.prototype.toString.call(input) === '[object Array]'\n\t        );\n\t    }\n\n\t    function isObject(input) {\n\t        // IE8 will treat undefined and null as object if it wasn't for\n\t        // input != null\n\t        return (\n\t            input != null &&\n\t            Object.prototype.toString.call(input) === '[object Object]'\n\t        );\n\t    }\n\n\t    function hasOwnProp(a, b) {\n\t        return Object.prototype.hasOwnProperty.call(a, b);\n\t    }\n\n\t    function isObjectEmpty(obj) {\n\t        if (Object.getOwnPropertyNames) {\n\t            return Object.getOwnPropertyNames(obj).length === 0;\n\t        } else {\n\t            var k;\n\t            for (k in obj) {\n\t                if (hasOwnProp(obj, k)) {\n\t                    return false;\n\t                }\n\t            }\n\t            return true;\n\t        }\n\t    }\n\n\t    function isUndefined(input) {\n\t        return input === void 0;\n\t    }\n\n\t    function isNumber(input) {\n\t        return (\n\t            typeof input === 'number' ||\n\t            Object.prototype.toString.call(input) === '[object Number]'\n\t        );\n\t    }\n\n\t    function isDate(input) {\n\t        return (\n\t            input instanceof Date ||\n\t            Object.prototype.toString.call(input) === '[object Date]'\n\t        );\n\t    }\n\n\t    function map(arr, fn) {\n\t        var res = [],\n\t            i,\n\t            arrLen = arr.length;\n\t        for (i = 0; i < arrLen; ++i) {\n\t            res.push(fn(arr[i], i));\n\t        }\n\t        return res;\n\t    }\n\n\t    function extend(a, b) {\n\t        for (var i in b) {\n\t            if (hasOwnProp(b, i)) {\n\t                a[i] = b[i];\n\t            }\n\t        }\n\n\t        if (hasOwnProp(b, 'toString')) {\n\t            a.toString = b.toString;\n\t        }\n\n\t        if (hasOwnProp(b, 'valueOf')) {\n\t            a.valueOf = b.valueOf;\n\t        }\n\n\t        return a;\n\t    }\n\n\t    function createUTC(input, format, locale, strict) {\n\t        return createLocalOrUTC(input, format, locale, strict, true).utc();\n\t    }\n\n\t    function defaultParsingFlags() {\n\t        // We need to deep clone this object.\n\t        return {\n\t            empty: false,\n\t            unusedTokens: [],\n\t            unusedInput: [],\n\t            overflow: -2,\n\t            charsLeftOver: 0,\n\t            nullInput: false,\n\t            invalidEra: null,\n\t            invalidMonth: null,\n\t            invalidFormat: false,\n\t            userInvalidated: false,\n\t            iso: false,\n\t            parsedDateParts: [],\n\t            era: null,\n\t            meridiem: null,\n\t            rfc2822: false,\n\t            weekdayMismatch: false,\n\t        };\n\t    }\n\n\t    function getParsingFlags(m) {\n\t        if (m._pf == null) {\n\t            m._pf = defaultParsingFlags();\n\t        }\n\t        return m._pf;\n\t    }\n\n\t    var some;\n\t    if (Array.prototype.some) {\n\t        some = Array.prototype.some;\n\t    } else {\n\t        some = function (fun) {\n\t            var t = Object(this),\n\t                len = t.length >>> 0,\n\t                i;\n\n\t            for (i = 0; i < len; i++) {\n\t                if (i in t && fun.call(this, t[i], i, t)) {\n\t                    return true;\n\t                }\n\t            }\n\n\t            return false;\n\t        };\n\t    }\n\n\t    function isValid(m) {\n\t        if (m._isValid == null) {\n\t            var flags = getParsingFlags(m),\n\t                parsedParts = some.call(flags.parsedDateParts, function (i) {\n\t                    return i != null;\n\t                }),\n\t                isNowValid =\n\t                    !isNaN(m._d.getTime()) &&\n\t                    flags.overflow < 0 &&\n\t                    !flags.empty &&\n\t                    !flags.invalidEra &&\n\t                    !flags.invalidMonth &&\n\t                    !flags.invalidWeekday &&\n\t                    !flags.weekdayMismatch &&\n\t                    !flags.nullInput &&\n\t                    !flags.invalidFormat &&\n\t                    !flags.userInvalidated &&\n\t                    (!flags.meridiem || (flags.meridiem && parsedParts));\n\n\t            if (m._strict) {\n\t                isNowValid =\n\t                    isNowValid &&\n\t                    flags.charsLeftOver === 0 &&\n\t                    flags.unusedTokens.length === 0 &&\n\t                    flags.bigHour === undefined;\n\t            }\n\n\t            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n\t                m._isValid = isNowValid;\n\t            } else {\n\t                return isNowValid;\n\t            }\n\t        }\n\t        return m._isValid;\n\t    }\n\n\t    function createInvalid(flags) {\n\t        var m = createUTC(NaN);\n\t        if (flags != null) {\n\t            extend(getParsingFlags(m), flags);\n\t        } else {\n\t            getParsingFlags(m).userInvalidated = true;\n\t        }\n\n\t        return m;\n\t    }\n\n\t    // Plugins that add properties should also add the key here (null value),\n\t    // so we can properly clone ourselves.\n\t    var momentProperties = (hooks.momentProperties = []),\n\t        updateInProgress = false;\n\n\t    function copyConfig(to, from) {\n\t        var i,\n\t            prop,\n\t            val,\n\t            momentPropertiesLen = momentProperties.length;\n\n\t        if (!isUndefined(from._isAMomentObject)) {\n\t            to._isAMomentObject = from._isAMomentObject;\n\t        }\n\t        if (!isUndefined(from._i)) {\n\t            to._i = from._i;\n\t        }\n\t        if (!isUndefined(from._f)) {\n\t            to._f = from._f;\n\t        }\n\t        if (!isUndefined(from._l)) {\n\t            to._l = from._l;\n\t        }\n\t        if (!isUndefined(from._strict)) {\n\t            to._strict = from._strict;\n\t        }\n\t        if (!isUndefined(from._tzm)) {\n\t            to._tzm = from._tzm;\n\t        }\n\t        if (!isUndefined(from._isUTC)) {\n\t            to._isUTC = from._isUTC;\n\t        }\n\t        if (!isUndefined(from._offset)) {\n\t            to._offset = from._offset;\n\t        }\n\t        if (!isUndefined(from._pf)) {\n\t            to._pf = getParsingFlags(from);\n\t        }\n\t        if (!isUndefined(from._locale)) {\n\t            to._locale = from._locale;\n\t        }\n\n\t        if (momentPropertiesLen > 0) {\n\t            for (i = 0; i < momentPropertiesLen; i++) {\n\t                prop = momentProperties[i];\n\t                val = from[prop];\n\t                if (!isUndefined(val)) {\n\t                    to[prop] = val;\n\t                }\n\t            }\n\t        }\n\n\t        return to;\n\t    }\n\n\t    // Moment prototype object\n\t    function Moment(config) {\n\t        copyConfig(this, config);\n\t        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\t        if (!this.isValid()) {\n\t            this._d = new Date(NaN);\n\t        }\n\t        // Prevent infinite loop in case updateOffset creates new moment\n\t        // objects.\n\t        if (updateInProgress === false) {\n\t            updateInProgress = true;\n\t            hooks.updateOffset(this);\n\t            updateInProgress = false;\n\t        }\n\t    }\n\n\t    function isMoment(obj) {\n\t        return (\n\t            obj instanceof Moment || (obj != null && obj._isAMomentObject != null)\n\t        );\n\t    }\n\n\t    function warn(msg) {\n\t        if (\n\t            hooks.suppressDeprecationWarnings === false &&\n\t            typeof console !== 'undefined' &&\n\t            console.warn\n\t        ) {\n\t            console.warn('Deprecation warning: ' + msg);\n\t        }\n\t    }\n\n\t    function deprecate(msg, fn) {\n\t        var firstTime = true;\n\n\t        return extend(function () {\n\t            if (hooks.deprecationHandler != null) {\n\t                hooks.deprecationHandler(null, msg);\n\t            }\n\t            if (firstTime) {\n\t                var args = [],\n\t                    arg,\n\t                    i,\n\t                    key,\n\t                    argLen = arguments.length;\n\t                for (i = 0; i < argLen; i++) {\n\t                    arg = '';\n\t                    if (typeof arguments[i] === 'object') {\n\t                        arg += '\\n[' + i + '] ';\n\t                        for (key in arguments[0]) {\n\t                            if (hasOwnProp(arguments[0], key)) {\n\t                                arg += key + ': ' + arguments[0][key] + ', ';\n\t                            }\n\t                        }\n\t                        arg = arg.slice(0, -2); // Remove trailing comma and space\n\t                    } else {\n\t                        arg = arguments[i];\n\t                    }\n\t                    args.push(arg);\n\t                }\n\t                warn(\n\t                    msg +\n\t                        '\\nArguments: ' +\n\t                        Array.prototype.slice.call(args).join('') +\n\t                        '\\n' +\n\t                        new Error().stack\n\t                );\n\t                firstTime = false;\n\t            }\n\t            return fn.apply(this, arguments);\n\t        }, fn);\n\t    }\n\n\t    var deprecations = {};\n\n\t    function deprecateSimple(name, msg) {\n\t        if (hooks.deprecationHandler != null) {\n\t            hooks.deprecationHandler(name, msg);\n\t        }\n\t        if (!deprecations[name]) {\n\t            warn(msg);\n\t            deprecations[name] = true;\n\t        }\n\t    }\n\n\t    hooks.suppressDeprecationWarnings = false;\n\t    hooks.deprecationHandler = null;\n\n\t    function isFunction(input) {\n\t        return (\n\t            (typeof Function !== 'undefined' && input instanceof Function) ||\n\t            Object.prototype.toString.call(input) === '[object Function]'\n\t        );\n\t    }\n\n\t    function set(config) {\n\t        var prop, i;\n\t        for (i in config) {\n\t            if (hasOwnProp(config, i)) {\n\t                prop = config[i];\n\t                if (isFunction(prop)) {\n\t                    this[i] = prop;\n\t                } else {\n\t                    this['_' + i] = prop;\n\t                }\n\t            }\n\t        }\n\t        this._config = config;\n\t        // Lenient ordinal parsing accepts just a number in addition to\n\t        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n\t        // TODO: Remove \"ordinalParse\" fallback in next major release.\n\t        this._dayOfMonthOrdinalParseLenient = new RegExp(\n\t            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n\t                '|' +\n\t                /\\d{1,2}/.source\n\t        );\n\t    }\n\n\t    function mergeConfigs(parentConfig, childConfig) {\n\t        var res = extend({}, parentConfig),\n\t            prop;\n\t        for (prop in childConfig) {\n\t            if (hasOwnProp(childConfig, prop)) {\n\t                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n\t                    res[prop] = {};\n\t                    extend(res[prop], parentConfig[prop]);\n\t                    extend(res[prop], childConfig[prop]);\n\t                } else if (childConfig[prop] != null) {\n\t                    res[prop] = childConfig[prop];\n\t                } else {\n\t                    delete res[prop];\n\t                }\n\t            }\n\t        }\n\t        for (prop in parentConfig) {\n\t            if (\n\t                hasOwnProp(parentConfig, prop) &&\n\t                !hasOwnProp(childConfig, prop) &&\n\t                isObject(parentConfig[prop])\n\t            ) {\n\t                // make sure changes to properties don't modify parent config\n\t                res[prop] = extend({}, res[prop]);\n\t            }\n\t        }\n\t        return res;\n\t    }\n\n\t    function Locale(config) {\n\t        if (config != null) {\n\t            this.set(config);\n\t        }\n\t    }\n\n\t    var keys;\n\n\t    if (Object.keys) {\n\t        keys = Object.keys;\n\t    } else {\n\t        keys = function (obj) {\n\t            var i,\n\t                res = [];\n\t            for (i in obj) {\n\t                if (hasOwnProp(obj, i)) {\n\t                    res.push(i);\n\t                }\n\t            }\n\t            return res;\n\t        };\n\t    }\n\n\t    var defaultCalendar = {\n\t        sameDay: '[Today at] LT',\n\t        nextDay: '[Tomorrow at] LT',\n\t        nextWeek: 'dddd [at] LT',\n\t        lastDay: '[Yesterday at] LT',\n\t        lastWeek: '[Last] dddd [at] LT',\n\t        sameElse: 'L',\n\t    };\n\n\t    function calendar(key, mom, now) {\n\t        var output = this._calendar[key] || this._calendar['sameElse'];\n\t        return isFunction(output) ? output.call(mom, now) : output;\n\t    }\n\n\t    function zeroFill(number, targetLength, forceSign) {\n\t        var absNumber = '' + Math.abs(number),\n\t            zerosToFill = targetLength - absNumber.length,\n\t            sign = number >= 0;\n\t        return (\n\t            (sign ? (forceSign ? '+' : '') : '-') +\n\t            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +\n\t            absNumber\n\t        );\n\t    }\n\n\t    var formattingTokens =\n\t            /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,\n\t        localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n\t        formatFunctions = {},\n\t        formatTokenFunctions = {};\n\n\t    // token:    'M'\n\t    // padded:   ['MM', 2]\n\t    // ordinal:  'Mo'\n\t    // callback: function () { this.month() + 1 }\n\t    function addFormatToken(token, padded, ordinal, callback) {\n\t        var func = callback;\n\t        if (typeof callback === 'string') {\n\t            func = function () {\n\t                return this[callback]();\n\t            };\n\t        }\n\t        if (token) {\n\t            formatTokenFunctions[token] = func;\n\t        }\n\t        if (padded) {\n\t            formatTokenFunctions[padded[0]] = function () {\n\t                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n\t            };\n\t        }\n\t        if (ordinal) {\n\t            formatTokenFunctions[ordinal] = function () {\n\t                return this.localeData().ordinal(\n\t                    func.apply(this, arguments),\n\t                    token\n\t                );\n\t            };\n\t        }\n\t    }\n\n\t    function removeFormattingTokens(input) {\n\t        if (input.match(/\\[[\\s\\S]/)) {\n\t            return input.replace(/^\\[|\\]$/g, '');\n\t        }\n\t        return input.replace(/\\\\/g, '');\n\t    }\n\n\t    function makeFormatFunction(format) {\n\t        var array = format.match(formattingTokens),\n\t            i,\n\t            length;\n\n\t        for (i = 0, length = array.length; i < length; i++) {\n\t            if (formatTokenFunctions[array[i]]) {\n\t                array[i] = formatTokenFunctions[array[i]];\n\t            } else {\n\t                array[i] = removeFormattingTokens(array[i]);\n\t            }\n\t        }\n\n\t        return function (mom) {\n\t            var output = '',\n\t                i;\n\t            for (i = 0; i < length; i++) {\n\t                output += isFunction(array[i])\n\t                    ? array[i].call(mom, format)\n\t                    : array[i];\n\t            }\n\t            return output;\n\t        };\n\t    }\n\n\t    // format date using native date object\n\t    function formatMoment(m, format) {\n\t        if (!m.isValid()) {\n\t            return m.localeData().invalidDate();\n\t        }\n\n\t        format = expandFormat(format, m.localeData());\n\t        formatFunctions[format] =\n\t            formatFunctions[format] || makeFormatFunction(format);\n\n\t        return formatFunctions[format](m);\n\t    }\n\n\t    function expandFormat(format, locale) {\n\t        var i = 5;\n\n\t        function replaceLongDateFormatTokens(input) {\n\t            return locale.longDateFormat(input) || input;\n\t        }\n\n\t        localFormattingTokens.lastIndex = 0;\n\t        while (i >= 0 && localFormattingTokens.test(format)) {\n\t            format = format.replace(\n\t                localFormattingTokens,\n\t                replaceLongDateFormatTokens\n\t            );\n\t            localFormattingTokens.lastIndex = 0;\n\t            i -= 1;\n\t        }\n\n\t        return format;\n\t    }\n\n\t    var defaultLongDateFormat = {\n\t        LTS: 'h:mm:ss A',\n\t        LT: 'h:mm A',\n\t        L: 'MM/DD/YYYY',\n\t        LL: 'MMMM D, YYYY',\n\t        LLL: 'MMMM D, YYYY h:mm A',\n\t        LLLL: 'dddd, MMMM D, YYYY h:mm A',\n\t    };\n\n\t    function longDateFormat(key) {\n\t        var format = this._longDateFormat[key],\n\t            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n\t        if (format || !formatUpper) {\n\t            return format;\n\t        }\n\n\t        this._longDateFormat[key] = formatUpper\n\t            .match(formattingTokens)\n\t            .map(function (tok) {\n\t                if (\n\t                    tok === 'MMMM' ||\n\t                    tok === 'MM' ||\n\t                    tok === 'DD' ||\n\t                    tok === 'dddd'\n\t                ) {\n\t                    return tok.slice(1);\n\t                }\n\t                return tok;\n\t            })\n\t            .join('');\n\n\t        return this._longDateFormat[key];\n\t    }\n\n\t    var defaultInvalidDate = 'Invalid date';\n\n\t    function invalidDate() {\n\t        return this._invalidDate;\n\t    }\n\n\t    var defaultOrdinal = '%d',\n\t        defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n\t    function ordinal(number) {\n\t        return this._ordinal.replace('%d', number);\n\t    }\n\n\t    var defaultRelativeTime = {\n\t        future: 'in %s',\n\t        past: '%s ago',\n\t        s: 'a few seconds',\n\t        ss: '%d seconds',\n\t        m: 'a minute',\n\t        mm: '%d minutes',\n\t        h: 'an hour',\n\t        hh: '%d hours',\n\t        d: 'a day',\n\t        dd: '%d days',\n\t        w: 'a week',\n\t        ww: '%d weeks',\n\t        M: 'a month',\n\t        MM: '%d months',\n\t        y: 'a year',\n\t        yy: '%d years',\n\t    };\n\n\t    function relativeTime(number, withoutSuffix, string, isFuture) {\n\t        var output = this._relativeTime[string];\n\t        return isFunction(output)\n\t            ? output(number, withoutSuffix, string, isFuture)\n\t            : output.replace(/%d/i, number);\n\t    }\n\n\t    function pastFuture(diff, output) {\n\t        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n\t        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n\t    }\n\n\t    var aliases = {};\n\n\t    function addUnitAlias(unit, shorthand) {\n\t        var lowerCase = unit.toLowerCase();\n\t        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n\t    }\n\n\t    function normalizeUnits(units) {\n\t        return typeof units === 'string'\n\t            ? aliases[units] || aliases[units.toLowerCase()]\n\t            : undefined;\n\t    }\n\n\t    function normalizeObjectUnits(inputObject) {\n\t        var normalizedInput = {},\n\t            normalizedProp,\n\t            prop;\n\n\t        for (prop in inputObject) {\n\t            if (hasOwnProp(inputObject, prop)) {\n\t                normalizedProp = normalizeUnits(prop);\n\t                if (normalizedProp) {\n\t                    normalizedInput[normalizedProp] = inputObject[prop];\n\t                }\n\t            }\n\t        }\n\n\t        return normalizedInput;\n\t    }\n\n\t    var priorities = {};\n\n\t    function addUnitPriority(unit, priority) {\n\t        priorities[unit] = priority;\n\t    }\n\n\t    function getPrioritizedUnits(unitsObj) {\n\t        var units = [],\n\t            u;\n\t        for (u in unitsObj) {\n\t            if (hasOwnProp(unitsObj, u)) {\n\t                units.push({ unit: u, priority: priorities[u] });\n\t            }\n\t        }\n\t        units.sort(function (a, b) {\n\t            return a.priority - b.priority;\n\t        });\n\t        return units;\n\t    }\n\n\t    function isLeapYear(year) {\n\t        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n\t    }\n\n\t    function absFloor(number) {\n\t        if (number < 0) {\n\t            // -0 -> 0\n\t            return Math.ceil(number) || 0;\n\t        } else {\n\t            return Math.floor(number);\n\t        }\n\t    }\n\n\t    function toInt(argumentForCoercion) {\n\t        var coercedNumber = +argumentForCoercion,\n\t            value = 0;\n\n\t        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n\t            value = absFloor(coercedNumber);\n\t        }\n\n\t        return value;\n\t    }\n\n\t    function makeGetSet(unit, keepTime) {\n\t        return function (value) {\n\t            if (value != null) {\n\t                set$1(this, unit, value);\n\t                hooks.updateOffset(this, keepTime);\n\t                return this;\n\t            } else {\n\t                return get(this, unit);\n\t            }\n\t        };\n\t    }\n\n\t    function get(mom, unit) {\n\t        return mom.isValid()\n\t            ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()\n\t            : NaN;\n\t    }\n\n\t    function set$1(mom, unit, value) {\n\t        if (mom.isValid() && !isNaN(value)) {\n\t            if (\n\t                unit === 'FullYear' &&\n\t                isLeapYear(mom.year()) &&\n\t                mom.month() === 1 &&\n\t                mom.date() === 29\n\t            ) {\n\t                value = toInt(value);\n\t                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](\n\t                    value,\n\t                    mom.month(),\n\t                    daysInMonth(value, mom.month())\n\t                );\n\t            } else {\n\t                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n\t            }\n\t        }\n\t    }\n\n\t    // MOMENTS\n\n\t    function stringGet(units) {\n\t        units = normalizeUnits(units);\n\t        if (isFunction(this[units])) {\n\t            return this[units]();\n\t        }\n\t        return this;\n\t    }\n\n\t    function stringSet(units, value) {\n\t        if (typeof units === 'object') {\n\t            units = normalizeObjectUnits(units);\n\t            var prioritized = getPrioritizedUnits(units),\n\t                i,\n\t                prioritizedLen = prioritized.length;\n\t            for (i = 0; i < prioritizedLen; i++) {\n\t                this[prioritized[i].unit](units[prioritized[i].unit]);\n\t            }\n\t        } else {\n\t            units = normalizeUnits(units);\n\t            if (isFunction(this[units])) {\n\t                return this[units](value);\n\t            }\n\t        }\n\t        return this;\n\t    }\n\n\t    var match1 = /\\d/, //       0 - 9\n\t        match2 = /\\d\\d/, //      00 - 99\n\t        match3 = /\\d{3}/, //     000 - 999\n\t        match4 = /\\d{4}/, //    0000 - 9999\n\t        match6 = /[+-]?\\d{6}/, // -999999 - 999999\n\t        match1to2 = /\\d\\d?/, //       0 - 99\n\t        match3to4 = /\\d\\d\\d\\d?/, //     999 - 9999\n\t        match5to6 = /\\d\\d\\d\\d\\d\\d?/, //   99999 - 999999\n\t        match1to3 = /\\d{1,3}/, //       0 - 999\n\t        match1to4 = /\\d{1,4}/, //       0 - 9999\n\t        match1to6 = /[+-]?\\d{1,6}/, // -999999 - 999999\n\t        matchUnsigned = /\\d+/, //       0 - inf\n\t        matchSigned = /[+-]?\\d+/, //    -inf - inf\n\t        matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi, // +00:00 -00:00 +0000 -0000 or Z\n\t        matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\t        matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/, // 123456789 123456789.123\n\t        // any word (or two) characters or numbers including two/three word month in arabic.\n\t        // includes scottish gaelic two word and hyphenated months\n\t        matchWord =\n\t            /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i,\n\t        regexes;\n\n\t    regexes = {};\n\n\t    function addRegexToken(token, regex, strictRegex) {\n\t        regexes[token] = isFunction(regex)\n\t            ? regex\n\t            : function (isStrict, localeData) {\n\t                  return isStrict && strictRegex ? strictRegex : regex;\n\t              };\n\t    }\n\n\t    function getParseRegexForToken(token, config) {\n\t        if (!hasOwnProp(regexes, token)) {\n\t            return new RegExp(unescapeFormat(token));\n\t        }\n\n\t        return regexes[token](config._strict, config._locale);\n\t    }\n\n\t    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\t    function unescapeFormat(s) {\n\t        return regexEscape(\n\t            s\n\t                .replace('\\\\', '')\n\t                .replace(\n\t                    /\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g,\n\t                    function (matched, p1, p2, p3, p4) {\n\t                        return p1 || p2 || p3 || p4;\n\t                    }\n\t                )\n\t        );\n\t    }\n\n\t    function regexEscape(s) {\n\t        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t    }\n\n\t    var tokens = {};\n\n\t    function addParseToken(token, callback) {\n\t        var i,\n\t            func = callback,\n\t            tokenLen;\n\t        if (typeof token === 'string') {\n\t            token = [token];\n\t        }\n\t        if (isNumber(callback)) {\n\t            func = function (input, array) {\n\t                array[callback] = toInt(input);\n\t            };\n\t        }\n\t        tokenLen = token.length;\n\t        for (i = 0; i < tokenLen; i++) {\n\t            tokens[token[i]] = func;\n\t        }\n\t    }\n\n\t    function addWeekParseToken(token, callback) {\n\t        addParseToken(token, function (input, array, config, token) {\n\t            config._w = config._w || {};\n\t            callback(input, config._w, config, token);\n\t        });\n\t    }\n\n\t    function addTimeToArrayFromToken(token, input, config) {\n\t        if (input != null && hasOwnProp(tokens, token)) {\n\t            tokens[token](input, config._a, config, token);\n\t        }\n\t    }\n\n\t    var YEAR = 0,\n\t        MONTH = 1,\n\t        DATE = 2,\n\t        HOUR = 3,\n\t        MINUTE = 4,\n\t        SECOND = 5,\n\t        MILLISECOND = 6,\n\t        WEEK = 7,\n\t        WEEKDAY = 8;\n\n\t    function mod(n, x) {\n\t        return ((n % x) + x) % x;\n\t    }\n\n\t    var indexOf;\n\n\t    if (Array.prototype.indexOf) {\n\t        indexOf = Array.prototype.indexOf;\n\t    } else {\n\t        indexOf = function (o) {\n\t            // I know\n\t            var i;\n\t            for (i = 0; i < this.length; ++i) {\n\t                if (this[i] === o) {\n\t                    return i;\n\t                }\n\t            }\n\t            return -1;\n\t        };\n\t    }\n\n\t    function daysInMonth(year, month) {\n\t        if (isNaN(year) || isNaN(month)) {\n\t            return NaN;\n\t        }\n\t        var modMonth = mod(month, 12);\n\t        year += (month - modMonth) / 12;\n\t        return modMonth === 1\n\t            ? isLeapYear(year)\n\t                ? 29\n\t                : 28\n\t            : 31 - ((modMonth % 7) % 2);\n\t    }\n\n\t    // FORMATTING\n\n\t    addFormatToken('M', ['MM', 2], 'Mo', function () {\n\t        return this.month() + 1;\n\t    });\n\n\t    addFormatToken('MMM', 0, 0, function (format) {\n\t        return this.localeData().monthsShort(this, format);\n\t    });\n\n\t    addFormatToken('MMMM', 0, 0, function (format) {\n\t        return this.localeData().months(this, format);\n\t    });\n\n\t    // ALIASES\n\n\t    addUnitAlias('month', 'M');\n\n\t    // PRIORITY\n\n\t    addUnitPriority('month', 8);\n\n\t    // PARSING\n\n\t    addRegexToken('M', match1to2);\n\t    addRegexToken('MM', match1to2, match2);\n\t    addRegexToken('MMM', function (isStrict, locale) {\n\t        return locale.monthsShortRegex(isStrict);\n\t    });\n\t    addRegexToken('MMMM', function (isStrict, locale) {\n\t        return locale.monthsRegex(isStrict);\n\t    });\n\n\t    addParseToken(['M', 'MM'], function (input, array) {\n\t        array[MONTH] = toInt(input) - 1;\n\t    });\n\n\t    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n\t        var month = config._locale.monthsParse(input, token, config._strict);\n\t        // if we didn't find a month name, mark the date as invalid.\n\t        if (month != null) {\n\t            array[MONTH] = month;\n\t        } else {\n\t            getParsingFlags(config).invalidMonth = input;\n\t        }\n\t    });\n\n\t    // LOCALES\n\n\t    var defaultLocaleMonths =\n\t            'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n\t                '_'\n\t            ),\n\t        defaultLocaleMonthsShort =\n\t            'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n\t        MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/,\n\t        defaultMonthsShortRegex = matchWord,\n\t        defaultMonthsRegex = matchWord;\n\n\t    function localeMonths(m, format) {\n\t        if (!m) {\n\t            return isArray(this._months)\n\t                ? this._months\n\t                : this._months['standalone'];\n\t        }\n\t        return isArray(this._months)\n\t            ? this._months[m.month()]\n\t            : this._months[\n\t                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)\n\t                      ? 'format'\n\t                      : 'standalone'\n\t              ][m.month()];\n\t    }\n\n\t    function localeMonthsShort(m, format) {\n\t        if (!m) {\n\t            return isArray(this._monthsShort)\n\t                ? this._monthsShort\n\t                : this._monthsShort['standalone'];\n\t        }\n\t        return isArray(this._monthsShort)\n\t            ? this._monthsShort[m.month()]\n\t            : this._monthsShort[\n\t                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'\n\t              ][m.month()];\n\t    }\n\n\t    function handleStrictParse(monthName, format, strict) {\n\t        var i,\n\t            ii,\n\t            mom,\n\t            llc = monthName.toLocaleLowerCase();\n\t        if (!this._monthsParse) {\n\t            // this is not used\n\t            this._monthsParse = [];\n\t            this._longMonthsParse = [];\n\t            this._shortMonthsParse = [];\n\t            for (i = 0; i < 12; ++i) {\n\t                mom = createUTC([2000, i]);\n\t                this._shortMonthsParse[i] = this.monthsShort(\n\t                    mom,\n\t                    ''\n\t                ).toLocaleLowerCase();\n\t                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n\t            }\n\t        }\n\n\t        if (strict) {\n\t            if (format === 'MMM') {\n\t                ii = indexOf.call(this._shortMonthsParse, llc);\n\t                return ii !== -1 ? ii : null;\n\t            } else {\n\t                ii = indexOf.call(this._longMonthsParse, llc);\n\t                return ii !== -1 ? ii : null;\n\t            }\n\t        } else {\n\t            if (format === 'MMM') {\n\t                ii = indexOf.call(this._shortMonthsParse, llc);\n\t                if (ii !== -1) {\n\t                    return ii;\n\t                }\n\t                ii = indexOf.call(this._longMonthsParse, llc);\n\t                return ii !== -1 ? ii : null;\n\t            } else {\n\t                ii = indexOf.call(this._longMonthsParse, llc);\n\t                if (ii !== -1) {\n\t                    return ii;\n\t                }\n\t                ii = indexOf.call(this._shortMonthsParse, llc);\n\t                return ii !== -1 ? ii : null;\n\t            }\n\t        }\n\t    }\n\n\t    function localeMonthsParse(monthName, format, strict) {\n\t        var i, mom, regex;\n\n\t        if (this._monthsParseExact) {\n\t            return handleStrictParse.call(this, monthName, format, strict);\n\t        }\n\n\t        if (!this._monthsParse) {\n\t            this._monthsParse = [];\n\t            this._longMonthsParse = [];\n\t            this._shortMonthsParse = [];\n\t        }\n\n\t        // TODO: add sorting\n\t        // Sorting makes sure if one month (or abbr) is a prefix of another\n\t        // see sorting in computeMonthsParse\n\t        for (i = 0; i < 12; i++) {\n\t            // make the regex if we don't have it already\n\t            mom = createUTC([2000, i]);\n\t            if (strict && !this._longMonthsParse[i]) {\n\t                this._longMonthsParse[i] = new RegExp(\n\t                    '^' + this.months(mom, '').replace('.', '') + '$',\n\t                    'i'\n\t                );\n\t                this._shortMonthsParse[i] = new RegExp(\n\t                    '^' + this.monthsShort(mom, '').replace('.', '') + '$',\n\t                    'i'\n\t                );\n\t            }\n\t            if (!strict && !this._monthsParse[i]) {\n\t                regex =\n\t                    '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n\t                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n\t            }\n\t            // test the regex\n\t            if (\n\t                strict &&\n\t                format === 'MMMM' &&\n\t                this._longMonthsParse[i].test(monthName)\n\t            ) {\n\t                return i;\n\t            } else if (\n\t                strict &&\n\t                format === 'MMM' &&\n\t                this._shortMonthsParse[i].test(monthName)\n\t            ) {\n\t                return i;\n\t            } else if (!strict && this._monthsParse[i].test(monthName)) {\n\t                return i;\n\t            }\n\t        }\n\t    }\n\n\t    // MOMENTS\n\n\t    function setMonth(mom, value) {\n\t        var dayOfMonth;\n\n\t        if (!mom.isValid()) {\n\t            // No op\n\t            return mom;\n\t        }\n\n\t        if (typeof value === 'string') {\n\t            if (/^\\d+$/.test(value)) {\n\t                value = toInt(value);\n\t            } else {\n\t                value = mom.localeData().monthsParse(value);\n\t                // TODO: Another silent failure?\n\t                if (!isNumber(value)) {\n\t                    return mom;\n\t                }\n\t            }\n\t        }\n\n\t        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\t        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\t        return mom;\n\t    }\n\n\t    function getSetMonth(value) {\n\t        if (value != null) {\n\t            setMonth(this, value);\n\t            hooks.updateOffset(this, true);\n\t            return this;\n\t        } else {\n\t            return get(this, 'Month');\n\t        }\n\t    }\n\n\t    function getDaysInMonth() {\n\t        return daysInMonth(this.year(), this.month());\n\t    }\n\n\t    function monthsShortRegex(isStrict) {\n\t        if (this._monthsParseExact) {\n\t            if (!hasOwnProp(this, '_monthsRegex')) {\n\t                computeMonthsParse.call(this);\n\t            }\n\t            if (isStrict) {\n\t                return this._monthsShortStrictRegex;\n\t            } else {\n\t                return this._monthsShortRegex;\n\t            }\n\t        } else {\n\t            if (!hasOwnProp(this, '_monthsShortRegex')) {\n\t                this._monthsShortRegex = defaultMonthsShortRegex;\n\t            }\n\t            return this._monthsShortStrictRegex && isStrict\n\t                ? this._monthsShortStrictRegex\n\t                : this._monthsShortRegex;\n\t        }\n\t    }\n\n\t    function monthsRegex(isStrict) {\n\t        if (this._monthsParseExact) {\n\t            if (!hasOwnProp(this, '_monthsRegex')) {\n\t                computeMonthsParse.call(this);\n\t            }\n\t            if (isStrict) {\n\t                return this._monthsStrictRegex;\n\t            } else {\n\t                return this._monthsRegex;\n\t            }\n\t        } else {\n\t            if (!hasOwnProp(this, '_monthsRegex')) {\n\t                this._monthsRegex = defaultMonthsRegex;\n\t            }\n\t            return this._monthsStrictRegex && isStrict\n\t                ? this._monthsStrictRegex\n\t                : this._monthsRegex;\n\t        }\n\t    }\n\n\t    function computeMonthsParse() {\n\t        function cmpLenRev(a, b) {\n\t            return b.length - a.length;\n\t        }\n\n\t        var shortPieces = [],\n\t            longPieces = [],\n\t            mixedPieces = [],\n\t            i,\n\t            mom;\n\t        for (i = 0; i < 12; i++) {\n\t            // make the regex if we don't have it already\n\t            mom = createUTC([2000, i]);\n\t            shortPieces.push(this.monthsShort(mom, ''));\n\t            longPieces.push(this.months(mom, ''));\n\t            mixedPieces.push(this.months(mom, ''));\n\t            mixedPieces.push(this.monthsShort(mom, ''));\n\t        }\n\t        // Sorting makes sure if one month (or abbr) is a prefix of another it\n\t        // will match the longer piece.\n\t        shortPieces.sort(cmpLenRev);\n\t        longPieces.sort(cmpLenRev);\n\t        mixedPieces.sort(cmpLenRev);\n\t        for (i = 0; i < 12; i++) {\n\t            shortPieces[i] = regexEscape(shortPieces[i]);\n\t            longPieces[i] = regexEscape(longPieces[i]);\n\t        }\n\t        for (i = 0; i < 24; i++) {\n\t            mixedPieces[i] = regexEscape(mixedPieces[i]);\n\t        }\n\n\t        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n\t        this._monthsShortRegex = this._monthsRegex;\n\t        this._monthsStrictRegex = new RegExp(\n\t            '^(' + longPieces.join('|') + ')',\n\t            'i'\n\t        );\n\t        this._monthsShortStrictRegex = new RegExp(\n\t            '^(' + shortPieces.join('|') + ')',\n\t            'i'\n\t        );\n\t    }\n\n\t    // FORMATTING\n\n\t    addFormatToken('Y', 0, 0, function () {\n\t        var y = this.year();\n\t        return y <= 9999 ? zeroFill(y, 4) : '+' + y;\n\t    });\n\n\t    addFormatToken(0, ['YY', 2], 0, function () {\n\t        return this.year() % 100;\n\t    });\n\n\t    addFormatToken(0, ['YYYY', 4], 0, 'year');\n\t    addFormatToken(0, ['YYYYY', 5], 0, 'year');\n\t    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n\t    // ALIASES\n\n\t    addUnitAlias('year', 'y');\n\n\t    // PRIORITIES\n\n\t    addUnitPriority('year', 1);\n\n\t    // PARSING\n\n\t    addRegexToken('Y', matchSigned);\n\t    addRegexToken('YY', match1to2, match2);\n\t    addRegexToken('YYYY', match1to4, match4);\n\t    addRegexToken('YYYYY', match1to6, match6);\n\t    addRegexToken('YYYYYY', match1to6, match6);\n\n\t    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n\t    addParseToken('YYYY', function (input, array) {\n\t        array[YEAR] =\n\t            input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n\t    });\n\t    addParseToken('YY', function (input, array) {\n\t        array[YEAR] = hooks.parseTwoDigitYear(input);\n\t    });\n\t    addParseToken('Y', function (input, array) {\n\t        array[YEAR] = parseInt(input, 10);\n\t    });\n\n\t    // HELPERS\n\n\t    function daysInYear(year) {\n\t        return isLeapYear(year) ? 366 : 365;\n\t    }\n\n\t    // HOOKS\n\n\t    hooks.parseTwoDigitYear = function (input) {\n\t        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n\t    };\n\n\t    // MOMENTS\n\n\t    var getSetYear = makeGetSet('FullYear', true);\n\n\t    function getIsLeapYear() {\n\t        return isLeapYear(this.year());\n\t    }\n\n\t    function createDate(y, m, d, h, M, s, ms) {\n\t        // can't just apply() to create a date:\n\t        // https://stackoverflow.com/q/181348\n\t        var date;\n\t        // the date constructor remaps years 0-99 to 1900-1999\n\t        if (y < 100 && y >= 0) {\n\t            // preserve leap years using a full 400 year cycle, then reset\n\t            date = new Date(y + 400, m, d, h, M, s, ms);\n\t            if (isFinite(date.getFullYear())) {\n\t                date.setFullYear(y);\n\t            }\n\t        } else {\n\t            date = new Date(y, m, d, h, M, s, ms);\n\t        }\n\n\t        return date;\n\t    }\n\n\t    function createUTCDate(y) {\n\t        var date, args;\n\t        // the Date.UTC function remaps years 0-99 to 1900-1999\n\t        if (y < 100 && y >= 0) {\n\t            args = Array.prototype.slice.call(arguments);\n\t            // preserve leap years using a full 400 year cycle, then reset\n\t            args[0] = y + 400;\n\t            date = new Date(Date.UTC.apply(null, args));\n\t            if (isFinite(date.getUTCFullYear())) {\n\t                date.setUTCFullYear(y);\n\t            }\n\t        } else {\n\t            date = new Date(Date.UTC.apply(null, arguments));\n\t        }\n\n\t        return date;\n\t    }\n\n\t    // start-of-first-week - start-of-year\n\t    function firstWeekOffset(year, dow, doy) {\n\t        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n\t            fwd = 7 + dow - doy,\n\t            // first-week day local weekday -- which local weekday is fwd\n\t            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n\t        return -fwdlw + fwd - 1;\n\t    }\n\n\t    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\t    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n\t        var localWeekday = (7 + weekday - dow) % 7,\n\t            weekOffset = firstWeekOffset(year, dow, doy),\n\t            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n\t            resYear,\n\t            resDayOfYear;\n\n\t        if (dayOfYear <= 0) {\n\t            resYear = year - 1;\n\t            resDayOfYear = daysInYear(resYear) + dayOfYear;\n\t        } else if (dayOfYear > daysInYear(year)) {\n\t            resYear = year + 1;\n\t            resDayOfYear = dayOfYear - daysInYear(year);\n\t        } else {\n\t            resYear = year;\n\t            resDayOfYear = dayOfYear;\n\t        }\n\n\t        return {\n\t            year: resYear,\n\t            dayOfYear: resDayOfYear,\n\t        };\n\t    }\n\n\t    function weekOfYear(mom, dow, doy) {\n\t        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n\t            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n\t            resWeek,\n\t            resYear;\n\n\t        if (week < 1) {\n\t            resYear = mom.year() - 1;\n\t            resWeek = week + weeksInYear(resYear, dow, doy);\n\t        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n\t            resWeek = week - weeksInYear(mom.year(), dow, doy);\n\t            resYear = mom.year() + 1;\n\t        } else {\n\t            resYear = mom.year();\n\t            resWeek = week;\n\t        }\n\n\t        return {\n\t            week: resWeek,\n\t            year: resYear,\n\t        };\n\t    }\n\n\t    function weeksInYear(year, dow, doy) {\n\t        var weekOffset = firstWeekOffset(year, dow, doy),\n\t            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n\t        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n\t    }\n\n\t    // FORMATTING\n\n\t    addFormatToken('w', ['ww', 2], 'wo', 'week');\n\t    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n\t    // ALIASES\n\n\t    addUnitAlias('week', 'w');\n\t    addUnitAlias('isoWeek', 'W');\n\n\t    // PRIORITIES\n\n\t    addUnitPriority('week', 5);\n\t    addUnitPriority('isoWeek', 5);\n\n\t    // PARSING\n\n\t    addRegexToken('w', match1to2);\n\t    addRegexToken('ww', match1to2, match2);\n\t    addRegexToken('W', match1to2);\n\t    addRegexToken('WW', match1to2, match2);\n\n\t    addWeekParseToken(\n\t        ['w', 'ww', 'W', 'WW'],\n\t        function (input, week, config, token) {\n\t            week[token.substr(0, 1)] = toInt(input);\n\t        }\n\t    );\n\n\t    // HELPERS\n\n\t    // LOCALES\n\n\t    function localeWeek(mom) {\n\t        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n\t    }\n\n\t    var defaultLocaleWeek = {\n\t        dow: 0, // Sunday is the first day of the week.\n\t        doy: 6, // The week that contains Jan 6th is the first week of the year.\n\t    };\n\n\t    function localeFirstDayOfWeek() {\n\t        return this._week.dow;\n\t    }\n\n\t    function localeFirstDayOfYear() {\n\t        return this._week.doy;\n\t    }\n\n\t    // MOMENTS\n\n\t    function getSetWeek(input) {\n\t        var week = this.localeData().week(this);\n\t        return input == null ? week : this.add((input - week) * 7, 'd');\n\t    }\n\n\t    function getSetISOWeek(input) {\n\t        var week = weekOfYear(this, 1, 4).week;\n\t        return input == null ? week : this.add((input - week) * 7, 'd');\n\t    }\n\n\t    // FORMATTING\n\n\t    addFormatToken('d', 0, 'do', 'day');\n\n\t    addFormatToken('dd', 0, 0, function (format) {\n\t        return this.localeData().weekdaysMin(this, format);\n\t    });\n\n\t    addFormatToken('ddd', 0, 0, function (format) {\n\t        return this.localeData().weekdaysShort(this, format);\n\t    });\n\n\t    addFormatToken('dddd', 0, 0, function (format) {\n\t        return this.localeData().weekdays(this, format);\n\t    });\n\n\t    addFormatToken('e', 0, 0, 'weekday');\n\t    addFormatToken('E', 0, 0, 'isoWeekday');\n\n\t    // ALIASES\n\n\t    addUnitAlias('day', 'd');\n\t    addUnitAlias('weekday', 'e');\n\t    addUnitAlias('isoWeekday', 'E');\n\n\t    // PRIORITY\n\t    addUnitPriority('day', 11);\n\t    addUnitPriority('weekday', 11);\n\t    addUnitPriority('isoWeekday', 11);\n\n\t    // PARSING\n\n\t    addRegexToken('d', match1to2);\n\t    addRegexToken('e', match1to2);\n\t    addRegexToken('E', match1to2);\n\t    addRegexToken('dd', function (isStrict, locale) {\n\t        return locale.weekdaysMinRegex(isStrict);\n\t    });\n\t    addRegexToken('ddd', function (isStrict, locale) {\n\t        return locale.weekdaysShortRegex(isStrict);\n\t    });\n\t    addRegexToken('dddd', function (isStrict, locale) {\n\t        return locale.weekdaysRegex(isStrict);\n\t    });\n\n\t    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n\t        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n\t        // if we didn't get a weekday name, mark the date as invalid\n\t        if (weekday != null) {\n\t            week.d = weekday;\n\t        } else {\n\t            getParsingFlags(config).invalidWeekday = input;\n\t        }\n\t    });\n\n\t    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n\t        week[token] = toInt(input);\n\t    });\n\n\t    // HELPERS\n\n\t    function parseWeekday(input, locale) {\n\t        if (typeof input !== 'string') {\n\t            return input;\n\t        }\n\n\t        if (!isNaN(input)) {\n\t            return parseInt(input, 10);\n\t        }\n\n\t        input = locale.weekdaysParse(input);\n\t        if (typeof input === 'number') {\n\t            return input;\n\t        }\n\n\t        return null;\n\t    }\n\n\t    function parseIsoWeekday(input, locale) {\n\t        if (typeof input === 'string') {\n\t            return locale.weekdaysParse(input) % 7 || 7;\n\t        }\n\t        return isNaN(input) ? null : input;\n\t    }\n\n\t    // LOCALES\n\t    function shiftWeekdays(ws, n) {\n\t        return ws.slice(n, 7).concat(ws.slice(0, n));\n\t    }\n\n\t    var defaultLocaleWeekdays =\n\t            'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n\t        defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n\t        defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n\t        defaultWeekdaysRegex = matchWord,\n\t        defaultWeekdaysShortRegex = matchWord,\n\t        defaultWeekdaysMinRegex = matchWord;\n\n\t    function localeWeekdays(m, format) {\n\t        var weekdays = isArray(this._weekdays)\n\t            ? this._weekdays\n\t            : this._weekdays[\n\t                  m && m !== true && this._weekdays.isFormat.test(format)\n\t                      ? 'format'\n\t                      : 'standalone'\n\t              ];\n\t        return m === true\n\t            ? shiftWeekdays(weekdays, this._week.dow)\n\t            : m\n\t            ? weekdays[m.day()]\n\t            : weekdays;\n\t    }\n\n\t    function localeWeekdaysShort(m) {\n\t        return m === true\n\t            ? shiftWeekdays(this._weekdaysShort, this._week.dow)\n\t            : m\n\t            ? this._weekdaysShort[m.day()]\n\t            : this._weekdaysShort;\n\t    }\n\n\t    function localeWeekdaysMin(m) {\n\t        return m === true\n\t            ? shiftWeekdays(this._weekdaysMin, this._week.dow)\n\t            : m\n\t            ? this._weekdaysMin[m.day()]\n\t            : this._weekdaysMin;\n\t    }\n\n\t    function handleStrictParse$1(weekdayName, format, strict) {\n\t        var i,\n\t            ii,\n\t            mom,\n\t            llc = weekdayName.toLocaleLowerCase();\n\t        if (!this._weekdaysParse) {\n\t            this._weekdaysParse = [];\n\t            this._shortWeekdaysParse = [];\n\t            this._minWeekdaysParse = [];\n\n\t            for (i = 0; i < 7; ++i) {\n\t                mom = createUTC([2000, 1]).day(i);\n\t                this._minWeekdaysParse[i] = this.weekdaysMin(\n\t                    mom,\n\t                    ''\n\t                ).toLocaleLowerCase();\n\t                this._shortWeekdaysParse[i] = this.weekdaysShort(\n\t                    mom,\n\t                    ''\n\t                ).toLocaleLowerCase();\n\t                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n\t            }\n\t        }\n\n\t        if (strict) {\n\t            if (format === 'dddd') {\n\t                ii = indexOf.call(this._weekdaysParse, llc);\n\t                return ii !== -1 ? ii : null;\n\t            } else if (format === 'ddd') {\n\t                ii = indexOf.call(this._shortWeekdaysParse, llc);\n\t                return ii !== -1 ? ii : null;\n\t            } else {\n\t                ii = indexOf.call(this._minWeekdaysParse, llc);\n\t                return ii !== -1 ? ii : null;\n\t            }\n\t        } else {\n\t            if (format === 'dddd') {\n\t                ii = indexOf.call(this._weekdaysParse, llc);\n\t                if (ii !== -1) {\n\t                    return ii;\n\t                }\n\t                ii = indexOf.call(this._shortWeekdaysParse, llc);\n\t                if (ii !== -1) {\n\t                    return ii;\n\t                }\n\t                ii = indexOf.call(this._minWeekdaysParse, llc);\n\t                return ii !== -1 ? ii : null;\n\t            } else if (format === 'ddd') {\n\t                ii = indexOf.call(this._shortWeekdaysParse, llc);\n\t                if (ii !== -1) {\n\t                    return ii;\n\t                }\n\t                ii = indexOf.call(this._weekdaysParse, llc);\n\t                if (ii !== -1) {\n\t                    return ii;\n\t                }\n\t                ii = indexOf.call(this._minWeekdaysParse, llc);\n\t                return ii !== -1 ? ii : null;\n\t            } else {\n\t                ii = indexOf.call(this._minWeekdaysParse, llc);\n\t                if (ii !== -1) {\n\t                    return ii;\n\t                }\n\t                ii = indexOf.call(this._weekdaysParse, llc);\n\t                if (ii !== -1) {\n\t                    return ii;\n\t                }\n\t                ii = indexOf.call(this._shortWeekdaysParse, llc);\n\t                return ii !== -1 ? ii : null;\n\t            }\n\t        }\n\t    }\n\n\t    function localeWeekdaysParse(weekdayName, format, strict) {\n\t        var i, mom, regex;\n\n\t        if (this._weekdaysParseExact) {\n\t            return handleStrictParse$1.call(this, weekdayName, format, strict);\n\t        }\n\n\t        if (!this._weekdaysParse) {\n\t            this._weekdaysParse = [];\n\t            this._minWeekdaysParse = [];\n\t            this._shortWeekdaysParse = [];\n\t            this._fullWeekdaysParse = [];\n\t        }\n\n\t        for (i = 0; i < 7; i++) {\n\t            // make the regex if we don't have it already\n\n\t            mom = createUTC([2000, 1]).day(i);\n\t            if (strict && !this._fullWeekdaysParse[i]) {\n\t                this._fullWeekdaysParse[i] = new RegExp(\n\t                    '^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$',\n\t                    'i'\n\t                );\n\t                this._shortWeekdaysParse[i] = new RegExp(\n\t                    '^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$',\n\t                    'i'\n\t                );\n\t                this._minWeekdaysParse[i] = new RegExp(\n\t                    '^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$',\n\t                    'i'\n\t                );\n\t            }\n\t            if (!this._weekdaysParse[i]) {\n\t                regex =\n\t                    '^' +\n\t                    this.weekdays(mom, '') +\n\t                    '|^' +\n\t                    this.weekdaysShort(mom, '') +\n\t                    '|^' +\n\t                    this.weekdaysMin(mom, '');\n\t                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n\t            }\n\t            // test the regex\n\t            if (\n\t                strict &&\n\t                format === 'dddd' &&\n\t                this._fullWeekdaysParse[i].test(weekdayName)\n\t            ) {\n\t                return i;\n\t            } else if (\n\t                strict &&\n\t                format === 'ddd' &&\n\t                this._shortWeekdaysParse[i].test(weekdayName)\n\t            ) {\n\t                return i;\n\t            } else if (\n\t                strict &&\n\t                format === 'dd' &&\n\t                this._minWeekdaysParse[i].test(weekdayName)\n\t            ) {\n\t                return i;\n\t            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n\t                return i;\n\t            }\n\t        }\n\t    }\n\n\t    // MOMENTS\n\n\t    function getSetDayOfWeek(input) {\n\t        if (!this.isValid()) {\n\t            return input != null ? this : NaN;\n\t        }\n\t        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\t        if (input != null) {\n\t            input = parseWeekday(input, this.localeData());\n\t            return this.add(input - day, 'd');\n\t        } else {\n\t            return day;\n\t        }\n\t    }\n\n\t    function getSetLocaleDayOfWeek(input) {\n\t        if (!this.isValid()) {\n\t            return input != null ? this : NaN;\n\t        }\n\t        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n\t        return input == null ? weekday : this.add(input - weekday, 'd');\n\t    }\n\n\t    function getSetISODayOfWeek(input) {\n\t        if (!this.isValid()) {\n\t            return input != null ? this : NaN;\n\t        }\n\n\t        // behaves the same as moment#day except\n\t        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n\t        // as a setter, sunday should belong to the previous week.\n\n\t        if (input != null) {\n\t            var weekday = parseIsoWeekday(input, this.localeData());\n\t            return this.day(this.day() % 7 ? weekday : weekday - 7);\n\t        } else {\n\t            return this.day() || 7;\n\t        }\n\t    }\n\n\t    function weekdaysRegex(isStrict) {\n\t        if (this._weekdaysParseExact) {\n\t            if (!hasOwnProp(this, '_weekdaysRegex')) {\n\t                computeWeekdaysParse.call(this);\n\t            }\n\t            if (isStrict) {\n\t                return this._weekdaysStrictRegex;\n\t            } else {\n\t                return this._weekdaysRegex;\n\t            }\n\t        } else {\n\t            if (!hasOwnProp(this, '_weekdaysRegex')) {\n\t                this._weekdaysRegex = defaultWeekdaysRegex;\n\t            }\n\t            return this._weekdaysStrictRegex && isStrict\n\t                ? this._weekdaysStrictRegex\n\t                : this._weekdaysRegex;\n\t        }\n\t    }\n\n\t    function weekdaysShortRegex(isStrict) {\n\t        if (this._weekdaysParseExact) {\n\t            if (!hasOwnProp(this, '_weekdaysRegex')) {\n\t                computeWeekdaysParse.call(this);\n\t            }\n\t            if (isStrict) {\n\t                return this._weekdaysShortStrictRegex;\n\t            } else {\n\t                return this._weekdaysShortRegex;\n\t            }\n\t        } else {\n\t            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n\t                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n\t            }\n\t            return this._weekdaysShortStrictRegex && isStrict\n\t                ? this._weekdaysShortStrictRegex\n\t                : this._weekdaysShortRegex;\n\t        }\n\t    }\n\n\t    function weekdaysMinRegex(isStrict) {\n\t        if (this._weekdaysParseExact) {\n\t            if (!hasOwnProp(this, '_weekdaysRegex')) {\n\t                computeWeekdaysParse.call(this);\n\t            }\n\t            if (isStrict) {\n\t                return this._weekdaysMinStrictRegex;\n\t            } else {\n\t                return this._weekdaysMinRegex;\n\t            }\n\t        } else {\n\t            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n\t                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n\t            }\n\t            return this._weekdaysMinStrictRegex && isStrict\n\t                ? this._weekdaysMinStrictRegex\n\t                : this._weekdaysMinRegex;\n\t        }\n\t    }\n\n\t    function computeWeekdaysParse() {\n\t        function cmpLenRev(a, b) {\n\t            return b.length - a.length;\n\t        }\n\n\t        var minPieces = [],\n\t            shortPieces = [],\n\t            longPieces = [],\n\t            mixedPieces = [],\n\t            i,\n\t            mom,\n\t            minp,\n\t            shortp,\n\t            longp;\n\t        for (i = 0; i < 7; i++) {\n\t            // make the regex if we don't have it already\n\t            mom = createUTC([2000, 1]).day(i);\n\t            minp = regexEscape(this.weekdaysMin(mom, ''));\n\t            shortp = regexEscape(this.weekdaysShort(mom, ''));\n\t            longp = regexEscape(this.weekdays(mom, ''));\n\t            minPieces.push(minp);\n\t            shortPieces.push(shortp);\n\t            longPieces.push(longp);\n\t            mixedPieces.push(minp);\n\t            mixedPieces.push(shortp);\n\t            mixedPieces.push(longp);\n\t        }\n\t        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n\t        // will match the longer piece.\n\t        minPieces.sort(cmpLenRev);\n\t        shortPieces.sort(cmpLenRev);\n\t        longPieces.sort(cmpLenRev);\n\t        mixedPieces.sort(cmpLenRev);\n\n\t        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n\t        this._weekdaysShortRegex = this._weekdaysRegex;\n\t        this._weekdaysMinRegex = this._weekdaysRegex;\n\n\t        this._weekdaysStrictRegex = new RegExp(\n\t            '^(' + longPieces.join('|') + ')',\n\t            'i'\n\t        );\n\t        this._weekdaysShortStrictRegex = new RegExp(\n\t            '^(' + shortPieces.join('|') + ')',\n\t            'i'\n\t        );\n\t        this._weekdaysMinStrictRegex = new RegExp(\n\t            '^(' + minPieces.join('|') + ')',\n\t            'i'\n\t        );\n\t    }\n\n\t    // FORMATTING\n\n\t    function hFormat() {\n\t        return this.hours() % 12 || 12;\n\t    }\n\n\t    function kFormat() {\n\t        return this.hours() || 24;\n\t    }\n\n\t    addFormatToken('H', ['HH', 2], 0, 'hour');\n\t    addFormatToken('h', ['hh', 2], 0, hFormat);\n\t    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n\t    addFormatToken('hmm', 0, 0, function () {\n\t        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n\t    });\n\n\t    addFormatToken('hmmss', 0, 0, function () {\n\t        return (\n\t            '' +\n\t            hFormat.apply(this) +\n\t            zeroFill(this.minutes(), 2) +\n\t            zeroFill(this.seconds(), 2)\n\t        );\n\t    });\n\n\t    addFormatToken('Hmm', 0, 0, function () {\n\t        return '' + this.hours() + zeroFill(this.minutes(), 2);\n\t    });\n\n\t    addFormatToken('Hmmss', 0, 0, function () {\n\t        return (\n\t            '' +\n\t            this.hours() +\n\t            zeroFill(this.minutes(), 2) +\n\t            zeroFill(this.seconds(), 2)\n\t        );\n\t    });\n\n\t    function meridiem(token, lowercase) {\n\t        addFormatToken(token, 0, 0, function () {\n\t            return this.localeData().meridiem(\n\t                this.hours(),\n\t                this.minutes(),\n\t                lowercase\n\t            );\n\t        });\n\t    }\n\n\t    meridiem('a', true);\n\t    meridiem('A', false);\n\n\t    // ALIASES\n\n\t    addUnitAlias('hour', 'h');\n\n\t    // PRIORITY\n\t    addUnitPriority('hour', 13);\n\n\t    // PARSING\n\n\t    function matchMeridiem(isStrict, locale) {\n\t        return locale._meridiemParse;\n\t    }\n\n\t    addRegexToken('a', matchMeridiem);\n\t    addRegexToken('A', matchMeridiem);\n\t    addRegexToken('H', match1to2);\n\t    addRegexToken('h', match1to2);\n\t    addRegexToken('k', match1to2);\n\t    addRegexToken('HH', match1to2, match2);\n\t    addRegexToken('hh', match1to2, match2);\n\t    addRegexToken('kk', match1to2, match2);\n\n\t    addRegexToken('hmm', match3to4);\n\t    addRegexToken('hmmss', match5to6);\n\t    addRegexToken('Hmm', match3to4);\n\t    addRegexToken('Hmmss', match5to6);\n\n\t    addParseToken(['H', 'HH'], HOUR);\n\t    addParseToken(['k', 'kk'], function (input, array, config) {\n\t        var kInput = toInt(input);\n\t        array[HOUR] = kInput === 24 ? 0 : kInput;\n\t    });\n\t    addParseToken(['a', 'A'], function (input, array, config) {\n\t        config._isPm = config._locale.isPM(input);\n\t        config._meridiem = input;\n\t    });\n\t    addParseToken(['h', 'hh'], function (input, array, config) {\n\t        array[HOUR] = toInt(input);\n\t        getParsingFlags(config).bigHour = true;\n\t    });\n\t    addParseToken('hmm', function (input, array, config) {\n\t        var pos = input.length - 2;\n\t        array[HOUR] = toInt(input.substr(0, pos));\n\t        array[MINUTE] = toInt(input.substr(pos));\n\t        getParsingFlags(config).bigHour = true;\n\t    });\n\t    addParseToken('hmmss', function (input, array, config) {\n\t        var pos1 = input.length - 4,\n\t            pos2 = input.length - 2;\n\t        array[HOUR] = toInt(input.substr(0, pos1));\n\t        array[MINUTE] = toInt(input.substr(pos1, 2));\n\t        array[SECOND] = toInt(input.substr(pos2));\n\t        getParsingFlags(config).bigHour = true;\n\t    });\n\t    addParseToken('Hmm', function (input, array, config) {\n\t        var pos = input.length - 2;\n\t        array[HOUR] = toInt(input.substr(0, pos));\n\t        array[MINUTE] = toInt(input.substr(pos));\n\t    });\n\t    addParseToken('Hmmss', function (input, array, config) {\n\t        var pos1 = input.length - 4,\n\t            pos2 = input.length - 2;\n\t        array[HOUR] = toInt(input.substr(0, pos1));\n\t        array[MINUTE] = toInt(input.substr(pos1, 2));\n\t        array[SECOND] = toInt(input.substr(pos2));\n\t    });\n\n\t    // LOCALES\n\n\t    function localeIsPM(input) {\n\t        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n\t        // Using charAt should be more compatible.\n\t        return (input + '').toLowerCase().charAt(0) === 'p';\n\t    }\n\n\t    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i,\n\t        // Setting the hour should keep the time, because the user explicitly\n\t        // specified which hour they want. So trying to maintain the same hour (in\n\t        // a new timezone) makes sense. Adding/subtracting hours does not follow\n\t        // this rule.\n\t        getSetHour = makeGetSet('Hours', true);\n\n\t    function localeMeridiem(hours, minutes, isLower) {\n\t        if (hours > 11) {\n\t            return isLower ? 'pm' : 'PM';\n\t        } else {\n\t            return isLower ? 'am' : 'AM';\n\t        }\n\t    }\n\n\t    var baseConfig = {\n\t        calendar: defaultCalendar,\n\t        longDateFormat: defaultLongDateFormat,\n\t        invalidDate: defaultInvalidDate,\n\t        ordinal: defaultOrdinal,\n\t        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n\t        relativeTime: defaultRelativeTime,\n\n\t        months: defaultLocaleMonths,\n\t        monthsShort: defaultLocaleMonthsShort,\n\n\t        week: defaultLocaleWeek,\n\n\t        weekdays: defaultLocaleWeekdays,\n\t        weekdaysMin: defaultLocaleWeekdaysMin,\n\t        weekdaysShort: defaultLocaleWeekdaysShort,\n\n\t        meridiemParse: defaultLocaleMeridiemParse,\n\t    };\n\n\t    // internal storage for locale config files\n\t    var locales = {},\n\t        localeFamilies = {},\n\t        globalLocale;\n\n\t    function commonPrefix(arr1, arr2) {\n\t        var i,\n\t            minl = Math.min(arr1.length, arr2.length);\n\t        for (i = 0; i < minl; i += 1) {\n\t            if (arr1[i] !== arr2[i]) {\n\t                return i;\n\t            }\n\t        }\n\t        return minl;\n\t    }\n\n\t    function normalizeLocale(key) {\n\t        return key ? key.toLowerCase().replace('_', '-') : key;\n\t    }\n\n\t    // pick the locale from the array\n\t    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n\t    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\t    function chooseLocale(names) {\n\t        var i = 0,\n\t            j,\n\t            next,\n\t            locale,\n\t            split;\n\n\t        while (i < names.length) {\n\t            split = normalizeLocale(names[i]).split('-');\n\t            j = split.length;\n\t            next = normalizeLocale(names[i + 1]);\n\t            next = next ? next.split('-') : null;\n\t            while (j > 0) {\n\t                locale = loadLocale(split.slice(0, j).join('-'));\n\t                if (locale) {\n\t                    return locale;\n\t                }\n\t                if (\n\t                    next &&\n\t                    next.length >= j &&\n\t                    commonPrefix(split, next) >= j - 1\n\t                ) {\n\t                    //the next array item is better than a shallower substring of this one\n\t                    break;\n\t                }\n\t                j--;\n\t            }\n\t            i++;\n\t        }\n\t        return globalLocale;\n\t    }\n\n\t    function isLocaleNameSane(name) {\n\t        // Prevent names that look like filesystem paths, i.e contain '/' or '\\'\n\t        return name.match('^[^/\\\\\\\\]*$') != null;\n\t    }\n\n\t    function loadLocale(name) {\n\t        var oldLocale = null,\n\t            aliasedRequire;\n\t        // TODO: Find a better way to register and load all the locales in Node\n\t        if (\n\t            locales[name] === undefined &&\n\t            'object' !== 'undefined' &&\n\t            module &&\n\t            module.exports &&\n\t            isLocaleNameSane(name)\n\t        ) {\n\t            try {\n\t                oldLocale = globalLocale._abbr;\n\t                aliasedRequire = commonjsRequire;\n\t                aliasedRequire('./locale/' + name);\n\t                getSetGlobalLocale(oldLocale);\n\t            } catch (e) {\n\t                // mark as not found to avoid repeating expensive file require call causing high CPU\n\t                // when trying to find en-US, en_US, en-us for every format call\n\t                locales[name] = null; // null means not found\n\t            }\n\t        }\n\t        return locales[name];\n\t    }\n\n\t    // This function will load locale and then set the global locale.  If\n\t    // no arguments are passed in, it will simply return the current global\n\t    // locale key.\n\t    function getSetGlobalLocale(key, values) {\n\t        var data;\n\t        if (key) {\n\t            if (isUndefined(values)) {\n\t                data = getLocale(key);\n\t            } else {\n\t                data = defineLocale(key, values);\n\t            }\n\n\t            if (data) {\n\t                // moment.duration._locale = moment._locale = data;\n\t                globalLocale = data;\n\t            } else {\n\t                if (typeof console !== 'undefined' && console.warn) {\n\t                    //warn user if arguments are passed but the locale could not be set\n\t                    console.warn(\n\t                        'Locale ' + key + ' not found. Did you forget to load it?'\n\t                    );\n\t                }\n\t            }\n\t        }\n\n\t        return globalLocale._abbr;\n\t    }\n\n\t    function defineLocale(name, config) {\n\t        if (config !== null) {\n\t            var locale,\n\t                parentConfig = baseConfig;\n\t            config.abbr = name;\n\t            if (locales[name] != null) {\n\t                deprecateSimple(\n\t                    'defineLocaleOverride',\n\t                    'use moment.updateLocale(localeName, config) to change ' +\n\t                        'an existing locale. moment.defineLocale(localeName, ' +\n\t                        'config) should only be used for creating a new locale ' +\n\t                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'\n\t                );\n\t                parentConfig = locales[name]._config;\n\t            } else if (config.parentLocale != null) {\n\t                if (locales[config.parentLocale] != null) {\n\t                    parentConfig = locales[config.parentLocale]._config;\n\t                } else {\n\t                    locale = loadLocale(config.parentLocale);\n\t                    if (locale != null) {\n\t                        parentConfig = locale._config;\n\t                    } else {\n\t                        if (!localeFamilies[config.parentLocale]) {\n\t                            localeFamilies[config.parentLocale] = [];\n\t                        }\n\t                        localeFamilies[config.parentLocale].push({\n\t                            name: name,\n\t                            config: config,\n\t                        });\n\t                        return null;\n\t                    }\n\t                }\n\t            }\n\t            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n\t            if (localeFamilies[name]) {\n\t                localeFamilies[name].forEach(function (x) {\n\t                    defineLocale(x.name, x.config);\n\t                });\n\t            }\n\n\t            // backwards compat for now: also set the locale\n\t            // make sure we set the locale AFTER all child locales have been\n\t            // created, so we won't end up with the child locale set.\n\t            getSetGlobalLocale(name);\n\n\t            return locales[name];\n\t        } else {\n\t            // useful for testing\n\t            delete locales[name];\n\t            return null;\n\t        }\n\t    }\n\n\t    function updateLocale(name, config) {\n\t        if (config != null) {\n\t            var locale,\n\t                tmpLocale,\n\t                parentConfig = baseConfig;\n\n\t            if (locales[name] != null && locales[name].parentLocale != null) {\n\t                // Update existing child locale in-place to avoid memory-leaks\n\t                locales[name].set(mergeConfigs(locales[name]._config, config));\n\t            } else {\n\t                // MERGE\n\t                tmpLocale = loadLocale(name);\n\t                if (tmpLocale != null) {\n\t                    parentConfig = tmpLocale._config;\n\t                }\n\t                config = mergeConfigs(parentConfig, config);\n\t                if (tmpLocale == null) {\n\t                    // updateLocale is called for creating a new locale\n\t                    // Set abbr so it will have a name (getters return\n\t                    // undefined otherwise).\n\t                    config.abbr = name;\n\t                }\n\t                locale = new Locale(config);\n\t                locale.parentLocale = locales[name];\n\t                locales[name] = locale;\n\t            }\n\n\t            // backwards compat for now: also set the locale\n\t            getSetGlobalLocale(name);\n\t        } else {\n\t            // pass null for config to unupdate, useful for tests\n\t            if (locales[name] != null) {\n\t                if (locales[name].parentLocale != null) {\n\t                    locales[name] = locales[name].parentLocale;\n\t                    if (name === getSetGlobalLocale()) {\n\t                        getSetGlobalLocale(name);\n\t                    }\n\t                } else if (locales[name] != null) {\n\t                    delete locales[name];\n\t                }\n\t            }\n\t        }\n\t        return locales[name];\n\t    }\n\n\t    // returns locale data\n\t    function getLocale(key) {\n\t        var locale;\n\n\t        if (key && key._locale && key._locale._abbr) {\n\t            key = key._locale._abbr;\n\t        }\n\n\t        if (!key) {\n\t            return globalLocale;\n\t        }\n\n\t        if (!isArray(key)) {\n\t            //short-circuit everything else\n\t            locale = loadLocale(key);\n\t            if (locale) {\n\t                return locale;\n\t            }\n\t            key = [key];\n\t        }\n\n\t        return chooseLocale(key);\n\t    }\n\n\t    function listLocales() {\n\t        return keys(locales);\n\t    }\n\n\t    function checkOverflow(m) {\n\t        var overflow,\n\t            a = m._a;\n\n\t        if (a && getParsingFlags(m).overflow === -2) {\n\t            overflow =\n\t                a[MONTH] < 0 || a[MONTH] > 11\n\t                    ? MONTH\n\t                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])\n\t                    ? DATE\n\t                    : a[HOUR] < 0 ||\n\t                      a[HOUR] > 24 ||\n\t                      (a[HOUR] === 24 &&\n\t                          (a[MINUTE] !== 0 ||\n\t                              a[SECOND] !== 0 ||\n\t                              a[MILLISECOND] !== 0))\n\t                    ? HOUR\n\t                    : a[MINUTE] < 0 || a[MINUTE] > 59\n\t                    ? MINUTE\n\t                    : a[SECOND] < 0 || a[SECOND] > 59\n\t                    ? SECOND\n\t                    : a[MILLISECOND] < 0 || a[MILLISECOND] > 999\n\t                    ? MILLISECOND\n\t                    : -1;\n\n\t            if (\n\t                getParsingFlags(m)._overflowDayOfYear &&\n\t                (overflow < YEAR || overflow > DATE)\n\t            ) {\n\t                overflow = DATE;\n\t            }\n\t            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n\t                overflow = WEEK;\n\t            }\n\t            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n\t                overflow = WEEKDAY;\n\t            }\n\n\t            getParsingFlags(m).overflow = overflow;\n\t        }\n\n\t        return m;\n\t    }\n\n\t    // iso 8601 regex\n\t    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\t    var extendedIsoRegex =\n\t            /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n\t        basicIsoRegex =\n\t            /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d|))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n\t        tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/,\n\t        isoDates = [\n\t            ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n\t            ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n\t            ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n\t            ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n\t            ['YYYY-DDD', /\\d{4}-\\d{3}/],\n\t            ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n\t            ['YYYYYYMMDD', /[+-]\\d{10}/],\n\t            ['YYYYMMDD', /\\d{8}/],\n\t            ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n\t            ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n\t            ['YYYYDDD', /\\d{7}/],\n\t            ['YYYYMM', /\\d{6}/, false],\n\t            ['YYYY', /\\d{4}/, false],\n\t        ],\n\t        // iso time formats and regexes\n\t        isoTimes = [\n\t            ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n\t            ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n\t            ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n\t            ['HH:mm', /\\d\\d:\\d\\d/],\n\t            ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n\t            ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n\t            ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n\t            ['HHmm', /\\d\\d\\d\\d/],\n\t            ['HH', /\\d\\d/],\n\t        ],\n\t        aspNetJsonRegex = /^\\/?Date\\((-?\\d+)/i,\n\t        // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\t        rfc2822 =\n\t            /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/,\n\t        obsOffsets = {\n\t            UT: 0,\n\t            GMT: 0,\n\t            EDT: -4 * 60,\n\t            EST: -5 * 60,\n\t            CDT: -5 * 60,\n\t            CST: -6 * 60,\n\t            MDT: -6 * 60,\n\t            MST: -7 * 60,\n\t            PDT: -7 * 60,\n\t            PST: -8 * 60,\n\t        };\n\n\t    // date from iso format\n\t    function configFromISO(config) {\n\t        var i,\n\t            l,\n\t            string = config._i,\n\t            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n\t            allowTime,\n\t            dateFormat,\n\t            timeFormat,\n\t            tzFormat,\n\t            isoDatesLen = isoDates.length,\n\t            isoTimesLen = isoTimes.length;\n\n\t        if (match) {\n\t            getParsingFlags(config).iso = true;\n\t            for (i = 0, l = isoDatesLen; i < l; i++) {\n\t                if (isoDates[i][1].exec(match[1])) {\n\t                    dateFormat = isoDates[i][0];\n\t                    allowTime = isoDates[i][2] !== false;\n\t                    break;\n\t                }\n\t            }\n\t            if (dateFormat == null) {\n\t                config._isValid = false;\n\t                return;\n\t            }\n\t            if (match[3]) {\n\t                for (i = 0, l = isoTimesLen; i < l; i++) {\n\t                    if (isoTimes[i][1].exec(match[3])) {\n\t                        // match[2] should be 'T' or space\n\t                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n\t                        break;\n\t                    }\n\t                }\n\t                if (timeFormat == null) {\n\t                    config._isValid = false;\n\t                    return;\n\t                }\n\t            }\n\t            if (!allowTime && timeFormat != null) {\n\t                config._isValid = false;\n\t                return;\n\t            }\n\t            if (match[4]) {\n\t                if (tzRegex.exec(match[4])) {\n\t                    tzFormat = 'Z';\n\t                } else {\n\t                    config._isValid = false;\n\t                    return;\n\t                }\n\t            }\n\t            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n\t            configFromStringAndFormat(config);\n\t        } else {\n\t            config._isValid = false;\n\t        }\n\t    }\n\n\t    function extractFromRFC2822Strings(\n\t        yearStr,\n\t        monthStr,\n\t        dayStr,\n\t        hourStr,\n\t        minuteStr,\n\t        secondStr\n\t    ) {\n\t        var result = [\n\t            untruncateYear(yearStr),\n\t            defaultLocaleMonthsShort.indexOf(monthStr),\n\t            parseInt(dayStr, 10),\n\t            parseInt(hourStr, 10),\n\t            parseInt(minuteStr, 10),\n\t        ];\n\n\t        if (secondStr) {\n\t            result.push(parseInt(secondStr, 10));\n\t        }\n\n\t        return result;\n\t    }\n\n\t    function untruncateYear(yearStr) {\n\t        var year = parseInt(yearStr, 10);\n\t        if (year <= 49) {\n\t            return 2000 + year;\n\t        } else if (year <= 999) {\n\t            return 1900 + year;\n\t        }\n\t        return year;\n\t    }\n\n\t    function preprocessRFC2822(s) {\n\t        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n\t        return s\n\t            .replace(/\\([^()]*\\)|[\\n\\t]/g, ' ')\n\t            .replace(/(\\s\\s+)/g, ' ')\n\t            .replace(/^\\s\\s*/, '')\n\t            .replace(/\\s\\s*$/, '');\n\t    }\n\n\t    function checkWeekday(weekdayStr, parsedInput, config) {\n\t        if (weekdayStr) {\n\t            // TODO: Replace the vanilla JS Date object with an independent day-of-week check.\n\t            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n\t                weekdayActual = new Date(\n\t                    parsedInput[0],\n\t                    parsedInput[1],\n\t                    parsedInput[2]\n\t                ).getDay();\n\t            if (weekdayProvided !== weekdayActual) {\n\t                getParsingFlags(config).weekdayMismatch = true;\n\t                config._isValid = false;\n\t                return false;\n\t            }\n\t        }\n\t        return true;\n\t    }\n\n\t    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n\t        if (obsOffset) {\n\t            return obsOffsets[obsOffset];\n\t        } else if (militaryOffset) {\n\t            // the only allowed military tz is Z\n\t            return 0;\n\t        } else {\n\t            var hm = parseInt(numOffset, 10),\n\t                m = hm % 100,\n\t                h = (hm - m) / 100;\n\t            return h * 60 + m;\n\t        }\n\t    }\n\n\t    // date and time from ref 2822 format\n\t    function configFromRFC2822(config) {\n\t        var match = rfc2822.exec(preprocessRFC2822(config._i)),\n\t            parsedArray;\n\t        if (match) {\n\t            parsedArray = extractFromRFC2822Strings(\n\t                match[4],\n\t                match[3],\n\t                match[2],\n\t                match[5],\n\t                match[6],\n\t                match[7]\n\t            );\n\t            if (!checkWeekday(match[1], parsedArray, config)) {\n\t                return;\n\t            }\n\n\t            config._a = parsedArray;\n\t            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n\t            config._d = createUTCDate.apply(null, config._a);\n\t            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n\t            getParsingFlags(config).rfc2822 = true;\n\t        } else {\n\t            config._isValid = false;\n\t        }\n\t    }\n\n\t    // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict\n\t    function configFromString(config) {\n\t        var matched = aspNetJsonRegex.exec(config._i);\n\t        if (matched !== null) {\n\t            config._d = new Date(+matched[1]);\n\t            return;\n\t        }\n\n\t        configFromISO(config);\n\t        if (config._isValid === false) {\n\t            delete config._isValid;\n\t        } else {\n\t            return;\n\t        }\n\n\t        configFromRFC2822(config);\n\t        if (config._isValid === false) {\n\t            delete config._isValid;\n\t        } else {\n\t            return;\n\t        }\n\n\t        if (config._strict) {\n\t            config._isValid = false;\n\t        } else {\n\t            // Final attempt, use Input Fallback\n\t            hooks.createFromInputFallback(config);\n\t        }\n\t    }\n\n\t    hooks.createFromInputFallback = deprecate(\n\t        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n\t            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n\t            'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n\t        function (config) {\n\t            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n\t        }\n\t    );\n\n\t    // Pick the first defined of two or three arguments.\n\t    function defaults(a, b, c) {\n\t        if (a != null) {\n\t            return a;\n\t        }\n\t        if (b != null) {\n\t            return b;\n\t        }\n\t        return c;\n\t    }\n\n\t    function currentDateArray(config) {\n\t        // hooks is actually the exported moment object\n\t        var nowValue = new Date(hooks.now());\n\t        if (config._useUTC) {\n\t            return [\n\t                nowValue.getUTCFullYear(),\n\t                nowValue.getUTCMonth(),\n\t                nowValue.getUTCDate(),\n\t            ];\n\t        }\n\t        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n\t    }\n\n\t    // convert an array to a date.\n\t    // the array should mirror the parameters below\n\t    // note: all values past the year are optional and will default to the lowest possible value.\n\t    // [year, month, day , hour, minute, second, millisecond]\n\t    function configFromArray(config) {\n\t        var i,\n\t            date,\n\t            input = [],\n\t            currentDate,\n\t            expectedWeekday,\n\t            yearToUse;\n\n\t        if (config._d) {\n\t            return;\n\t        }\n\n\t        currentDate = currentDateArray(config);\n\n\t        //compute day of the year from weeks and weekdays\n\t        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n\t            dayOfYearFromWeekInfo(config);\n\t        }\n\n\t        //if the day of the year is set, figure out what it is\n\t        if (config._dayOfYear != null) {\n\t            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n\t            if (\n\t                config._dayOfYear > daysInYear(yearToUse) ||\n\t                config._dayOfYear === 0\n\t            ) {\n\t                getParsingFlags(config)._overflowDayOfYear = true;\n\t            }\n\n\t            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n\t            config._a[MONTH] = date.getUTCMonth();\n\t            config._a[DATE] = date.getUTCDate();\n\t        }\n\n\t        // Default to current date.\n\t        // * if no year, month, day of month are given, default to today\n\t        // * if day of month is given, default month and year\n\t        // * if month is given, default only year\n\t        // * if year is given, don't default anything\n\t        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n\t            config._a[i] = input[i] = currentDate[i];\n\t        }\n\n\t        // Zero out whatever was not defaulted, including time\n\t        for (; i < 7; i++) {\n\t            config._a[i] = input[i] =\n\t                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];\n\t        }\n\n\t        // Check for 24:00:00.000\n\t        if (\n\t            config._a[HOUR] === 24 &&\n\t            config._a[MINUTE] === 0 &&\n\t            config._a[SECOND] === 0 &&\n\t            config._a[MILLISECOND] === 0\n\t        ) {\n\t            config._nextDay = true;\n\t            config._a[HOUR] = 0;\n\t        }\n\n\t        config._d = (config._useUTC ? createUTCDate : createDate).apply(\n\t            null,\n\t            input\n\t        );\n\t        expectedWeekday = config._useUTC\n\t            ? config._d.getUTCDay()\n\t            : config._d.getDay();\n\n\t        // Apply timezone offset from input. The actual utcOffset can be changed\n\t        // with parseZone.\n\t        if (config._tzm != null) {\n\t            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\t        }\n\n\t        if (config._nextDay) {\n\t            config._a[HOUR] = 24;\n\t        }\n\n\t        // check for mismatching day of week\n\t        if (\n\t            config._w &&\n\t            typeof config._w.d !== 'undefined' &&\n\t            config._w.d !== expectedWeekday\n\t        ) {\n\t            getParsingFlags(config).weekdayMismatch = true;\n\t        }\n\t    }\n\n\t    function dayOfYearFromWeekInfo(config) {\n\t        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;\n\n\t        w = config._w;\n\t        if (w.GG != null || w.W != null || w.E != null) {\n\t            dow = 1;\n\t            doy = 4;\n\n\t            // TODO: We need to take the current isoWeekYear, but that depends on\n\t            // how we interpret now (local, utc, fixed offset). So create\n\t            // a now version of current config (take local/utc/offset flags, and\n\t            // create now).\n\t            weekYear = defaults(\n\t                w.GG,\n\t                config._a[YEAR],\n\t                weekOfYear(createLocal(), 1, 4).year\n\t            );\n\t            week = defaults(w.W, 1);\n\t            weekday = defaults(w.E, 1);\n\t            if (weekday < 1 || weekday > 7) {\n\t                weekdayOverflow = true;\n\t            }\n\t        } else {\n\t            dow = config._locale._week.dow;\n\t            doy = config._locale._week.doy;\n\n\t            curWeek = weekOfYear(createLocal(), dow, doy);\n\n\t            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n\t            // Default to current week.\n\t            week = defaults(w.w, curWeek.week);\n\n\t            if (w.d != null) {\n\t                // weekday -- low day numbers are considered next week\n\t                weekday = w.d;\n\t                if (weekday < 0 || weekday > 6) {\n\t                    weekdayOverflow = true;\n\t                }\n\t            } else if (w.e != null) {\n\t                // local weekday -- counting starts from beginning of week\n\t                weekday = w.e + dow;\n\t                if (w.e < 0 || w.e > 6) {\n\t                    weekdayOverflow = true;\n\t                }\n\t            } else {\n\t                // default to beginning of week\n\t                weekday = dow;\n\t            }\n\t        }\n\t        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n\t            getParsingFlags(config)._overflowWeeks = true;\n\t        } else if (weekdayOverflow != null) {\n\t            getParsingFlags(config)._overflowWeekday = true;\n\t        } else {\n\t            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n\t            config._a[YEAR] = temp.year;\n\t            config._dayOfYear = temp.dayOfYear;\n\t        }\n\t    }\n\n\t    // constant that refers to the ISO standard\n\t    hooks.ISO_8601 = function () {};\n\n\t    // constant that refers to the RFC 2822 form\n\t    hooks.RFC_2822 = function () {};\n\n\t    // date from string and format string\n\t    function configFromStringAndFormat(config) {\n\t        // TODO: Move this to another part of the creation flow to prevent circular deps\n\t        if (config._f === hooks.ISO_8601) {\n\t            configFromISO(config);\n\t            return;\n\t        }\n\t        if (config._f === hooks.RFC_2822) {\n\t            configFromRFC2822(config);\n\t            return;\n\t        }\n\t        config._a = [];\n\t        getParsingFlags(config).empty = true;\n\n\t        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\t        var string = '' + config._i,\n\t            i,\n\t            parsedInput,\n\t            tokens,\n\t            token,\n\t            skipped,\n\t            stringLength = string.length,\n\t            totalParsedInputLength = 0,\n\t            era,\n\t            tokenLen;\n\n\t        tokens =\n\t            expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\t        tokenLen = tokens.length;\n\t        for (i = 0; i < tokenLen; i++) {\n\t            token = tokens[i];\n\t            parsedInput = (string.match(getParseRegexForToken(token, config)) ||\n\t                [])[0];\n\t            if (parsedInput) {\n\t                skipped = string.substr(0, string.indexOf(parsedInput));\n\t                if (skipped.length > 0) {\n\t                    getParsingFlags(config).unusedInput.push(skipped);\n\t                }\n\t                string = string.slice(\n\t                    string.indexOf(parsedInput) + parsedInput.length\n\t                );\n\t                totalParsedInputLength += parsedInput.length;\n\t            }\n\t            // don't parse if it's not a known token\n\t            if (formatTokenFunctions[token]) {\n\t                if (parsedInput) {\n\t                    getParsingFlags(config).empty = false;\n\t                } else {\n\t                    getParsingFlags(config).unusedTokens.push(token);\n\t                }\n\t                addTimeToArrayFromToken(token, parsedInput, config);\n\t            } else if (config._strict && !parsedInput) {\n\t                getParsingFlags(config).unusedTokens.push(token);\n\t            }\n\t        }\n\n\t        // add remaining unparsed input length to the string\n\t        getParsingFlags(config).charsLeftOver =\n\t            stringLength - totalParsedInputLength;\n\t        if (string.length > 0) {\n\t            getParsingFlags(config).unusedInput.push(string);\n\t        }\n\n\t        // clear _12h flag if hour is <= 12\n\t        if (\n\t            config._a[HOUR] <= 12 &&\n\t            getParsingFlags(config).bigHour === true &&\n\t            config._a[HOUR] > 0\n\t        ) {\n\t            getParsingFlags(config).bigHour = undefined;\n\t        }\n\n\t        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n\t        getParsingFlags(config).meridiem = config._meridiem;\n\t        // handle meridiem\n\t        config._a[HOUR] = meridiemFixWrap(\n\t            config._locale,\n\t            config._a[HOUR],\n\t            config._meridiem\n\t        );\n\n\t        // handle era\n\t        era = getParsingFlags(config).era;\n\t        if (era !== null) {\n\t            config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);\n\t        }\n\n\t        configFromArray(config);\n\t        checkOverflow(config);\n\t    }\n\n\t    function meridiemFixWrap(locale, hour, meridiem) {\n\t        var isPm;\n\n\t        if (meridiem == null) {\n\t            // nothing to do\n\t            return hour;\n\t        }\n\t        if (locale.meridiemHour != null) {\n\t            return locale.meridiemHour(hour, meridiem);\n\t        } else if (locale.isPM != null) {\n\t            // Fallback\n\t            isPm = locale.isPM(meridiem);\n\t            if (isPm && hour < 12) {\n\t                hour += 12;\n\t            }\n\t            if (!isPm && hour === 12) {\n\t                hour = 0;\n\t            }\n\t            return hour;\n\t        } else {\n\t            // this is not supposed to happen\n\t            return hour;\n\t        }\n\t    }\n\n\t    // date from string and array of format strings\n\t    function configFromStringAndArray(config) {\n\t        var tempConfig,\n\t            bestMoment,\n\t            scoreToBeat,\n\t            i,\n\t            currentScore,\n\t            validFormatFound,\n\t            bestFormatIsValid = false,\n\t            configfLen = config._f.length;\n\n\t        if (configfLen === 0) {\n\t            getParsingFlags(config).invalidFormat = true;\n\t            config._d = new Date(NaN);\n\t            return;\n\t        }\n\n\t        for (i = 0; i < configfLen; i++) {\n\t            currentScore = 0;\n\t            validFormatFound = false;\n\t            tempConfig = copyConfig({}, config);\n\t            if (config._useUTC != null) {\n\t                tempConfig._useUTC = config._useUTC;\n\t            }\n\t            tempConfig._f = config._f[i];\n\t            configFromStringAndFormat(tempConfig);\n\n\t            if (isValid(tempConfig)) {\n\t                validFormatFound = true;\n\t            }\n\n\t            // if there is any input that was not parsed add a penalty for that format\n\t            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n\t            //or tokens\n\t            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n\t            getParsingFlags(tempConfig).score = currentScore;\n\n\t            if (!bestFormatIsValid) {\n\t                if (\n\t                    scoreToBeat == null ||\n\t                    currentScore < scoreToBeat ||\n\t                    validFormatFound\n\t                ) {\n\t                    scoreToBeat = currentScore;\n\t                    bestMoment = tempConfig;\n\t                    if (validFormatFound) {\n\t                        bestFormatIsValid = true;\n\t                    }\n\t                }\n\t            } else {\n\t                if (currentScore < scoreToBeat) {\n\t                    scoreToBeat = currentScore;\n\t                    bestMoment = tempConfig;\n\t                }\n\t            }\n\t        }\n\n\t        extend(config, bestMoment || tempConfig);\n\t    }\n\n\t    function configFromObject(config) {\n\t        if (config._d) {\n\t            return;\n\t        }\n\n\t        var i = normalizeObjectUnits(config._i),\n\t            dayOrDate = i.day === undefined ? i.date : i.day;\n\t        config._a = map(\n\t            [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],\n\t            function (obj) {\n\t                return obj && parseInt(obj, 10);\n\t            }\n\t        );\n\n\t        configFromArray(config);\n\t    }\n\n\t    function createFromConfig(config) {\n\t        var res = new Moment(checkOverflow(prepareConfig(config)));\n\t        if (res._nextDay) {\n\t            // Adding is smart enough around DST\n\t            res.add(1, 'd');\n\t            res._nextDay = undefined;\n\t        }\n\n\t        return res;\n\t    }\n\n\t    function prepareConfig(config) {\n\t        var input = config._i,\n\t            format = config._f;\n\n\t        config._locale = config._locale || getLocale(config._l);\n\n\t        if (input === null || (format === undefined && input === '')) {\n\t            return createInvalid({ nullInput: true });\n\t        }\n\n\t        if (typeof input === 'string') {\n\t            config._i = input = config._locale.preparse(input);\n\t        }\n\n\t        if (isMoment(input)) {\n\t            return new Moment(checkOverflow(input));\n\t        } else if (isDate(input)) {\n\t            config._d = input;\n\t        } else if (isArray(format)) {\n\t            configFromStringAndArray(config);\n\t        } else if (format) {\n\t            configFromStringAndFormat(config);\n\t        } else {\n\t            configFromInput(config);\n\t        }\n\n\t        if (!isValid(config)) {\n\t            config._d = null;\n\t        }\n\n\t        return config;\n\t    }\n\n\t    function configFromInput(config) {\n\t        var input = config._i;\n\t        if (isUndefined(input)) {\n\t            config._d = new Date(hooks.now());\n\t        } else if (isDate(input)) {\n\t            config._d = new Date(input.valueOf());\n\t        } else if (typeof input === 'string') {\n\t            configFromString(config);\n\t        } else if (isArray(input)) {\n\t            config._a = map(input.slice(0), function (obj) {\n\t                return parseInt(obj, 10);\n\t            });\n\t            configFromArray(config);\n\t        } else if (isObject(input)) {\n\t            configFromObject(config);\n\t        } else if (isNumber(input)) {\n\t            // from milliseconds\n\t            config._d = new Date(input);\n\t        } else {\n\t            hooks.createFromInputFallback(config);\n\t        }\n\t    }\n\n\t    function createLocalOrUTC(input, format, locale, strict, isUTC) {\n\t        var c = {};\n\n\t        if (format === true || format === false) {\n\t            strict = format;\n\t            format = undefined;\n\t        }\n\n\t        if (locale === true || locale === false) {\n\t            strict = locale;\n\t            locale = undefined;\n\t        }\n\n\t        if (\n\t            (isObject(input) && isObjectEmpty(input)) ||\n\t            (isArray(input) && input.length === 0)\n\t        ) {\n\t            input = undefined;\n\t        }\n\t        // object construction must be done this way.\n\t        // https://github.com/moment/moment/issues/1423\n\t        c._isAMomentObject = true;\n\t        c._useUTC = c._isUTC = isUTC;\n\t        c._l = locale;\n\t        c._i = input;\n\t        c._f = format;\n\t        c._strict = strict;\n\n\t        return createFromConfig(c);\n\t    }\n\n\t    function createLocal(input, format, locale, strict) {\n\t        return createLocalOrUTC(input, format, locale, strict, false);\n\t    }\n\n\t    var prototypeMin = deprecate(\n\t            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n\t            function () {\n\t                var other = createLocal.apply(null, arguments);\n\t                if (this.isValid() && other.isValid()) {\n\t                    return other < this ? this : other;\n\t                } else {\n\t                    return createInvalid();\n\t                }\n\t            }\n\t        ),\n\t        prototypeMax = deprecate(\n\t            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n\t            function () {\n\t                var other = createLocal.apply(null, arguments);\n\t                if (this.isValid() && other.isValid()) {\n\t                    return other > this ? this : other;\n\t                } else {\n\t                    return createInvalid();\n\t                }\n\t            }\n\t        );\n\n\t    // Pick a moment m from moments so that m[fn](other) is true for all\n\t    // other. This relies on the function fn to be transitive.\n\t    //\n\t    // moments should either be an array of moment objects or an array, whose\n\t    // first element is an array of moment objects.\n\t    function pickBy(fn, moments) {\n\t        var res, i;\n\t        if (moments.length === 1 && isArray(moments[0])) {\n\t            moments = moments[0];\n\t        }\n\t        if (!moments.length) {\n\t            return createLocal();\n\t        }\n\t        res = moments[0];\n\t        for (i = 1; i < moments.length; ++i) {\n\t            if (!moments[i].isValid() || moments[i][fn](res)) {\n\t                res = moments[i];\n\t            }\n\t        }\n\t        return res;\n\t    }\n\n\t    // TODO: Use [].sort instead?\n\t    function min() {\n\t        var args = [].slice.call(arguments, 0);\n\n\t        return pickBy('isBefore', args);\n\t    }\n\n\t    function max() {\n\t        var args = [].slice.call(arguments, 0);\n\n\t        return pickBy('isAfter', args);\n\t    }\n\n\t    var now = function () {\n\t        return Date.now ? Date.now() : +new Date();\n\t    };\n\n\t    var ordering = [\n\t        'year',\n\t        'quarter',\n\t        'month',\n\t        'week',\n\t        'day',\n\t        'hour',\n\t        'minute',\n\t        'second',\n\t        'millisecond',\n\t    ];\n\n\t    function isDurationValid(m) {\n\t        var key,\n\t            unitHasDecimal = false,\n\t            i,\n\t            orderLen = ordering.length;\n\t        for (key in m) {\n\t            if (\n\t                hasOwnProp(m, key) &&\n\t                !(\n\t                    indexOf.call(ordering, key) !== -1 &&\n\t                    (m[key] == null || !isNaN(m[key]))\n\t                )\n\t            ) {\n\t                return false;\n\t            }\n\t        }\n\n\t        for (i = 0; i < orderLen; ++i) {\n\t            if (m[ordering[i]]) {\n\t                if (unitHasDecimal) {\n\t                    return false; // only allow non-integers for smallest unit\n\t                }\n\t                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n\t                    unitHasDecimal = true;\n\t                }\n\t            }\n\t        }\n\n\t        return true;\n\t    }\n\n\t    function isValid$1() {\n\t        return this._isValid;\n\t    }\n\n\t    function createInvalid$1() {\n\t        return createDuration(NaN);\n\t    }\n\n\t    function Duration(duration) {\n\t        var normalizedInput = normalizeObjectUnits(duration),\n\t            years = normalizedInput.year || 0,\n\t            quarters = normalizedInput.quarter || 0,\n\t            months = normalizedInput.month || 0,\n\t            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n\t            days = normalizedInput.day || 0,\n\t            hours = normalizedInput.hour || 0,\n\t            minutes = normalizedInput.minute || 0,\n\t            seconds = normalizedInput.second || 0,\n\t            milliseconds = normalizedInput.millisecond || 0;\n\n\t        this._isValid = isDurationValid(normalizedInput);\n\n\t        // representation for dateAddRemove\n\t        this._milliseconds =\n\t            +milliseconds +\n\t            seconds * 1e3 + // 1000\n\t            minutes * 6e4 + // 1000 * 60\n\t            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n\t        // Because of dateAddRemove treats 24 hours as different from a\n\t        // day when working around DST, we need to store them separately\n\t        this._days = +days + weeks * 7;\n\t        // It is impossible to translate months into days without knowing\n\t        // which months you are are talking about, so we have to store\n\t        // it separately.\n\t        this._months = +months + quarters * 3 + years * 12;\n\n\t        this._data = {};\n\n\t        this._locale = getLocale();\n\n\t        this._bubble();\n\t    }\n\n\t    function isDuration(obj) {\n\t        return obj instanceof Duration;\n\t    }\n\n\t    function absRound(number) {\n\t        if (number < 0) {\n\t            return Math.round(-1 * number) * -1;\n\t        } else {\n\t            return Math.round(number);\n\t        }\n\t    }\n\n\t    // compare two arrays, return the number of differences\n\t    function compareArrays(array1, array2, dontConvert) {\n\t        var len = Math.min(array1.length, array2.length),\n\t            lengthDiff = Math.abs(array1.length - array2.length),\n\t            diffs = 0,\n\t            i;\n\t        for (i = 0; i < len; i++) {\n\t            if (\n\t                (dontConvert && array1[i] !== array2[i]) ||\n\t                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))\n\t            ) {\n\t                diffs++;\n\t            }\n\t        }\n\t        return diffs + lengthDiff;\n\t    }\n\n\t    // FORMATTING\n\n\t    function offset(token, separator) {\n\t        addFormatToken(token, 0, 0, function () {\n\t            var offset = this.utcOffset(),\n\t                sign = '+';\n\t            if (offset < 0) {\n\t                offset = -offset;\n\t                sign = '-';\n\t            }\n\t            return (\n\t                sign +\n\t                zeroFill(~~(offset / 60), 2) +\n\t                separator +\n\t                zeroFill(~~offset % 60, 2)\n\t            );\n\t        });\n\t    }\n\n\t    offset('Z', ':');\n\t    offset('ZZ', '');\n\n\t    // PARSING\n\n\t    addRegexToken('Z', matchShortOffset);\n\t    addRegexToken('ZZ', matchShortOffset);\n\t    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n\t        config._useUTC = true;\n\t        config._tzm = offsetFromString(matchShortOffset, input);\n\t    });\n\n\t    // HELPERS\n\n\t    // timezone chunker\n\t    // '+10:00' > ['10',  '00']\n\t    // '-1530'  > ['-15', '30']\n\t    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n\t    function offsetFromString(matcher, string) {\n\t        var matches = (string || '').match(matcher),\n\t            chunk,\n\t            parts,\n\t            minutes;\n\n\t        if (matches === null) {\n\t            return null;\n\t        }\n\n\t        chunk = matches[matches.length - 1] || [];\n\t        parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n\t        minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n\t        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n\t    }\n\n\t    // Return a moment from input, that is local/utc/zone equivalent to model.\n\t    function cloneWithOffset(input, model) {\n\t        var res, diff;\n\t        if (model._isUTC) {\n\t            res = model.clone();\n\t            diff =\n\t                (isMoment(input) || isDate(input)\n\t                    ? input.valueOf()\n\t                    : createLocal(input).valueOf()) - res.valueOf();\n\t            // Use low-level api, because this fn is low-level api.\n\t            res._d.setTime(res._d.valueOf() + diff);\n\t            hooks.updateOffset(res, false);\n\t            return res;\n\t        } else {\n\t            return createLocal(input).local();\n\t        }\n\t    }\n\n\t    function getDateOffset(m) {\n\t        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n\t        // https://github.com/moment/moment/pull/1871\n\t        return -Math.round(m._d.getTimezoneOffset());\n\t    }\n\n\t    // HOOKS\n\n\t    // This function will be called whenever a moment is mutated.\n\t    // It is intended to keep the offset in sync with the timezone.\n\t    hooks.updateOffset = function () {};\n\n\t    // MOMENTS\n\n\t    // keepLocalTime = true means only change the timezone, without\n\t    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n\t    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n\t    // +0200, so we adjust the time as needed, to be valid.\n\t    //\n\t    // Keeping the time actually adds/subtracts (one hour)\n\t    // from the actual represented time. That is why we call updateOffset\n\t    // a second time. In case it wants us to change the offset again\n\t    // _changeInProgress == true case, then we have to adjust, because\n\t    // there is no such time in the given timezone.\n\t    function getSetOffset(input, keepLocalTime, keepMinutes) {\n\t        var offset = this._offset || 0,\n\t            localAdjust;\n\t        if (!this.isValid()) {\n\t            return input != null ? this : NaN;\n\t        }\n\t        if (input != null) {\n\t            if (typeof input === 'string') {\n\t                input = offsetFromString(matchShortOffset, input);\n\t                if (input === null) {\n\t                    return this;\n\t                }\n\t            } else if (Math.abs(input) < 16 && !keepMinutes) {\n\t                input = input * 60;\n\t            }\n\t            if (!this._isUTC && keepLocalTime) {\n\t                localAdjust = getDateOffset(this);\n\t            }\n\t            this._offset = input;\n\t            this._isUTC = true;\n\t            if (localAdjust != null) {\n\t                this.add(localAdjust, 'm');\n\t            }\n\t            if (offset !== input) {\n\t                if (!keepLocalTime || this._changeInProgress) {\n\t                    addSubtract(\n\t                        this,\n\t                        createDuration(input - offset, 'm'),\n\t                        1,\n\t                        false\n\t                    );\n\t                } else if (!this._changeInProgress) {\n\t                    this._changeInProgress = true;\n\t                    hooks.updateOffset(this, true);\n\t                    this._changeInProgress = null;\n\t                }\n\t            }\n\t            return this;\n\t        } else {\n\t            return this._isUTC ? offset : getDateOffset(this);\n\t        }\n\t    }\n\n\t    function getSetZone(input, keepLocalTime) {\n\t        if (input != null) {\n\t            if (typeof input !== 'string') {\n\t                input = -input;\n\t            }\n\n\t            this.utcOffset(input, keepLocalTime);\n\n\t            return this;\n\t        } else {\n\t            return -this.utcOffset();\n\t        }\n\t    }\n\n\t    function setOffsetToUTC(keepLocalTime) {\n\t        return this.utcOffset(0, keepLocalTime);\n\t    }\n\n\t    function setOffsetToLocal(keepLocalTime) {\n\t        if (this._isUTC) {\n\t            this.utcOffset(0, keepLocalTime);\n\t            this._isUTC = false;\n\n\t            if (keepLocalTime) {\n\t                this.subtract(getDateOffset(this), 'm');\n\t            }\n\t        }\n\t        return this;\n\t    }\n\n\t    function setOffsetToParsedOffset() {\n\t        if (this._tzm != null) {\n\t            this.utcOffset(this._tzm, false, true);\n\t        } else if (typeof this._i === 'string') {\n\t            var tZone = offsetFromString(matchOffset, this._i);\n\t            if (tZone != null) {\n\t                this.utcOffset(tZone);\n\t            } else {\n\t                this.utcOffset(0, true);\n\t            }\n\t        }\n\t        return this;\n\t    }\n\n\t    function hasAlignedHourOffset(input) {\n\t        if (!this.isValid()) {\n\t            return false;\n\t        }\n\t        input = input ? createLocal(input).utcOffset() : 0;\n\n\t        return (this.utcOffset() - input) % 60 === 0;\n\t    }\n\n\t    function isDaylightSavingTime() {\n\t        return (\n\t            this.utcOffset() > this.clone().month(0).utcOffset() ||\n\t            this.utcOffset() > this.clone().month(5).utcOffset()\n\t        );\n\t    }\n\n\t    function isDaylightSavingTimeShifted() {\n\t        if (!isUndefined(this._isDSTShifted)) {\n\t            return this._isDSTShifted;\n\t        }\n\n\t        var c = {},\n\t            other;\n\n\t        copyConfig(c, this);\n\t        c = prepareConfig(c);\n\n\t        if (c._a) {\n\t            other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n\t            this._isDSTShifted =\n\t                this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n\t        } else {\n\t            this._isDSTShifted = false;\n\t        }\n\n\t        return this._isDSTShifted;\n\t    }\n\n\t    function isLocal() {\n\t        return this.isValid() ? !this._isUTC : false;\n\t    }\n\n\t    function isUtcOffset() {\n\t        return this.isValid() ? this._isUTC : false;\n\t    }\n\n\t    function isUtc() {\n\t        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n\t    }\n\n\t    // ASP.NET json date format regex\n\t    var aspNetRegex = /^(-|\\+)?(?:(\\d*)[. ])?(\\d+):(\\d+)(?::(\\d+)(\\.\\d*)?)?$/,\n\t        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n\t        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n\t        // and further modified to allow for strings containing both week and day\n\t        isoRegex =\n\t            /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n\t    function createDuration(input, key) {\n\t        var duration = input,\n\t            // matching against regexp is expensive, do it on demand\n\t            match = null,\n\t            sign,\n\t            ret,\n\t            diffRes;\n\n\t        if (isDuration(input)) {\n\t            duration = {\n\t                ms: input._milliseconds,\n\t                d: input._days,\n\t                M: input._months,\n\t            };\n\t        } else if (isNumber(input) || !isNaN(+input)) {\n\t            duration = {};\n\t            if (key) {\n\t                duration[key] = +input;\n\t            } else {\n\t                duration.milliseconds = +input;\n\t            }\n\t        } else if ((match = aspNetRegex.exec(input))) {\n\t            sign = match[1] === '-' ? -1 : 1;\n\t            duration = {\n\t                y: 0,\n\t                d: toInt(match[DATE]) * sign,\n\t                h: toInt(match[HOUR]) * sign,\n\t                m: toInt(match[MINUTE]) * sign,\n\t                s: toInt(match[SECOND]) * sign,\n\t                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match\n\t            };\n\t        } else if ((match = isoRegex.exec(input))) {\n\t            sign = match[1] === '-' ? -1 : 1;\n\t            duration = {\n\t                y: parseIso(match[2], sign),\n\t                M: parseIso(match[3], sign),\n\t                w: parseIso(match[4], sign),\n\t                d: parseIso(match[5], sign),\n\t                h: parseIso(match[6], sign),\n\t                m: parseIso(match[7], sign),\n\t                s: parseIso(match[8], sign),\n\t            };\n\t        } else if (duration == null) {\n\t            // checks for null or undefined\n\t            duration = {};\n\t        } else if (\n\t            typeof duration === 'object' &&\n\t            ('from' in duration || 'to' in duration)\n\t        ) {\n\t            diffRes = momentsDifference(\n\t                createLocal(duration.from),\n\t                createLocal(duration.to)\n\t            );\n\n\t            duration = {};\n\t            duration.ms = diffRes.milliseconds;\n\t            duration.M = diffRes.months;\n\t        }\n\n\t        ret = new Duration(duration);\n\n\t        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n\t            ret._locale = input._locale;\n\t        }\n\n\t        if (isDuration(input) && hasOwnProp(input, '_isValid')) {\n\t            ret._isValid = input._isValid;\n\t        }\n\n\t        return ret;\n\t    }\n\n\t    createDuration.fn = Duration.prototype;\n\t    createDuration.invalid = createInvalid$1;\n\n\t    function parseIso(inp, sign) {\n\t        // We'd normally use ~~inp for this, but unfortunately it also\n\t        // converts floats to ints.\n\t        // inp may be undefined, so careful calling replace on it.\n\t        var res = inp && parseFloat(inp.replace(',', '.'));\n\t        // apply sign while we're at it\n\t        return (isNaN(res) ? 0 : res) * sign;\n\t    }\n\n\t    function positiveMomentsDifference(base, other) {\n\t        var res = {};\n\n\t        res.months =\n\t            other.month() - base.month() + (other.year() - base.year()) * 12;\n\t        if (base.clone().add(res.months, 'M').isAfter(other)) {\n\t            --res.months;\n\t        }\n\n\t        res.milliseconds = +other - +base.clone().add(res.months, 'M');\n\n\t        return res;\n\t    }\n\n\t    function momentsDifference(base, other) {\n\t        var res;\n\t        if (!(base.isValid() && other.isValid())) {\n\t            return { milliseconds: 0, months: 0 };\n\t        }\n\n\t        other = cloneWithOffset(other, base);\n\t        if (base.isBefore(other)) {\n\t            res = positiveMomentsDifference(base, other);\n\t        } else {\n\t            res = positiveMomentsDifference(other, base);\n\t            res.milliseconds = -res.milliseconds;\n\t            res.months = -res.months;\n\t        }\n\n\t        return res;\n\t    }\n\n\t    // TODO: remove 'name' arg after deprecation is removed\n\t    function createAdder(direction, name) {\n\t        return function (val, period) {\n\t            var dur, tmp;\n\t            //invert the arguments, but complain about it\n\t            if (period !== null && !isNaN(+period)) {\n\t                deprecateSimple(\n\t                    name,\n\t                    'moment().' +\n\t                        name +\n\t                        '(period, number) is deprecated. Please use moment().' +\n\t                        name +\n\t                        '(number, period). ' +\n\t                        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'\n\t                );\n\t                tmp = val;\n\t                val = period;\n\t                period = tmp;\n\t            }\n\n\t            dur = createDuration(val, period);\n\t            addSubtract(this, dur, direction);\n\t            return this;\n\t        };\n\t    }\n\n\t    function addSubtract(mom, duration, isAdding, updateOffset) {\n\t        var milliseconds = duration._milliseconds,\n\t            days = absRound(duration._days),\n\t            months = absRound(duration._months);\n\n\t        if (!mom.isValid()) {\n\t            // No op\n\t            return;\n\t        }\n\n\t        updateOffset = updateOffset == null ? true : updateOffset;\n\n\t        if (months) {\n\t            setMonth(mom, get(mom, 'Month') + months * isAdding);\n\t        }\n\t        if (days) {\n\t            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n\t        }\n\t        if (milliseconds) {\n\t            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n\t        }\n\t        if (updateOffset) {\n\t            hooks.updateOffset(mom, days || months);\n\t        }\n\t    }\n\n\t    var add = createAdder(1, 'add'),\n\t        subtract = createAdder(-1, 'subtract');\n\n\t    function isString(input) {\n\t        return typeof input === 'string' || input instanceof String;\n\t    }\n\n\t    // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined\n\t    function isMomentInput(input) {\n\t        return (\n\t            isMoment(input) ||\n\t            isDate(input) ||\n\t            isString(input) ||\n\t            isNumber(input) ||\n\t            isNumberOrStringArray(input) ||\n\t            isMomentInputObject(input) ||\n\t            input === null ||\n\t            input === undefined\n\t        );\n\t    }\n\n\t    function isMomentInputObject(input) {\n\t        var objectTest = isObject(input) && !isObjectEmpty(input),\n\t            propertyTest = false,\n\t            properties = [\n\t                'years',\n\t                'year',\n\t                'y',\n\t                'months',\n\t                'month',\n\t                'M',\n\t                'days',\n\t                'day',\n\t                'd',\n\t                'dates',\n\t                'date',\n\t                'D',\n\t                'hours',\n\t                'hour',\n\t                'h',\n\t                'minutes',\n\t                'minute',\n\t                'm',\n\t                'seconds',\n\t                'second',\n\t                's',\n\t                'milliseconds',\n\t                'millisecond',\n\t                'ms',\n\t            ],\n\t            i,\n\t            property,\n\t            propertyLen = properties.length;\n\n\t        for (i = 0; i < propertyLen; i += 1) {\n\t            property = properties[i];\n\t            propertyTest = propertyTest || hasOwnProp(input, property);\n\t        }\n\n\t        return objectTest && propertyTest;\n\t    }\n\n\t    function isNumberOrStringArray(input) {\n\t        var arrayTest = isArray(input),\n\t            dataTypeTest = false;\n\t        if (arrayTest) {\n\t            dataTypeTest =\n\t                input.filter(function (item) {\n\t                    return !isNumber(item) && isString(input);\n\t                }).length === 0;\n\t        }\n\t        return arrayTest && dataTypeTest;\n\t    }\n\n\t    function isCalendarSpec(input) {\n\t        var objectTest = isObject(input) && !isObjectEmpty(input),\n\t            propertyTest = false,\n\t            properties = [\n\t                'sameDay',\n\t                'nextDay',\n\t                'lastDay',\n\t                'nextWeek',\n\t                'lastWeek',\n\t                'sameElse',\n\t            ],\n\t            i,\n\t            property;\n\n\t        for (i = 0; i < properties.length; i += 1) {\n\t            property = properties[i];\n\t            propertyTest = propertyTest || hasOwnProp(input, property);\n\t        }\n\n\t        return objectTest && propertyTest;\n\t    }\n\n\t    function getCalendarFormat(myMoment, now) {\n\t        var diff = myMoment.diff(now, 'days', true);\n\t        return diff < -6\n\t            ? 'sameElse'\n\t            : diff < -1\n\t            ? 'lastWeek'\n\t            : diff < 0\n\t            ? 'lastDay'\n\t            : diff < 1\n\t            ? 'sameDay'\n\t            : diff < 2\n\t            ? 'nextDay'\n\t            : diff < 7\n\t            ? 'nextWeek'\n\t            : 'sameElse';\n\t    }\n\n\t    function calendar$1(time, formats) {\n\t        // Support for single parameter, formats only overload to the calendar function\n\t        if (arguments.length === 1) {\n\t            if (!arguments[0]) {\n\t                time = undefined;\n\t                formats = undefined;\n\t            } else if (isMomentInput(arguments[0])) {\n\t                time = arguments[0];\n\t                formats = undefined;\n\t            } else if (isCalendarSpec(arguments[0])) {\n\t                formats = arguments[0];\n\t                time = undefined;\n\t            }\n\t        }\n\t        // We want to compare the start of today, vs this.\n\t        // Getting start-of-today depends on whether we're local/utc/offset or not.\n\t        var now = time || createLocal(),\n\t            sod = cloneWithOffset(now, this).startOf('day'),\n\t            format = hooks.calendarFormat(this, sod) || 'sameElse',\n\t            output =\n\t                formats &&\n\t                (isFunction(formats[format])\n\t                    ? formats[format].call(this, now)\n\t                    : formats[format]);\n\n\t        return this.format(\n\t            output || this.localeData().calendar(format, this, createLocal(now))\n\t        );\n\t    }\n\n\t    function clone() {\n\t        return new Moment(this);\n\t    }\n\n\t    function isAfter(input, units) {\n\t        var localInput = isMoment(input) ? input : createLocal(input);\n\t        if (!(this.isValid() && localInput.isValid())) {\n\t            return false;\n\t        }\n\t        units = normalizeUnits(units) || 'millisecond';\n\t        if (units === 'millisecond') {\n\t            return this.valueOf() > localInput.valueOf();\n\t        } else {\n\t            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n\t        }\n\t    }\n\n\t    function isBefore(input, units) {\n\t        var localInput = isMoment(input) ? input : createLocal(input);\n\t        if (!(this.isValid() && localInput.isValid())) {\n\t            return false;\n\t        }\n\t        units = normalizeUnits(units) || 'millisecond';\n\t        if (units === 'millisecond') {\n\t            return this.valueOf() < localInput.valueOf();\n\t        } else {\n\t            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n\t        }\n\t    }\n\n\t    function isBetween(from, to, units, inclusivity) {\n\t        var localFrom = isMoment(from) ? from : createLocal(from),\n\t            localTo = isMoment(to) ? to : createLocal(to);\n\t        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n\t            return false;\n\t        }\n\t        inclusivity = inclusivity || '()';\n\t        return (\n\t            (inclusivity[0] === '('\n\t                ? this.isAfter(localFrom, units)\n\t                : !this.isBefore(localFrom, units)) &&\n\t            (inclusivity[1] === ')'\n\t                ? this.isBefore(localTo, units)\n\t                : !this.isAfter(localTo, units))\n\t        );\n\t    }\n\n\t    function isSame(input, units) {\n\t        var localInput = isMoment(input) ? input : createLocal(input),\n\t            inputMs;\n\t        if (!(this.isValid() && localInput.isValid())) {\n\t            return false;\n\t        }\n\t        units = normalizeUnits(units) || 'millisecond';\n\t        if (units === 'millisecond') {\n\t            return this.valueOf() === localInput.valueOf();\n\t        } else {\n\t            inputMs = localInput.valueOf();\n\t            return (\n\t                this.clone().startOf(units).valueOf() <= inputMs &&\n\t                inputMs <= this.clone().endOf(units).valueOf()\n\t            );\n\t        }\n\t    }\n\n\t    function isSameOrAfter(input, units) {\n\t        return this.isSame(input, units) || this.isAfter(input, units);\n\t    }\n\n\t    function isSameOrBefore(input, units) {\n\t        return this.isSame(input, units) || this.isBefore(input, units);\n\t    }\n\n\t    function diff(input, units, asFloat) {\n\t        var that, zoneDelta, output;\n\n\t        if (!this.isValid()) {\n\t            return NaN;\n\t        }\n\n\t        that = cloneWithOffset(input, this);\n\n\t        if (!that.isValid()) {\n\t            return NaN;\n\t        }\n\n\t        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n\t        units = normalizeUnits(units);\n\n\t        switch (units) {\n\t            case 'year':\n\t                output = monthDiff(this, that) / 12;\n\t                break;\n\t            case 'month':\n\t                output = monthDiff(this, that);\n\t                break;\n\t            case 'quarter':\n\t                output = monthDiff(this, that) / 3;\n\t                break;\n\t            case 'second':\n\t                output = (this - that) / 1e3;\n\t                break; // 1000\n\t            case 'minute':\n\t                output = (this - that) / 6e4;\n\t                break; // 1000 * 60\n\t            case 'hour':\n\t                output = (this - that) / 36e5;\n\t                break; // 1000 * 60 * 60\n\t            case 'day':\n\t                output = (this - that - zoneDelta) / 864e5;\n\t                break; // 1000 * 60 * 60 * 24, negate dst\n\t            case 'week':\n\t                output = (this - that - zoneDelta) / 6048e5;\n\t                break; // 1000 * 60 * 60 * 24 * 7, negate dst\n\t            default:\n\t                output = this - that;\n\t        }\n\n\t        return asFloat ? output : absFloor(output);\n\t    }\n\n\t    function monthDiff(a, b) {\n\t        if (a.date() < b.date()) {\n\t            // end-of-month calculations work correct when the start month has more\n\t            // days than the end month.\n\t            return -monthDiff(b, a);\n\t        }\n\t        // difference in months\n\t        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n\t            // b is in (anchor - 1 month, anchor + 1 month)\n\t            anchor = a.clone().add(wholeMonthDiff, 'months'),\n\t            anchor2,\n\t            adjust;\n\n\t        if (b - anchor < 0) {\n\t            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n\t            // linear across the month\n\t            adjust = (b - anchor) / (anchor - anchor2);\n\t        } else {\n\t            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n\t            // linear across the month\n\t            adjust = (b - anchor) / (anchor2 - anchor);\n\t        }\n\n\t        //check for negative zero, return zero if negative zero\n\t        return -(wholeMonthDiff + adjust) || 0;\n\t    }\n\n\t    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n\t    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n\t    function toString() {\n\t        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n\t    }\n\n\t    function toISOString(keepOffset) {\n\t        if (!this.isValid()) {\n\t            return null;\n\t        }\n\t        var utc = keepOffset !== true,\n\t            m = utc ? this.clone().utc() : this;\n\t        if (m.year() < 0 || m.year() > 9999) {\n\t            return formatMoment(\n\t                m,\n\t                utc\n\t                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'\n\t                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'\n\t            );\n\t        }\n\t        if (isFunction(Date.prototype.toISOString)) {\n\t            // native implementation is ~50x faster, use it when we can\n\t            if (utc) {\n\t                return this.toDate().toISOString();\n\t            } else {\n\t                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)\n\t                    .toISOString()\n\t                    .replace('Z', formatMoment(m, 'Z'));\n\t            }\n\t        }\n\t        return formatMoment(\n\t            m,\n\t            utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'\n\t        );\n\t    }\n\n\t    /**\n\t     * Return a human readable representation of a moment that can\n\t     * also be evaluated to get a new moment which is the same\n\t     *\n\t     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n\t     */\n\t    function inspect() {\n\t        if (!this.isValid()) {\n\t            return 'moment.invalid(/* ' + this._i + ' */)';\n\t        }\n\t        var func = 'moment',\n\t            zone = '',\n\t            prefix,\n\t            year,\n\t            datetime,\n\t            suffix;\n\t        if (!this.isLocal()) {\n\t            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n\t            zone = 'Z';\n\t        }\n\t        prefix = '[' + func + '(\"]';\n\t        year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n\t        datetime = '-MM-DD[T]HH:mm:ss.SSS';\n\t        suffix = zone + '[\")]';\n\n\t        return this.format(prefix + year + datetime + suffix);\n\t    }\n\n\t    function format(inputString) {\n\t        if (!inputString) {\n\t            inputString = this.isUtc()\n\t                ? hooks.defaultFormatUtc\n\t                : hooks.defaultFormat;\n\t        }\n\t        var output = formatMoment(this, inputString);\n\t        return this.localeData().postformat(output);\n\t    }\n\n\t    function from(time, withoutSuffix) {\n\t        if (\n\t            this.isValid() &&\n\t            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n\t        ) {\n\t            return createDuration({ to: this, from: time })\n\t                .locale(this.locale())\n\t                .humanize(!withoutSuffix);\n\t        } else {\n\t            return this.localeData().invalidDate();\n\t        }\n\t    }\n\n\t    function fromNow(withoutSuffix) {\n\t        return this.from(createLocal(), withoutSuffix);\n\t    }\n\n\t    function to(time, withoutSuffix) {\n\t        if (\n\t            this.isValid() &&\n\t            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n\t        ) {\n\t            return createDuration({ from: this, to: time })\n\t                .locale(this.locale())\n\t                .humanize(!withoutSuffix);\n\t        } else {\n\t            return this.localeData().invalidDate();\n\t        }\n\t    }\n\n\t    function toNow(withoutSuffix) {\n\t        return this.to(createLocal(), withoutSuffix);\n\t    }\n\n\t    // If passed a locale key, it will set the locale for this\n\t    // instance.  Otherwise, it will return the locale configuration\n\t    // variables for this instance.\n\t    function locale(key) {\n\t        var newLocaleData;\n\n\t        if (key === undefined) {\n\t            return this._locale._abbr;\n\t        } else {\n\t            newLocaleData = getLocale(key);\n\t            if (newLocaleData != null) {\n\t                this._locale = newLocaleData;\n\t            }\n\t            return this;\n\t        }\n\t    }\n\n\t    var lang = deprecate(\n\t        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n\t        function (key) {\n\t            if (key === undefined) {\n\t                return this.localeData();\n\t            } else {\n\t                return this.locale(key);\n\t            }\n\t        }\n\t    );\n\n\t    function localeData() {\n\t        return this._locale;\n\t    }\n\n\t    var MS_PER_SECOND = 1000,\n\t        MS_PER_MINUTE = 60 * MS_PER_SECOND,\n\t        MS_PER_HOUR = 60 * MS_PER_MINUTE,\n\t        MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;\n\n\t    // actual modulo - handles negative numbers (for dates before 1970):\n\t    function mod$1(dividend, divisor) {\n\t        return ((dividend % divisor) + divisor) % divisor;\n\t    }\n\n\t    function localStartOfDate(y, m, d) {\n\t        // the date constructor remaps years 0-99 to 1900-1999\n\t        if (y < 100 && y >= 0) {\n\t            // preserve leap years using a full 400 year cycle, then reset\n\t            return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n\t        } else {\n\t            return new Date(y, m, d).valueOf();\n\t        }\n\t    }\n\n\t    function utcStartOfDate(y, m, d) {\n\t        // Date.UTC remaps years 0-99 to 1900-1999\n\t        if (y < 100 && y >= 0) {\n\t            // preserve leap years using a full 400 year cycle, then reset\n\t            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n\t        } else {\n\t            return Date.UTC(y, m, d);\n\t        }\n\t    }\n\n\t    function startOf(units) {\n\t        var time, startOfDate;\n\t        units = normalizeUnits(units);\n\t        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n\t            return this;\n\t        }\n\n\t        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n\t        switch (units) {\n\t            case 'year':\n\t                time = startOfDate(this.year(), 0, 1);\n\t                break;\n\t            case 'quarter':\n\t                time = startOfDate(\n\t                    this.year(),\n\t                    this.month() - (this.month() % 3),\n\t                    1\n\t                );\n\t                break;\n\t            case 'month':\n\t                time = startOfDate(this.year(), this.month(), 1);\n\t                break;\n\t            case 'week':\n\t                time = startOfDate(\n\t                    this.year(),\n\t                    this.month(),\n\t                    this.date() - this.weekday()\n\t                );\n\t                break;\n\t            case 'isoWeek':\n\t                time = startOfDate(\n\t                    this.year(),\n\t                    this.month(),\n\t                    this.date() - (this.isoWeekday() - 1)\n\t                );\n\t                break;\n\t            case 'day':\n\t            case 'date':\n\t                time = startOfDate(this.year(), this.month(), this.date());\n\t                break;\n\t            case 'hour':\n\t                time = this._d.valueOf();\n\t                time -= mod$1(\n\t                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n\t                    MS_PER_HOUR\n\t                );\n\t                break;\n\t            case 'minute':\n\t                time = this._d.valueOf();\n\t                time -= mod$1(time, MS_PER_MINUTE);\n\t                break;\n\t            case 'second':\n\t                time = this._d.valueOf();\n\t                time -= mod$1(time, MS_PER_SECOND);\n\t                break;\n\t        }\n\n\t        this._d.setTime(time);\n\t        hooks.updateOffset(this, true);\n\t        return this;\n\t    }\n\n\t    function endOf(units) {\n\t        var time, startOfDate;\n\t        units = normalizeUnits(units);\n\t        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n\t            return this;\n\t        }\n\n\t        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n\t        switch (units) {\n\t            case 'year':\n\t                time = startOfDate(this.year() + 1, 0, 1) - 1;\n\t                break;\n\t            case 'quarter':\n\t                time =\n\t                    startOfDate(\n\t                        this.year(),\n\t                        this.month() - (this.month() % 3) + 3,\n\t                        1\n\t                    ) - 1;\n\t                break;\n\t            case 'month':\n\t                time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n\t                break;\n\t            case 'week':\n\t                time =\n\t                    startOfDate(\n\t                        this.year(),\n\t                        this.month(),\n\t                        this.date() - this.weekday() + 7\n\t                    ) - 1;\n\t                break;\n\t            case 'isoWeek':\n\t                time =\n\t                    startOfDate(\n\t                        this.year(),\n\t                        this.month(),\n\t                        this.date() - (this.isoWeekday() - 1) + 7\n\t                    ) - 1;\n\t                break;\n\t            case 'day':\n\t            case 'date':\n\t                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n\t                break;\n\t            case 'hour':\n\t                time = this._d.valueOf();\n\t                time +=\n\t                    MS_PER_HOUR -\n\t                    mod$1(\n\t                        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n\t                        MS_PER_HOUR\n\t                    ) -\n\t                    1;\n\t                break;\n\t            case 'minute':\n\t                time = this._d.valueOf();\n\t                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n\t                break;\n\t            case 'second':\n\t                time = this._d.valueOf();\n\t                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n\t                break;\n\t        }\n\n\t        this._d.setTime(time);\n\t        hooks.updateOffset(this, true);\n\t        return this;\n\t    }\n\n\t    function valueOf() {\n\t        return this._d.valueOf() - (this._offset || 0) * 60000;\n\t    }\n\n\t    function unix() {\n\t        return Math.floor(this.valueOf() / 1000);\n\t    }\n\n\t    function toDate() {\n\t        return new Date(this.valueOf());\n\t    }\n\n\t    function toArray() {\n\t        var m = this;\n\t        return [\n\t            m.year(),\n\t            m.month(),\n\t            m.date(),\n\t            m.hour(),\n\t            m.minute(),\n\t            m.second(),\n\t            m.millisecond(),\n\t        ];\n\t    }\n\n\t    function toObject() {\n\t        var m = this;\n\t        return {\n\t            years: m.year(),\n\t            months: m.month(),\n\t            date: m.date(),\n\t            hours: m.hours(),\n\t            minutes: m.minutes(),\n\t            seconds: m.seconds(),\n\t            milliseconds: m.milliseconds(),\n\t        };\n\t    }\n\n\t    function toJSON() {\n\t        // new Date(NaN).toJSON() === null\n\t        return this.isValid() ? this.toISOString() : null;\n\t    }\n\n\t    function isValid$2() {\n\t        return isValid(this);\n\t    }\n\n\t    function parsingFlags() {\n\t        return extend({}, getParsingFlags(this));\n\t    }\n\n\t    function invalidAt() {\n\t        return getParsingFlags(this).overflow;\n\t    }\n\n\t    function creationData() {\n\t        return {\n\t            input: this._i,\n\t            format: this._f,\n\t            locale: this._locale,\n\t            isUTC: this._isUTC,\n\t            strict: this._strict,\n\t        };\n\t    }\n\n\t    addFormatToken('N', 0, 0, 'eraAbbr');\n\t    addFormatToken('NN', 0, 0, 'eraAbbr');\n\t    addFormatToken('NNN', 0, 0, 'eraAbbr');\n\t    addFormatToken('NNNN', 0, 0, 'eraName');\n\t    addFormatToken('NNNNN', 0, 0, 'eraNarrow');\n\n\t    addFormatToken('y', ['y', 1], 'yo', 'eraYear');\n\t    addFormatToken('y', ['yy', 2], 0, 'eraYear');\n\t    addFormatToken('y', ['yyy', 3], 0, 'eraYear');\n\t    addFormatToken('y', ['yyyy', 4], 0, 'eraYear');\n\n\t    addRegexToken('N', matchEraAbbr);\n\t    addRegexToken('NN', matchEraAbbr);\n\t    addRegexToken('NNN', matchEraAbbr);\n\t    addRegexToken('NNNN', matchEraName);\n\t    addRegexToken('NNNNN', matchEraNarrow);\n\n\t    addParseToken(\n\t        ['N', 'NN', 'NNN', 'NNNN', 'NNNNN'],\n\t        function (input, array, config, token) {\n\t            var era = config._locale.erasParse(input, token, config._strict);\n\t            if (era) {\n\t                getParsingFlags(config).era = era;\n\t            } else {\n\t                getParsingFlags(config).invalidEra = input;\n\t            }\n\t        }\n\t    );\n\n\t    addRegexToken('y', matchUnsigned);\n\t    addRegexToken('yy', matchUnsigned);\n\t    addRegexToken('yyy', matchUnsigned);\n\t    addRegexToken('yyyy', matchUnsigned);\n\t    addRegexToken('yo', matchEraYearOrdinal);\n\n\t    addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);\n\t    addParseToken(['yo'], function (input, array, config, token) {\n\t        var match;\n\t        if (config._locale._eraYearOrdinalRegex) {\n\t            match = input.match(config._locale._eraYearOrdinalRegex);\n\t        }\n\n\t        if (config._locale.eraYearOrdinalParse) {\n\t            array[YEAR] = config._locale.eraYearOrdinalParse(input, match);\n\t        } else {\n\t            array[YEAR] = parseInt(input, 10);\n\t        }\n\t    });\n\n\t    function localeEras(m, format) {\n\t        var i,\n\t            l,\n\t            date,\n\t            eras = this._eras || getLocale('en')._eras;\n\t        for (i = 0, l = eras.length; i < l; ++i) {\n\t            switch (typeof eras[i].since) {\n\t                case 'string':\n\t                    // truncate time\n\t                    date = hooks(eras[i].since).startOf('day');\n\t                    eras[i].since = date.valueOf();\n\t                    break;\n\t            }\n\n\t            switch (typeof eras[i].until) {\n\t                case 'undefined':\n\t                    eras[i].until = +Infinity;\n\t                    break;\n\t                case 'string':\n\t                    // truncate time\n\t                    date = hooks(eras[i].until).startOf('day').valueOf();\n\t                    eras[i].until = date.valueOf();\n\t                    break;\n\t            }\n\t        }\n\t        return eras;\n\t    }\n\n\t    function localeErasParse(eraName, format, strict) {\n\t        var i,\n\t            l,\n\t            eras = this.eras(),\n\t            name,\n\t            abbr,\n\t            narrow;\n\t        eraName = eraName.toUpperCase();\n\n\t        for (i = 0, l = eras.length; i < l; ++i) {\n\t            name = eras[i].name.toUpperCase();\n\t            abbr = eras[i].abbr.toUpperCase();\n\t            narrow = eras[i].narrow.toUpperCase();\n\n\t            if (strict) {\n\t                switch (format) {\n\t                    case 'N':\n\t                    case 'NN':\n\t                    case 'NNN':\n\t                        if (abbr === eraName) {\n\t                            return eras[i];\n\t                        }\n\t                        break;\n\n\t                    case 'NNNN':\n\t                        if (name === eraName) {\n\t                            return eras[i];\n\t                        }\n\t                        break;\n\n\t                    case 'NNNNN':\n\t                        if (narrow === eraName) {\n\t                            return eras[i];\n\t                        }\n\t                        break;\n\t                }\n\t            } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {\n\t                return eras[i];\n\t            }\n\t        }\n\t    }\n\n\t    function localeErasConvertYear(era, year) {\n\t        var dir = era.since <= era.until ? +1 : -1;\n\t        if (year === undefined) {\n\t            return hooks(era.since).year();\n\t        } else {\n\t            return hooks(era.since).year() + (year - era.offset) * dir;\n\t        }\n\t    }\n\n\t    function getEraName() {\n\t        var i,\n\t            l,\n\t            val,\n\t            eras = this.localeData().eras();\n\t        for (i = 0, l = eras.length; i < l; ++i) {\n\t            // truncate time\n\t            val = this.clone().startOf('day').valueOf();\n\n\t            if (eras[i].since <= val && val <= eras[i].until) {\n\t                return eras[i].name;\n\t            }\n\t            if (eras[i].until <= val && val <= eras[i].since) {\n\t                return eras[i].name;\n\t            }\n\t        }\n\n\t        return '';\n\t    }\n\n\t    function getEraNarrow() {\n\t        var i,\n\t            l,\n\t            val,\n\t            eras = this.localeData().eras();\n\t        for (i = 0, l = eras.length; i < l; ++i) {\n\t            // truncate time\n\t            val = this.clone().startOf('day').valueOf();\n\n\t            if (eras[i].since <= val && val <= eras[i].until) {\n\t                return eras[i].narrow;\n\t            }\n\t            if (eras[i].until <= val && val <= eras[i].since) {\n\t                return eras[i].narrow;\n\t            }\n\t        }\n\n\t        return '';\n\t    }\n\n\t    function getEraAbbr() {\n\t        var i,\n\t            l,\n\t            val,\n\t            eras = this.localeData().eras();\n\t        for (i = 0, l = eras.length; i < l; ++i) {\n\t            // truncate time\n\t            val = this.clone().startOf('day').valueOf();\n\n\t            if (eras[i].since <= val && val <= eras[i].until) {\n\t                return eras[i].abbr;\n\t            }\n\t            if (eras[i].until <= val && val <= eras[i].since) {\n\t                return eras[i].abbr;\n\t            }\n\t        }\n\n\t        return '';\n\t    }\n\n\t    function getEraYear() {\n\t        var i,\n\t            l,\n\t            dir,\n\t            val,\n\t            eras = this.localeData().eras();\n\t        for (i = 0, l = eras.length; i < l; ++i) {\n\t            dir = eras[i].since <= eras[i].until ? +1 : -1;\n\n\t            // truncate time\n\t            val = this.clone().startOf('day').valueOf();\n\n\t            if (\n\t                (eras[i].since <= val && val <= eras[i].until) ||\n\t                (eras[i].until <= val && val <= eras[i].since)\n\t            ) {\n\t                return (\n\t                    (this.year() - hooks(eras[i].since).year()) * dir +\n\t                    eras[i].offset\n\t                );\n\t            }\n\t        }\n\n\t        return this.year();\n\t    }\n\n\t    function erasNameRegex(isStrict) {\n\t        if (!hasOwnProp(this, '_erasNameRegex')) {\n\t            computeErasParse.call(this);\n\t        }\n\t        return isStrict ? this._erasNameRegex : this._erasRegex;\n\t    }\n\n\t    function erasAbbrRegex(isStrict) {\n\t        if (!hasOwnProp(this, '_erasAbbrRegex')) {\n\t            computeErasParse.call(this);\n\t        }\n\t        return isStrict ? this._erasAbbrRegex : this._erasRegex;\n\t    }\n\n\t    function erasNarrowRegex(isStrict) {\n\t        if (!hasOwnProp(this, '_erasNarrowRegex')) {\n\t            computeErasParse.call(this);\n\t        }\n\t        return isStrict ? this._erasNarrowRegex : this._erasRegex;\n\t    }\n\n\t    function matchEraAbbr(isStrict, locale) {\n\t        return locale.erasAbbrRegex(isStrict);\n\t    }\n\n\t    function matchEraName(isStrict, locale) {\n\t        return locale.erasNameRegex(isStrict);\n\t    }\n\n\t    function matchEraNarrow(isStrict, locale) {\n\t        return locale.erasNarrowRegex(isStrict);\n\t    }\n\n\t    function matchEraYearOrdinal(isStrict, locale) {\n\t        return locale._eraYearOrdinalRegex || matchUnsigned;\n\t    }\n\n\t    function computeErasParse() {\n\t        var abbrPieces = [],\n\t            namePieces = [],\n\t            narrowPieces = [],\n\t            mixedPieces = [],\n\t            i,\n\t            l,\n\t            eras = this.eras();\n\n\t        for (i = 0, l = eras.length; i < l; ++i) {\n\t            namePieces.push(regexEscape(eras[i].name));\n\t            abbrPieces.push(regexEscape(eras[i].abbr));\n\t            narrowPieces.push(regexEscape(eras[i].narrow));\n\n\t            mixedPieces.push(regexEscape(eras[i].name));\n\t            mixedPieces.push(regexEscape(eras[i].abbr));\n\t            mixedPieces.push(regexEscape(eras[i].narrow));\n\t        }\n\n\t        this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n\t        this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');\n\t        this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');\n\t        this._erasNarrowRegex = new RegExp(\n\t            '^(' + narrowPieces.join('|') + ')',\n\t            'i'\n\t        );\n\t    }\n\n\t    // FORMATTING\n\n\t    addFormatToken(0, ['gg', 2], 0, function () {\n\t        return this.weekYear() % 100;\n\t    });\n\n\t    addFormatToken(0, ['GG', 2], 0, function () {\n\t        return this.isoWeekYear() % 100;\n\t    });\n\n\t    function addWeekYearFormatToken(token, getter) {\n\t        addFormatToken(0, [token, token.length], 0, getter);\n\t    }\n\n\t    addWeekYearFormatToken('gggg', 'weekYear');\n\t    addWeekYearFormatToken('ggggg', 'weekYear');\n\t    addWeekYearFormatToken('GGGG', 'isoWeekYear');\n\t    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n\t    // ALIASES\n\n\t    addUnitAlias('weekYear', 'gg');\n\t    addUnitAlias('isoWeekYear', 'GG');\n\n\t    // PRIORITY\n\n\t    addUnitPriority('weekYear', 1);\n\t    addUnitPriority('isoWeekYear', 1);\n\n\t    // PARSING\n\n\t    addRegexToken('G', matchSigned);\n\t    addRegexToken('g', matchSigned);\n\t    addRegexToken('GG', match1to2, match2);\n\t    addRegexToken('gg', match1to2, match2);\n\t    addRegexToken('GGGG', match1to4, match4);\n\t    addRegexToken('gggg', match1to4, match4);\n\t    addRegexToken('GGGGG', match1to6, match6);\n\t    addRegexToken('ggggg', match1to6, match6);\n\n\t    addWeekParseToken(\n\t        ['gggg', 'ggggg', 'GGGG', 'GGGGG'],\n\t        function (input, week, config, token) {\n\t            week[token.substr(0, 2)] = toInt(input);\n\t        }\n\t    );\n\n\t    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n\t        week[token] = hooks.parseTwoDigitYear(input);\n\t    });\n\n\t    // MOMENTS\n\n\t    function getSetWeekYear(input) {\n\t        return getSetWeekYearHelper.call(\n\t            this,\n\t            input,\n\t            this.week(),\n\t            this.weekday(),\n\t            this.localeData()._week.dow,\n\t            this.localeData()._week.doy\n\t        );\n\t    }\n\n\t    function getSetISOWeekYear(input) {\n\t        return getSetWeekYearHelper.call(\n\t            this,\n\t            input,\n\t            this.isoWeek(),\n\t            this.isoWeekday(),\n\t            1,\n\t            4\n\t        );\n\t    }\n\n\t    function getISOWeeksInYear() {\n\t        return weeksInYear(this.year(), 1, 4);\n\t    }\n\n\t    function getISOWeeksInISOWeekYear() {\n\t        return weeksInYear(this.isoWeekYear(), 1, 4);\n\t    }\n\n\t    function getWeeksInYear() {\n\t        var weekInfo = this.localeData()._week;\n\t        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n\t    }\n\n\t    function getWeeksInWeekYear() {\n\t        var weekInfo = this.localeData()._week;\n\t        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);\n\t    }\n\n\t    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n\t        var weeksTarget;\n\t        if (input == null) {\n\t            return weekOfYear(this, dow, doy).year;\n\t        } else {\n\t            weeksTarget = weeksInYear(input, dow, doy);\n\t            if (week > weeksTarget) {\n\t                week = weeksTarget;\n\t            }\n\t            return setWeekAll.call(this, input, week, weekday, dow, doy);\n\t        }\n\t    }\n\n\t    function setWeekAll(weekYear, week, weekday, dow, doy) {\n\t        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n\t            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n\t        this.year(date.getUTCFullYear());\n\t        this.month(date.getUTCMonth());\n\t        this.date(date.getUTCDate());\n\t        return this;\n\t    }\n\n\t    // FORMATTING\n\n\t    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n\t    // ALIASES\n\n\t    addUnitAlias('quarter', 'Q');\n\n\t    // PRIORITY\n\n\t    addUnitPriority('quarter', 7);\n\n\t    // PARSING\n\n\t    addRegexToken('Q', match1);\n\t    addParseToken('Q', function (input, array) {\n\t        array[MONTH] = (toInt(input) - 1) * 3;\n\t    });\n\n\t    // MOMENTS\n\n\t    function getSetQuarter(input) {\n\t        return input == null\n\t            ? Math.ceil((this.month() + 1) / 3)\n\t            : this.month((input - 1) * 3 + (this.month() % 3));\n\t    }\n\n\t    // FORMATTING\n\n\t    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n\t    // ALIASES\n\n\t    addUnitAlias('date', 'D');\n\n\t    // PRIORITY\n\t    addUnitPriority('date', 9);\n\n\t    // PARSING\n\n\t    addRegexToken('D', match1to2);\n\t    addRegexToken('DD', match1to2, match2);\n\t    addRegexToken('Do', function (isStrict, locale) {\n\t        // TODO: Remove \"ordinalParse\" fallback in next major release.\n\t        return isStrict\n\t            ? locale._dayOfMonthOrdinalParse || locale._ordinalParse\n\t            : locale._dayOfMonthOrdinalParseLenient;\n\t    });\n\n\t    addParseToken(['D', 'DD'], DATE);\n\t    addParseToken('Do', function (input, array) {\n\t        array[DATE] = toInt(input.match(match1to2)[0]);\n\t    });\n\n\t    // MOMENTS\n\n\t    var getSetDayOfMonth = makeGetSet('Date', true);\n\n\t    // FORMATTING\n\n\t    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n\t    // ALIASES\n\n\t    addUnitAlias('dayOfYear', 'DDD');\n\n\t    // PRIORITY\n\t    addUnitPriority('dayOfYear', 4);\n\n\t    // PARSING\n\n\t    addRegexToken('DDD', match1to3);\n\t    addRegexToken('DDDD', match3);\n\t    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n\t        config._dayOfYear = toInt(input);\n\t    });\n\n\t    // HELPERS\n\n\t    // MOMENTS\n\n\t    function getSetDayOfYear(input) {\n\t        var dayOfYear =\n\t            Math.round(\n\t                (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5\n\t            ) + 1;\n\t        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n\t    }\n\n\t    // FORMATTING\n\n\t    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n\t    // ALIASES\n\n\t    addUnitAlias('minute', 'm');\n\n\t    // PRIORITY\n\n\t    addUnitPriority('minute', 14);\n\n\t    // PARSING\n\n\t    addRegexToken('m', match1to2);\n\t    addRegexToken('mm', match1to2, match2);\n\t    addParseToken(['m', 'mm'], MINUTE);\n\n\t    // MOMENTS\n\n\t    var getSetMinute = makeGetSet('Minutes', false);\n\n\t    // FORMATTING\n\n\t    addFormatToken('s', ['ss', 2], 0, 'second');\n\n\t    // ALIASES\n\n\t    addUnitAlias('second', 's');\n\n\t    // PRIORITY\n\n\t    addUnitPriority('second', 15);\n\n\t    // PARSING\n\n\t    addRegexToken('s', match1to2);\n\t    addRegexToken('ss', match1to2, match2);\n\t    addParseToken(['s', 'ss'], SECOND);\n\n\t    // MOMENTS\n\n\t    var getSetSecond = makeGetSet('Seconds', false);\n\n\t    // FORMATTING\n\n\t    addFormatToken('S', 0, 0, function () {\n\t        return ~~(this.millisecond() / 100);\n\t    });\n\n\t    addFormatToken(0, ['SS', 2], 0, function () {\n\t        return ~~(this.millisecond() / 10);\n\t    });\n\n\t    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n\t    addFormatToken(0, ['SSSS', 4], 0, function () {\n\t        return this.millisecond() * 10;\n\t    });\n\t    addFormatToken(0, ['SSSSS', 5], 0, function () {\n\t        return this.millisecond() * 100;\n\t    });\n\t    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n\t        return this.millisecond() * 1000;\n\t    });\n\t    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n\t        return this.millisecond() * 10000;\n\t    });\n\t    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n\t        return this.millisecond() * 100000;\n\t    });\n\t    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n\t        return this.millisecond() * 1000000;\n\t    });\n\n\t    // ALIASES\n\n\t    addUnitAlias('millisecond', 'ms');\n\n\t    // PRIORITY\n\n\t    addUnitPriority('millisecond', 16);\n\n\t    // PARSING\n\n\t    addRegexToken('S', match1to3, match1);\n\t    addRegexToken('SS', match1to3, match2);\n\t    addRegexToken('SSS', match1to3, match3);\n\n\t    var token, getSetMillisecond;\n\t    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n\t        addRegexToken(token, matchUnsigned);\n\t    }\n\n\t    function parseMs(input, array) {\n\t        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n\t    }\n\n\t    for (token = 'S'; token.length <= 9; token += 'S') {\n\t        addParseToken(token, parseMs);\n\t    }\n\n\t    getSetMillisecond = makeGetSet('Milliseconds', false);\n\n\t    // FORMATTING\n\n\t    addFormatToken('z', 0, 0, 'zoneAbbr');\n\t    addFormatToken('zz', 0, 0, 'zoneName');\n\n\t    // MOMENTS\n\n\t    function getZoneAbbr() {\n\t        return this._isUTC ? 'UTC' : '';\n\t    }\n\n\t    function getZoneName() {\n\t        return this._isUTC ? 'Coordinated Universal Time' : '';\n\t    }\n\n\t    var proto = Moment.prototype;\n\n\t    proto.add = add;\n\t    proto.calendar = calendar$1;\n\t    proto.clone = clone;\n\t    proto.diff = diff;\n\t    proto.endOf = endOf;\n\t    proto.format = format;\n\t    proto.from = from;\n\t    proto.fromNow = fromNow;\n\t    proto.to = to;\n\t    proto.toNow = toNow;\n\t    proto.get = stringGet;\n\t    proto.invalidAt = invalidAt;\n\t    proto.isAfter = isAfter;\n\t    proto.isBefore = isBefore;\n\t    proto.isBetween = isBetween;\n\t    proto.isSame = isSame;\n\t    proto.isSameOrAfter = isSameOrAfter;\n\t    proto.isSameOrBefore = isSameOrBefore;\n\t    proto.isValid = isValid$2;\n\t    proto.lang = lang;\n\t    proto.locale = locale;\n\t    proto.localeData = localeData;\n\t    proto.max = prototypeMax;\n\t    proto.min = prototypeMin;\n\t    proto.parsingFlags = parsingFlags;\n\t    proto.set = stringSet;\n\t    proto.startOf = startOf;\n\t    proto.subtract = subtract;\n\t    proto.toArray = toArray;\n\t    proto.toObject = toObject;\n\t    proto.toDate = toDate;\n\t    proto.toISOString = toISOString;\n\t    proto.inspect = inspect;\n\t    if (typeof Symbol !== 'undefined' && Symbol.for != null) {\n\t        proto[Symbol.for('nodejs.util.inspect.custom')] = function () {\n\t            return 'Moment<' + this.format() + '>';\n\t        };\n\t    }\n\t    proto.toJSON = toJSON;\n\t    proto.toString = toString;\n\t    proto.unix = unix;\n\t    proto.valueOf = valueOf;\n\t    proto.creationData = creationData;\n\t    proto.eraName = getEraName;\n\t    proto.eraNarrow = getEraNarrow;\n\t    proto.eraAbbr = getEraAbbr;\n\t    proto.eraYear = getEraYear;\n\t    proto.year = getSetYear;\n\t    proto.isLeapYear = getIsLeapYear;\n\t    proto.weekYear = getSetWeekYear;\n\t    proto.isoWeekYear = getSetISOWeekYear;\n\t    proto.quarter = proto.quarters = getSetQuarter;\n\t    proto.month = getSetMonth;\n\t    proto.daysInMonth = getDaysInMonth;\n\t    proto.week = proto.weeks = getSetWeek;\n\t    proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n\t    proto.weeksInYear = getWeeksInYear;\n\t    proto.weeksInWeekYear = getWeeksInWeekYear;\n\t    proto.isoWeeksInYear = getISOWeeksInYear;\n\t    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;\n\t    proto.date = getSetDayOfMonth;\n\t    proto.day = proto.days = getSetDayOfWeek;\n\t    proto.weekday = getSetLocaleDayOfWeek;\n\t    proto.isoWeekday = getSetISODayOfWeek;\n\t    proto.dayOfYear = getSetDayOfYear;\n\t    proto.hour = proto.hours = getSetHour;\n\t    proto.minute = proto.minutes = getSetMinute;\n\t    proto.second = proto.seconds = getSetSecond;\n\t    proto.millisecond = proto.milliseconds = getSetMillisecond;\n\t    proto.utcOffset = getSetOffset;\n\t    proto.utc = setOffsetToUTC;\n\t    proto.local = setOffsetToLocal;\n\t    proto.parseZone = setOffsetToParsedOffset;\n\t    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n\t    proto.isDST = isDaylightSavingTime;\n\t    proto.isLocal = isLocal;\n\t    proto.isUtcOffset = isUtcOffset;\n\t    proto.isUtc = isUtc;\n\t    proto.isUTC = isUtc;\n\t    proto.zoneAbbr = getZoneAbbr;\n\t    proto.zoneName = getZoneName;\n\t    proto.dates = deprecate(\n\t        'dates accessor is deprecated. Use date instead.',\n\t        getSetDayOfMonth\n\t    );\n\t    proto.months = deprecate(\n\t        'months accessor is deprecated. Use month instead',\n\t        getSetMonth\n\t    );\n\t    proto.years = deprecate(\n\t        'years accessor is deprecated. Use year instead',\n\t        getSetYear\n\t    );\n\t    proto.zone = deprecate(\n\t        'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',\n\t        getSetZone\n\t    );\n\t    proto.isDSTShifted = deprecate(\n\t        'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',\n\t        isDaylightSavingTimeShifted\n\t    );\n\n\t    function createUnix(input) {\n\t        return createLocal(input * 1000);\n\t    }\n\n\t    function createInZone() {\n\t        return createLocal.apply(null, arguments).parseZone();\n\t    }\n\n\t    function preParsePostFormat(string) {\n\t        return string;\n\t    }\n\n\t    var proto$1 = Locale.prototype;\n\n\t    proto$1.calendar = calendar;\n\t    proto$1.longDateFormat = longDateFormat;\n\t    proto$1.invalidDate = invalidDate;\n\t    proto$1.ordinal = ordinal;\n\t    proto$1.preparse = preParsePostFormat;\n\t    proto$1.postformat = preParsePostFormat;\n\t    proto$1.relativeTime = relativeTime;\n\t    proto$1.pastFuture = pastFuture;\n\t    proto$1.set = set;\n\t    proto$1.eras = localeEras;\n\t    proto$1.erasParse = localeErasParse;\n\t    proto$1.erasConvertYear = localeErasConvertYear;\n\t    proto$1.erasAbbrRegex = erasAbbrRegex;\n\t    proto$1.erasNameRegex = erasNameRegex;\n\t    proto$1.erasNarrowRegex = erasNarrowRegex;\n\n\t    proto$1.months = localeMonths;\n\t    proto$1.monthsShort = localeMonthsShort;\n\t    proto$1.monthsParse = localeMonthsParse;\n\t    proto$1.monthsRegex = monthsRegex;\n\t    proto$1.monthsShortRegex = monthsShortRegex;\n\t    proto$1.week = localeWeek;\n\t    proto$1.firstDayOfYear = localeFirstDayOfYear;\n\t    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n\t    proto$1.weekdays = localeWeekdays;\n\t    proto$1.weekdaysMin = localeWeekdaysMin;\n\t    proto$1.weekdaysShort = localeWeekdaysShort;\n\t    proto$1.weekdaysParse = localeWeekdaysParse;\n\n\t    proto$1.weekdaysRegex = weekdaysRegex;\n\t    proto$1.weekdaysShortRegex = weekdaysShortRegex;\n\t    proto$1.weekdaysMinRegex = weekdaysMinRegex;\n\n\t    proto$1.isPM = localeIsPM;\n\t    proto$1.meridiem = localeMeridiem;\n\n\t    function get$1(format, index, field, setter) {\n\t        var locale = getLocale(),\n\t            utc = createUTC().set(setter, index);\n\t        return locale[field](utc, format);\n\t    }\n\n\t    function listMonthsImpl(format, index, field) {\n\t        if (isNumber(format)) {\n\t            index = format;\n\t            format = undefined;\n\t        }\n\n\t        format = format || '';\n\n\t        if (index != null) {\n\t            return get$1(format, index, field, 'month');\n\t        }\n\n\t        var i,\n\t            out = [];\n\t        for (i = 0; i < 12; i++) {\n\t            out[i] = get$1(format, i, field, 'month');\n\t        }\n\t        return out;\n\t    }\n\n\t    // ()\n\t    // (5)\n\t    // (fmt, 5)\n\t    // (fmt)\n\t    // (true)\n\t    // (true, 5)\n\t    // (true, fmt, 5)\n\t    // (true, fmt)\n\t    function listWeekdaysImpl(localeSorted, format, index, field) {\n\t        if (typeof localeSorted === 'boolean') {\n\t            if (isNumber(format)) {\n\t                index = format;\n\t                format = undefined;\n\t            }\n\n\t            format = format || '';\n\t        } else {\n\t            format = localeSorted;\n\t            index = format;\n\t            localeSorted = false;\n\n\t            if (isNumber(format)) {\n\t                index = format;\n\t                format = undefined;\n\t            }\n\n\t            format = format || '';\n\t        }\n\n\t        var locale = getLocale(),\n\t            shift = localeSorted ? locale._week.dow : 0,\n\t            i,\n\t            out = [];\n\n\t        if (index != null) {\n\t            return get$1(format, (index + shift) % 7, field, 'day');\n\t        }\n\n\t        for (i = 0; i < 7; i++) {\n\t            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n\t        }\n\t        return out;\n\t    }\n\n\t    function listMonths(format, index) {\n\t        return listMonthsImpl(format, index, 'months');\n\t    }\n\n\t    function listMonthsShort(format, index) {\n\t        return listMonthsImpl(format, index, 'monthsShort');\n\t    }\n\n\t    function listWeekdays(localeSorted, format, index) {\n\t        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n\t    }\n\n\t    function listWeekdaysShort(localeSorted, format, index) {\n\t        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n\t    }\n\n\t    function listWeekdaysMin(localeSorted, format, index) {\n\t        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n\t    }\n\n\t    getSetGlobalLocale('en', {\n\t        eras: [\n\t            {\n\t                since: '0001-01-01',\n\t                until: +Infinity,\n\t                offset: 1,\n\t                name: 'Anno Domini',\n\t                narrow: 'AD',\n\t                abbr: 'AD',\n\t            },\n\t            {\n\t                since: '0000-12-31',\n\t                until: -Infinity,\n\t                offset: 1,\n\t                name: 'Before Christ',\n\t                narrow: 'BC',\n\t                abbr: 'BC',\n\t            },\n\t        ],\n\t        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n\t        ordinal: function (number) {\n\t            var b = number % 10,\n\t                output =\n\t                    toInt((number % 100) / 10) === 1\n\t                        ? 'th'\n\t                        : b === 1\n\t                        ? 'st'\n\t                        : b === 2\n\t                        ? 'nd'\n\t                        : b === 3\n\t                        ? 'rd'\n\t                        : 'th';\n\t            return number + output;\n\t        },\n\t    });\n\n\t    // Side effect imports\n\n\t    hooks.lang = deprecate(\n\t        'moment.lang is deprecated. Use moment.locale instead.',\n\t        getSetGlobalLocale\n\t    );\n\t    hooks.langData = deprecate(\n\t        'moment.langData is deprecated. Use moment.localeData instead.',\n\t        getLocale\n\t    );\n\n\t    var mathAbs = Math.abs;\n\n\t    function abs() {\n\t        var data = this._data;\n\n\t        this._milliseconds = mathAbs(this._milliseconds);\n\t        this._days = mathAbs(this._days);\n\t        this._months = mathAbs(this._months);\n\n\t        data.milliseconds = mathAbs(data.milliseconds);\n\t        data.seconds = mathAbs(data.seconds);\n\t        data.minutes = mathAbs(data.minutes);\n\t        data.hours = mathAbs(data.hours);\n\t        data.months = mathAbs(data.months);\n\t        data.years = mathAbs(data.years);\n\n\t        return this;\n\t    }\n\n\t    function addSubtract$1(duration, input, value, direction) {\n\t        var other = createDuration(input, value);\n\n\t        duration._milliseconds += direction * other._milliseconds;\n\t        duration._days += direction * other._days;\n\t        duration._months += direction * other._months;\n\n\t        return duration._bubble();\n\t    }\n\n\t    // supports only 2.0-style add(1, 's') or add(duration)\n\t    function add$1(input, value) {\n\t        return addSubtract$1(this, input, value, 1);\n\t    }\n\n\t    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\t    function subtract$1(input, value) {\n\t        return addSubtract$1(this, input, value, -1);\n\t    }\n\n\t    function absCeil(number) {\n\t        if (number < 0) {\n\t            return Math.floor(number);\n\t        } else {\n\t            return Math.ceil(number);\n\t        }\n\t    }\n\n\t    function bubble() {\n\t        var milliseconds = this._milliseconds,\n\t            days = this._days,\n\t            months = this._months,\n\t            data = this._data,\n\t            seconds,\n\t            minutes,\n\t            hours,\n\t            years,\n\t            monthsFromDays;\n\n\t        // if we have a mix of positive and negative values, bubble down first\n\t        // check: https://github.com/moment/moment/issues/2166\n\t        if (\n\t            !(\n\t                (milliseconds >= 0 && days >= 0 && months >= 0) ||\n\t                (milliseconds <= 0 && days <= 0 && months <= 0)\n\t            )\n\t        ) {\n\t            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n\t            days = 0;\n\t            months = 0;\n\t        }\n\n\t        // The following code bubbles up values, see the tests for\n\t        // examples of what that means.\n\t        data.milliseconds = milliseconds % 1000;\n\n\t        seconds = absFloor(milliseconds / 1000);\n\t        data.seconds = seconds % 60;\n\n\t        minutes = absFloor(seconds / 60);\n\t        data.minutes = minutes % 60;\n\n\t        hours = absFloor(minutes / 60);\n\t        data.hours = hours % 24;\n\n\t        days += absFloor(hours / 24);\n\n\t        // convert days to months\n\t        monthsFromDays = absFloor(daysToMonths(days));\n\t        months += monthsFromDays;\n\t        days -= absCeil(monthsToDays(monthsFromDays));\n\n\t        // 12 months -> 1 year\n\t        years = absFloor(months / 12);\n\t        months %= 12;\n\n\t        data.days = days;\n\t        data.months = months;\n\t        data.years = years;\n\n\t        return this;\n\t    }\n\n\t    function daysToMonths(days) {\n\t        // 400 years have 146097 days (taking into account leap year rules)\n\t        // 400 years have 12 months === 4800\n\t        return (days * 4800) / 146097;\n\t    }\n\n\t    function monthsToDays(months) {\n\t        // the reverse of daysToMonths\n\t        return (months * 146097) / 4800;\n\t    }\n\n\t    function as(units) {\n\t        if (!this.isValid()) {\n\t            return NaN;\n\t        }\n\t        var days,\n\t            months,\n\t            milliseconds = this._milliseconds;\n\n\t        units = normalizeUnits(units);\n\n\t        if (units === 'month' || units === 'quarter' || units === 'year') {\n\t            days = this._days + milliseconds / 864e5;\n\t            months = this._months + daysToMonths(days);\n\t            switch (units) {\n\t                case 'month':\n\t                    return months;\n\t                case 'quarter':\n\t                    return months / 3;\n\t                case 'year':\n\t                    return months / 12;\n\t            }\n\t        } else {\n\t            // handle milliseconds separately because of floating point math errors (issue #1867)\n\t            days = this._days + Math.round(monthsToDays(this._months));\n\t            switch (units) {\n\t                case 'week':\n\t                    return days / 7 + milliseconds / 6048e5;\n\t                case 'day':\n\t                    return days + milliseconds / 864e5;\n\t                case 'hour':\n\t                    return days * 24 + milliseconds / 36e5;\n\t                case 'minute':\n\t                    return days * 1440 + milliseconds / 6e4;\n\t                case 'second':\n\t                    return days * 86400 + milliseconds / 1000;\n\t                // Math.floor prevents floating point math errors here\n\t                case 'millisecond':\n\t                    return Math.floor(days * 864e5) + milliseconds;\n\t                default:\n\t                    throw new Error('Unknown unit ' + units);\n\t            }\n\t        }\n\t    }\n\n\t    // TODO: Use this.as('ms')?\n\t    function valueOf$1() {\n\t        if (!this.isValid()) {\n\t            return NaN;\n\t        }\n\t        return (\n\t            this._milliseconds +\n\t            this._days * 864e5 +\n\t            (this._months % 12) * 2592e6 +\n\t            toInt(this._months / 12) * 31536e6\n\t        );\n\t    }\n\n\t    function makeAs(alias) {\n\t        return function () {\n\t            return this.as(alias);\n\t        };\n\t    }\n\n\t    var asMilliseconds = makeAs('ms'),\n\t        asSeconds = makeAs('s'),\n\t        asMinutes = makeAs('m'),\n\t        asHours = makeAs('h'),\n\t        asDays = makeAs('d'),\n\t        asWeeks = makeAs('w'),\n\t        asMonths = makeAs('M'),\n\t        asQuarters = makeAs('Q'),\n\t        asYears = makeAs('y');\n\n\t    function clone$1() {\n\t        return createDuration(this);\n\t    }\n\n\t    function get$2(units) {\n\t        units = normalizeUnits(units);\n\t        return this.isValid() ? this[units + 's']() : NaN;\n\t    }\n\n\t    function makeGetter(name) {\n\t        return function () {\n\t            return this.isValid() ? this._data[name] : NaN;\n\t        };\n\t    }\n\n\t    var milliseconds = makeGetter('milliseconds'),\n\t        seconds = makeGetter('seconds'),\n\t        minutes = makeGetter('minutes'),\n\t        hours = makeGetter('hours'),\n\t        days = makeGetter('days'),\n\t        months = makeGetter('months'),\n\t        years = makeGetter('years');\n\n\t    function weeks() {\n\t        return absFloor(this.days() / 7);\n\t    }\n\n\t    var round = Math.round,\n\t        thresholds = {\n\t            ss: 44, // a few seconds to seconds\n\t            s: 45, // seconds to minute\n\t            m: 45, // minutes to hour\n\t            h: 22, // hours to day\n\t            d: 26, // days to month/week\n\t            w: null, // weeks to month\n\t            M: 11, // months to year\n\t        };\n\n\t    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\t    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n\t        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n\t    }\n\n\t    function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {\n\t        var duration = createDuration(posNegDuration).abs(),\n\t            seconds = round(duration.as('s')),\n\t            minutes = round(duration.as('m')),\n\t            hours = round(duration.as('h')),\n\t            days = round(duration.as('d')),\n\t            months = round(duration.as('M')),\n\t            weeks = round(duration.as('w')),\n\t            years = round(duration.as('y')),\n\t            a =\n\t                (seconds <= thresholds.ss && ['s', seconds]) ||\n\t                (seconds < thresholds.s && ['ss', seconds]) ||\n\t                (minutes <= 1 && ['m']) ||\n\t                (minutes < thresholds.m && ['mm', minutes]) ||\n\t                (hours <= 1 && ['h']) ||\n\t                (hours < thresholds.h && ['hh', hours]) ||\n\t                (days <= 1 && ['d']) ||\n\t                (days < thresholds.d && ['dd', days]);\n\n\t        if (thresholds.w != null) {\n\t            a =\n\t                a ||\n\t                (weeks <= 1 && ['w']) ||\n\t                (weeks < thresholds.w && ['ww', weeks]);\n\t        }\n\t        a = a ||\n\t            (months <= 1 && ['M']) ||\n\t            (months < thresholds.M && ['MM', months]) ||\n\t            (years <= 1 && ['y']) || ['yy', years];\n\n\t        a[2] = withoutSuffix;\n\t        a[3] = +posNegDuration > 0;\n\t        a[4] = locale;\n\t        return substituteTimeAgo.apply(null, a);\n\t    }\n\n\t    // This function allows you to set the rounding function for relative time strings\n\t    function getSetRelativeTimeRounding(roundingFunction) {\n\t        if (roundingFunction === undefined) {\n\t            return round;\n\t        }\n\t        if (typeof roundingFunction === 'function') {\n\t            round = roundingFunction;\n\t            return true;\n\t        }\n\t        return false;\n\t    }\n\n\t    // This function allows you to set a threshold for relative time strings\n\t    function getSetRelativeTimeThreshold(threshold, limit) {\n\t        if (thresholds[threshold] === undefined) {\n\t            return false;\n\t        }\n\t        if (limit === undefined) {\n\t            return thresholds[threshold];\n\t        }\n\t        thresholds[threshold] = limit;\n\t        if (threshold === 's') {\n\t            thresholds.ss = limit - 1;\n\t        }\n\t        return true;\n\t    }\n\n\t    function humanize(argWithSuffix, argThresholds) {\n\t        if (!this.isValid()) {\n\t            return this.localeData().invalidDate();\n\t        }\n\n\t        var withSuffix = false,\n\t            th = thresholds,\n\t            locale,\n\t            output;\n\n\t        if (typeof argWithSuffix === 'object') {\n\t            argThresholds = argWithSuffix;\n\t            argWithSuffix = false;\n\t        }\n\t        if (typeof argWithSuffix === 'boolean') {\n\t            withSuffix = argWithSuffix;\n\t        }\n\t        if (typeof argThresholds === 'object') {\n\t            th = Object.assign({}, thresholds, argThresholds);\n\t            if (argThresholds.s != null && argThresholds.ss == null) {\n\t                th.ss = argThresholds.s - 1;\n\t            }\n\t        }\n\n\t        locale = this.localeData();\n\t        output = relativeTime$1(this, !withSuffix, th, locale);\n\n\t        if (withSuffix) {\n\t            output = locale.pastFuture(+this, output);\n\t        }\n\n\t        return locale.postformat(output);\n\t    }\n\n\t    var abs$1 = Math.abs;\n\n\t    function sign(x) {\n\t        return (x > 0) - (x < 0) || +x;\n\t    }\n\n\t    function toISOString$1() {\n\t        // for ISO strings we do not use the normal bubbling rules:\n\t        //  * milliseconds bubble up until they become hours\n\t        //  * days do not bubble at all\n\t        //  * months bubble up until they become years\n\t        // This is because there is no context-free conversion between hours and days\n\t        // (think of clock changes)\n\t        // and also not between days and months (28-31 days per month)\n\t        if (!this.isValid()) {\n\t            return this.localeData().invalidDate();\n\t        }\n\n\t        var seconds = abs$1(this._milliseconds) / 1000,\n\t            days = abs$1(this._days),\n\t            months = abs$1(this._months),\n\t            minutes,\n\t            hours,\n\t            years,\n\t            s,\n\t            total = this.asSeconds(),\n\t            totalSign,\n\t            ymSign,\n\t            daysSign,\n\t            hmsSign;\n\n\t        if (!total) {\n\t            // this is the same as C#'s (Noda) and python (isodate)...\n\t            // but not other JS (goog.date)\n\t            return 'P0D';\n\t        }\n\n\t        // 3600 seconds -> 60 minutes -> 1 hour\n\t        minutes = absFloor(seconds / 60);\n\t        hours = absFloor(minutes / 60);\n\t        seconds %= 60;\n\t        minutes %= 60;\n\n\t        // 12 months -> 1 year\n\t        years = absFloor(months / 12);\n\t        months %= 12;\n\n\t        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\t        s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n\n\t        totalSign = total < 0 ? '-' : '';\n\t        ymSign = sign(this._months) !== sign(total) ? '-' : '';\n\t        daysSign = sign(this._days) !== sign(total) ? '-' : '';\n\t        hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n\t        return (\n\t            totalSign +\n\t            'P' +\n\t            (years ? ymSign + years + 'Y' : '') +\n\t            (months ? ymSign + months + 'M' : '') +\n\t            (days ? daysSign + days + 'D' : '') +\n\t            (hours || minutes || seconds ? 'T' : '') +\n\t            (hours ? hmsSign + hours + 'H' : '') +\n\t            (minutes ? hmsSign + minutes + 'M' : '') +\n\t            (seconds ? hmsSign + s + 'S' : '')\n\t        );\n\t    }\n\n\t    var proto$2 = Duration.prototype;\n\n\t    proto$2.isValid = isValid$1;\n\t    proto$2.abs = abs;\n\t    proto$2.add = add$1;\n\t    proto$2.subtract = subtract$1;\n\t    proto$2.as = as;\n\t    proto$2.asMilliseconds = asMilliseconds;\n\t    proto$2.asSeconds = asSeconds;\n\t    proto$2.asMinutes = asMinutes;\n\t    proto$2.asHours = asHours;\n\t    proto$2.asDays = asDays;\n\t    proto$2.asWeeks = asWeeks;\n\t    proto$2.asMonths = asMonths;\n\t    proto$2.asQuarters = asQuarters;\n\t    proto$2.asYears = asYears;\n\t    proto$2.valueOf = valueOf$1;\n\t    proto$2._bubble = bubble;\n\t    proto$2.clone = clone$1;\n\t    proto$2.get = get$2;\n\t    proto$2.milliseconds = milliseconds;\n\t    proto$2.seconds = seconds;\n\t    proto$2.minutes = minutes;\n\t    proto$2.hours = hours;\n\t    proto$2.days = days;\n\t    proto$2.weeks = weeks;\n\t    proto$2.months = months;\n\t    proto$2.years = years;\n\t    proto$2.humanize = humanize;\n\t    proto$2.toISOString = toISOString$1;\n\t    proto$2.toString = toISOString$1;\n\t    proto$2.toJSON = toISOString$1;\n\t    proto$2.locale = locale;\n\t    proto$2.localeData = localeData;\n\n\t    proto$2.toIsoString = deprecate(\n\t        'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',\n\t        toISOString$1\n\t    );\n\t    proto$2.lang = lang;\n\n\t    // FORMATTING\n\n\t    addFormatToken('X', 0, 0, 'unix');\n\t    addFormatToken('x', 0, 0, 'valueOf');\n\n\t    // PARSING\n\n\t    addRegexToken('x', matchSigned);\n\t    addRegexToken('X', matchTimestamp);\n\t    addParseToken('X', function (input, array, config) {\n\t        config._d = new Date(parseFloat(input) * 1000);\n\t    });\n\t    addParseToken('x', function (input, array, config) {\n\t        config._d = new Date(toInt(input));\n\t    });\n\n\t    //! moment.js\n\n\t    hooks.version = '2.29.4';\n\n\t    setHookCallback(createLocal);\n\n\t    hooks.fn = proto;\n\t    hooks.min = min;\n\t    hooks.max = max;\n\t    hooks.now = now;\n\t    hooks.utc = createUTC;\n\t    hooks.unix = createUnix;\n\t    hooks.months = listMonths;\n\t    hooks.isDate = isDate;\n\t    hooks.locale = getSetGlobalLocale;\n\t    hooks.invalid = createInvalid;\n\t    hooks.duration = createDuration;\n\t    hooks.isMoment = isMoment;\n\t    hooks.weekdays = listWeekdays;\n\t    hooks.parseZone = createInZone;\n\t    hooks.localeData = getLocale;\n\t    hooks.isDuration = isDuration;\n\t    hooks.monthsShort = listMonthsShort;\n\t    hooks.weekdaysMin = listWeekdaysMin;\n\t    hooks.defineLocale = defineLocale;\n\t    hooks.updateLocale = updateLocale;\n\t    hooks.locales = listLocales;\n\t    hooks.weekdaysShort = listWeekdaysShort;\n\t    hooks.normalizeUnits = normalizeUnits;\n\t    hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n\t    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n\t    hooks.calendarFormat = getCalendarFormat;\n\t    hooks.prototype = proto;\n\n\t    // currently HTML5 input type only supports 24-hour formats\n\t    hooks.HTML5_FMT = {\n\t        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type=\"datetime-local\" />\n\t        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type=\"datetime-local\" step=\"1\" />\n\t        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type=\"datetime-local\" step=\"0.001\" />\n\t        DATE: 'YYYY-MM-DD', // <input type=\"date\" />\n\t        TIME: 'HH:mm', // <input type=\"time\" />\n\t        TIME_SECONDS: 'HH:mm:ss', // <input type=\"time\" step=\"1\" />\n\t        TIME_MS: 'HH:mm:ss.SSS', // <input type=\"time\" step=\"0.001\" />\n\t        WEEK: 'GGGG-[W]WW', // <input type=\"week\" />\n\t        MONTH: 'YYYY-MM', // <input type=\"month\" />\n\t    };\n\n\t    return hooks;\n\n\t})));\n} (moment$1));\n\nvar moment = moment$1.exports;\n\n// formatToTime = 'YYYY-MM-DD HH:mm:ss'\r\n// formatToMinute = 'YYYY-MM-DD HH:mm'\r\n// formatToDate = 'YYYY-MM-DD'\r\n\r\nconst today = () => [moment().startOf('day'), moment().endOf('day')];\r\n\r\nconst yesterday = () => [\r\n\tmoment().subtract(1, 'day').startOf('day'),\r\n\tmoment().endOf('day'),\r\n];\r\n\r\nconst thisWeek = () => [\r\n\tmoment().isoWeekday(1).startOf('day'),\r\n\tmoment().endOf('day'),\r\n];\r\n\r\nconst pastWeek = () => [\r\n\tmoment().isoWeekday(-6).startOf('day'),\r\n\tmoment().isoWeekday(0).endOf('day'),\r\n];\r\n\r\nconst thisMonth = () => [moment().date(1).startOf('day'), moment().endOf('day')];\r\n\r\nconst pastMonth = () => [\r\n\tmoment()\r\n\t\t.month(moment().month() - 1)\r\n\t\t.date(1)\r\n\t\t.startOf('day'),\r\n\tmoment()\r\n\t\t.month(moment().month() - 1)\r\n\t\t.endOf('month'),\r\n];\r\n\r\n// const msTranslate = (ms = 0) => {\r\n// \tconst sec = 1000\r\n// \tconst min = sec * 60\r\n// \t// const hour = min * 60\r\n// \t// const day = hour * 24\r\n// \t// const cDay = Math.floor(ms / day)\r\n// \t// const cHour = Math.floor((ms / hour) % 24)\r\n// \tconst cMin = Math.floor((ms / min) % 60)\r\n// \tconst cSec = Math.floor((ms / sec) % 60)\r\n//\r\n// \t// return `${cDay}天 ${cHour}時 ${cMin}分 ${cSec}秒`\r\n// \tif (cMin > 0) {\r\n// \t\treturn `${cMin}${t('簡寫:分')} ${cSec}${t('簡寫:秒')}`\r\n// \t} else {\r\n// \t\treturn `${cSec}${t('簡寫:秒')}`\r\n// \t}\r\n// }\r\n\r\nvar mtime = {\r\n\ttoday,\r\n\tyesterday,\r\n\tthisWeek,\r\n\tpastWeek,\r\n\tthisMonth,\r\n\tpastMonth,\r\n};\n\nconst start$2 =\r\n\tstate =>\r\n\t(callback, delay = 0) => {\r\n\t\tstop$2(state)();\r\n\t\tstate.timer = setTimeout(() => callback(), delay);\r\n\t};\r\n\r\nconst startSync =\r\n\tstate =>\r\n\t(promiseFun, delay = 0) => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tstop$2(state)();\r\n\t\t\tstate.timer = setTimeout(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst res = await promiseFun();\r\n\t\t\t\t\tstate.timer = null;\r\n\t\t\t\t\tresolve(res);\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tconsole.error(err);\r\n\t\t\t\t\tstate.timer = null;\r\n\t\t\t\t\treject(err);\r\n\t\t\t\t}\r\n\t\t\t}, delay);\r\n\t\t})\r\n\t};\r\n\r\nconst stop$2 = state => () => {\r\n\tif (state.timer != null) {\r\n\t\tclearTimeout(state.timer);\r\n\t\tstate.timer = null;\r\n\t}\r\n};\r\n\r\nconst timeout = () => {\r\n\tconst state = { timer: null };\r\n\treturn {\r\n\t\tstart: start$2(state),\r\n\t\tstartSync: startSync(state),\r\n\t\tstop: stop$2(state),\r\n\t}\r\n};\n\nconst start$1 =\r\n\tstate =>\r\n\t(callback, delay = 0) => {\r\n\t\tstop$1(state)();\r\n\t\tstate.timer = setInterval(() => callback(), delay);\r\n\t};\r\n\r\nconst stop$1 = state => () => {\r\n\tif (state.timer != null) {\r\n\t\tclearInterval(state.timer);\r\n\t\tstate.timer = null;\r\n\t}\r\n};\r\n\r\nconst interval = () => {\r\n\tconst state = { timer: null };\r\n\treturn {\r\n\t\tstart: start$1(state),\r\n\t\tstop: stop$1(state),\r\n\t}\r\n};\n\nconst start = state => callback => {\r\n\tfunction run() {\r\n\t\tcallback();\r\n\t\tstate.timer = requestAnimationFrame(run);\r\n\t}\r\n\r\n\tstate.timer = requestAnimationFrame(run);\r\n};\r\n\r\nconst stop = state => () => {\r\n\tcancelAnimationFrame(state.timer);\r\n};\r\n\r\nconst aniFrame = () => {\r\n\tlet state = { timer: null };\r\n\treturn {\r\n\t\tstart: start(state),\r\n\t\tstop: stop(state),\r\n\t}\r\n};\n\nconst generateId = (length = 6) => {\r\n\tlet result = '';\r\n\tconst characters =\r\n\t\t'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\tconst charactersLength = characters.length;\r\n\tfor (let i = 0; i < length; i++) {\r\n\t\tresult += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n\t}\r\n\treturn result\r\n};\n\nconst mergeWords = (...conditionTextArr) => {\r\n\tif (!conditionTextArr) return ''\r\n\r\n\tlet resultWord = '';\r\n\tlet first = true;\r\n\tfor (let i = 0; i < conditionTextArr.length; i++) {\r\n\t\tconst e = conditionTextArr[i];\r\n\t\tif (e) {\r\n\t\t\tif (first) {\r\n\t\t\t\tfirst = false;\r\n\t\t\t\tresultWord += e;\r\n\t\t\t} else {\r\n\t\t\t\tresultWord += ' ' + e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn resultWord\r\n};\n\nconst findNestedDynamicObj = (obj, key) => {\r\n\tif (typeof obj !== 'object') {\r\n\t\tconsole.warn(`[findNestedDynamicObj::warn] obj 請傳 {}`);\r\n\t\treturn key\r\n\t}\r\n\tconst _key = typeof key === 'string' ? key : String(key);\r\n\tconst ks = _key.split('.');\r\n\tlet el = obj[_key] || key;\r\n\r\n\tif (typeof el !== 'object' && ks.length < 2) {\r\n\t\treturn el\r\n\t}\r\n\r\n\tel = obj[ks[0]];\r\n\tfor (let i = 1; i < ks.length; i++) {\r\n\t\tif (el == null) {\r\n\t\t\tbreak\r\n\t\t}\r\n\r\n\t\tconst k = ks[i];\r\n\t\tel = el[k] || key;\r\n\r\n\t\tif (typeof el !== 'object') {\r\n\t\t\tif (i !== ks.length - 1) {\r\n\t\t\t\tel = key;\r\n\t\t\t}\r\n\t\t\tbreak\r\n\t\t}\r\n\t}\r\n\r\n\treturn el || key\r\n};\n\nexport { aniFrame, checkIncludeText, checkSameChinese, createEnum, declareEnum, findNestedDynamicObj, generateId, interval, mergeWords, mtime, stepPrice, timeout, toSimple, toTraditional };\n"],
  "mappings": "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",
  "names": ["t", "key", "global", "format", "locale", "to", "from", "now", "sign", "token", "ordinal", "i", "diff", "localeData", "hours", "minutes", "tokens", "meridiem", "years", "months", "weeks", "days", "seconds", "milliseconds", "offset", "thresholds"]
}
